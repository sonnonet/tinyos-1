<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x407e5400"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40428078"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40428078"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4041f778"/></to>
    </wire>
    <wire loc="27:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407fccd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408350a0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408350a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40831e58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40811480"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4094a5a8"/></to>
    </wire>
    <wire loc="40:/usr/src/tinyos/tos/platforms/ucmini/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4094a5a8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x40947ea0"/></to>
    </wire>
    <wire loc="29:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407f8040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a6a20"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407a6a20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407c1470"/></to>
    </wire>
    <wire loc="41:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x407e5838"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40af9630"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40af9630"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b05988"/></to>
    </wire>
    <wire loc="42:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x407e5f18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405250e0"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405250e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4058ad10"/></to>
    </wire>
    <wire loc="43:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x407e4600"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40adb9e8"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40adb9e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ae6af0"/></to>
    </wire>
    <wire loc="45:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407e4a38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4121c120"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4121c120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4167aae8"/></to>
    </wire>
    <wire loc="46:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x407e2930"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411ff460"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x411ff460"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416715b8"/></to>
    </wire>
    <wire loc="47:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x407e21f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40ad9250"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407e2550"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40adab68"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x407f21a0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40ae8060"/></to>
    </wire>
    <wire loc="83:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40ae8060"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40b00b80"/></to>
    </wire>
    <wire loc="54:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x40803da0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4123c278"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x4123c278"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4169d9d0"/></to>
    </wire>
    <wire loc="55:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x407efab8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x41239638"/></to>
    </wire>
    <wire loc="62:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4122a5f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40428078"/></to>
    </wire>
    <wire loc="63:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x41226c98"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4122f238"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4122f238"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416d2858"/></to>
    </wire>
    <wire loc="64:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x4122aab8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41236638"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x41236638"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416e2aa0"/></to>
    </wire>
    <wire loc="65:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x41227108"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x41233978"/></to>
    </wire>
    <wire loc="66:MultihopOscilloscopeAppC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40ae2d80"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x4122deb0"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416e26f8"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4169d628"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415d62e8"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415e5350"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415a0b70"/></to>
    </wire>
    <wire loc="113:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40e794d8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dd75f0"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x414c9938"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d2d178"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414997b8"/></to>
    </wire>
    <wire loc="96:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41420070"/></to>
    </wire>
    <wire loc="150:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411c5e80"/></to>
    </wire>
    <wire loc="175:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fff010"/></to>
    </wire>
    <wire loc="226:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41075010"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413664b8"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4096e280"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x406be9f8"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x406ba4c0"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40673398"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4058a978"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404e9860"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4041fb10"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403f9738"/></to>
    </wire>
    <wire loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407d4100"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40e7be68"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407d4100"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413a8e28"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407d4100"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40420510"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40420510"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4042aa48"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x407d4508"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042dd98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4044c960"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404265b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d9450"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x40429238"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x404265b8"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x4042ae38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40425610"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40425610"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40446e00"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x40429608"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40466010"/></to>
    </wire>
    <wire loc="40:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x40466010"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40466850"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40425a18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4152d130"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40425a18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408d8d70"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40425a18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41325470"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40425a18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4071c010"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40443628"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x40425a18"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404439d8"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x40425dc8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x40443da0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x4044f248"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40443260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4044c5b0"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Toggle" scoped="" ref="0x4046cda0"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x40469688"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x40469688"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40483c08"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4046a1d0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404798e0"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404798e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x4046abd8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x404d5438"/></to>
    </wire>
    <wire loc="145:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40483c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4048e2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x4047a830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4048bea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404910a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40497830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4046e4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40487c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4047e0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40484750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40489ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40471120"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40477750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4047dea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40481670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40490ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x4048c3d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40480a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4046f010"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40475750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4048eee8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40474c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404852f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4048a8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40491a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4046eea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404782f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4047ea98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x40483210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40488750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40471b18"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40476210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4047c8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4048f8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4047bce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4048b4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40486670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4048cdc8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4046fa08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x40474210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40487210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4047f670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40485ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404892f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404904b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404686f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40478ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4047d4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4048d900"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404800a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4047b2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40470590"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40476c88"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x404f3708"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x40502758"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x40502758"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x404fe010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x404f3dc8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40502d90"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40502d90"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x40476c88"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x404e7980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405250e0"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x404f1ab0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x404f4388"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x404fe010"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x404fc9b8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40518eb8"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40505428"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4058ad10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4059f0f8"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40535be0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40553be8"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40546068"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058c310"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40522100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405523a8"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4053d010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058c9a8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405526d0"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4058a978"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405a0d48"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40591840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4053d548"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4058ced0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40587c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4058b5a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40587618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40591338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40713b80"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40587c20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4064c710"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40587618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4064c350"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x4064cea0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40591338"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405a8720"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40591840"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4065de50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40591840"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40656340"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40591840"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4065d3c0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405a9bd8"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x4065d898"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x405ab7f8"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x405b5e88"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x4065a718"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x405b2760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40659608"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40659608"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4067a330"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406639e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40659a88"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40659a88"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4067ac20"/></to>
    </wire>
    <wire loc="332:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x405e77a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x405c3b28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x405e8010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x405e4428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x4065cdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x4065b270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406788f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x4067a7a0"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x4067a7a0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40673ae8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4067ac20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40673f00"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4067a330"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406736d0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40685418"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40676c48"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40676c48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406fc490"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406acc88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40685418"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x406847b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x406c1688"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x406c1688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x406bee48"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40684be8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x406c1b98"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x406c1b98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x406bb3a8"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x406ac050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x406c00b8"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x406c00b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x406bb8c0"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x406bf760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x406b8390"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x406c0cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x406ba910"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x406bf268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x406bae40"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x406cb3e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042dd98"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406cbb20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406cbb20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40ea4a40"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40a80d18"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40883a90"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407536f8"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406cb010"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407176f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407153f0"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407153f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40710918"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4070fb60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40722b68"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40722b68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4071c448"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x407385f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40734878"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40734878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4074da80"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4074e1d8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407556a8"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40740f08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40749b98"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40740f08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40746f10"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40740f08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40758320"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40753ae8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407a4a38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a6a20"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407a4010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40587c20"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407a46f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40587618"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40591338"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x407a7a28"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x407a2218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407d9450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407c1128"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407c0480"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x407c3c20"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407c3c20"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x40475750"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407c0e68"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x407db660"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407db660"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40474210"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407bf860"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x407da060"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407da060"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x40475750"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x407be2e0"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x407daa48"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x407daa48"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40474210"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403f8010"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403f8c70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403324a0"/></to>
    </wire>
    <wire loc="49:MultihopOscilloscopeC.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x40810480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40831e58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4091ea60"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409238d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40844cf0"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40844cf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4132e240"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40952e30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408fe5d8"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x4132bf10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41332868"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41332868"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x413258a8"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4132dcd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408d09f8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408d09f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408e8030"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x413232e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40867cd8"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40867cd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40878d50"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x413202b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40861100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x4087b490"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40886ac0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40861100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40873e88"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40861100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4086f248"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40861100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40889680"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40883e80"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408dde30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408d7270"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x408d6420"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40867cd8"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x408e6298"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408dde30"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40921298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4094d050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x40947ea0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x4095e9a8"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x40963bb8"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x4095d6f0"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40971130"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409875a8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x409875a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40831e58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4095a158"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x409a4aa8"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x409a4aa8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x4099de60"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x4096b468"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4099f9d8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4099f9d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4099d718"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40968b00"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x4099e208"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x4099e208"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40a956a0"/></to>
    </wire>
    <wire loc="153:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <from><interface-ref name="signalReadDone" scoped="" ref="0x40979eb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x409913b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40a956a0"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40ab5e00"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4099d718"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409968e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x4099de60"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x409b2460"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409968e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409ff9e0"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x409b2460"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x409fe298"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x40a22230"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409adce8"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409adce8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41364960"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a229a8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40a1b2e0"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x40a20860"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x40a68240"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x409e8940"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40a1cd80"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a01070"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x409eb890"/></to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x409eb890"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413634d0"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40a68598"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40a63538"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40a63538"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40a5f5d8"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x40a67c90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40a82378"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x40a66c90"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40a82378"/></to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x409eb488"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x413630c8"/></to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x409ebf28"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41363b68"/></to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41362068"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x409ea3e8"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x41362490"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x413667f0"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x413619f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x40a7f140"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x4047bce8"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x40a7fb40"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x4047a830"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a7e558"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40ab5e00"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x413acb08"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40ab44f0"/></from>
      <to><interface-ref name="PortF1" scoped="" ref="0x40487c08"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x413a84d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40ab44f0"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x413ab2e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x413a6010"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x413a6010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40831e58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40b00b80"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x411c7010"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40ad8980"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40add578"/></to>
    </wire>
    <wire loc="121:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40add578"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40ffd078"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40ad5ec0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40adea08"/></to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40adea08"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40ffe6a8"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ad8240"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40aded60"/></to>
    </wire>
    <wire loc="119:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40aded60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ffe9d0"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40ad9250"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40ade360"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40ade360"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40ffe2e8"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ada158"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40adf260"/></to>
    </wire>
    <wire loc="114:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40adf260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fff7b8"/></to>
    </wire>
    <wire loc="81:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40ae9328"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40adcd80"/></to>
    </wire>
    <wire loc="165:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40adcd80"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x411c74e8"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40adab68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40adfc70"/></to>
    </wire>
    <wire loc="116:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40adfc70"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fffef8"/></to>
    </wire>
    <wire loc="82:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40acabd0"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40b00718"/></to>
    </wire>
    <wire loc="123:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40b00718"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40ffc7f0"/></to>
    </wire>
    <wire loc="79:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40acbe70"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40addd50"/></to>
    </wire>
    <wire loc="122:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40addd50"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40ffd7f0"/></to>
    </wire>
    <wire loc="115:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40ae6af0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fff328"/></to>
    </wire>
    <wire loc="147:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40ae6af0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x411c5150"/></to>
    </wire>
    <wire loc="148:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40ae6af0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41078660"/></to>
    </wire>
    <wire loc="85:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40aff438"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40ae7120"/></to>
    </wire>
    <wire loc="86:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40aff868"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40ae2d80"/></to>
    </wire>
    <wire loc="190:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40afbd18"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x41076618"/></to>
    </wire>
    <wire loc="120:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x41026010"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40aff438"/></to>
    </wire>
    <wire loc="127:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x40ff5e40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x410419b8"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x410419b8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x415e56f8"/></to>
    </wire>
    <wire loc="128:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x40ff2448"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4101e5b0"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x4101e5b0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x415a0f18"/></to>
    </wire>
    <wire loc="131:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x40ff6228"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x4102ed58"/></to>
    </wire>
    <wire loc="134:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x4102a978"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x4102b7b8"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x4102b7b8"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x415d66b0"/></to>
    </wire>
    <wire loc="139:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40ff8b88"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x41076618"/></to>
    </wire>
    <wire loc="151:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x411c4200"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41078ae8"/></to>
    </wire>
    <wire loc="152:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x411c48b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41076278"/></to>
    </wire>
    <wire loc="153:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x411c4bd0"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x41076618"/></to>
    </wire>
    <wire loc="155:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x411bccc0"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x41072dd0"/></to>
    </wire>
    <wire loc="157:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411c35b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40b25288"/></to>
    </wire>
    <wire loc="158:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x411c2250"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40af9630"/></to>
    </wire>
    <wire loc="159:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x411c28b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x410491e8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x410491e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40831e58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x411c0b48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x410810a0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x410810a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40831e58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x411bc230"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40aff868"/></to>
    </wire>
    <wire loc="162:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x41024330"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40aff868"/></to>
    </wire>
    <wire loc="163:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x41029d90"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x411c74e8"/></to>
    </wire>
    <wire loc="164:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x411bc8c8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40ffc7f0"/></to>
    </wire>
    <wire loc="169:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x40ffb898"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x411f66a8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x411f66a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40831e58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x411bdd98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40dd8948"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40dd8948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40dd4478"/></to>
    </wire>
    <wire loc="173:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41025f28"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40dd8948"/></to>
    </wire>
    <wire loc="176:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ffcc38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x410f8ed8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410f8ed8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4160e6f0"/></to>
    </wire>
    <wire loc="177:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41029740"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411252c0"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x411252c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40af68d8"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x41029a78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4111fca8"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4111fca8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40af5010"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ff7ab0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x410f7580"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x410f7580"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4160ed88"/></to>
    </wire>
    <wire loc="180:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x41028a10"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x411c7010"/></to>
    </wire>
    <wire loc="181:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40ff74d8"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x411c89b8"/></to>
    </wire>
    <wire loc="182:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x410249e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40af9630"/></to>
    </wire>
    <wire loc="183:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ffb310"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41128870"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41128870"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4160c170"/></to>
    </wire>
    <wire loc="184:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41026438"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x410f7c18"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410f7c18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4160d4d0"/></to>
    </wire>
    <wire loc="185:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41025030"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a6a20"/></to>
    </wire>
    <wire loc="192:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41071560"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40dd8948"/></to>
    </wire>
    <wire loc="194:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410741d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411f1a58"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x411f1a58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4168f010"/></to>
    </wire>
    <wire loc="195:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41073dd8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411eea48"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x411eea48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40af68d8"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41073670"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x411f0150"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411f0150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4168f6a8"/></to>
    </wire>
    <wire loc="197:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x41074950"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x411f07e8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411f07e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4168fd40"/></to>
    </wire>
    <wire loc="221:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x41071208"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40b16638"/></to>
    </wire>
    <wire loc="101:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40b16638"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40b43180"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b05988"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b37b00"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40af1770"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40b27988"/></to>
    </wire>
    <wire loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40b27988"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40b33b88"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40af9f08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40b022a8"/></to>
    </wire>
    <wire loc="82:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40b022a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40b34470"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40af5010"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40b27310"/></to>
    </wire>
    <wire loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40b27310"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40b33510"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40af1ac8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40b26b38"/></to>
    </wire>
    <wire loc="90:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40b26b38"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40b31a70"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40b12e58"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40b23598"/></to>
    </wire>
    <wire loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40b23598"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40b492e0"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40af68d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b02c68"/></to>
    </wire>
    <wire loc="83:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b02c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b34e30"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b112a8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b17478"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b17478"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b42260"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40af3010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b23010"/></to>
    </wire>
    <wire loc="93:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b23010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b29cb0"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40b0d7a0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40b23bb8"/></to>
    </wire>
    <wire loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40b23bb8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40b49900"/></to>
    </wire>
    <wire loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b25288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40b32cf8"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b0bc58"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b3aea8"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b3aea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b40d18"/></to>
    </wire>
    <wire loc="208:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b37b00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d61b88"/></to>
    </wire>
    <wire loc="100:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40b1b4d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40b46f08"/></to>
    </wire>
    <wire loc="297:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40b46f08"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40e8c980"/></to>
    </wire>
    <wire loc="259:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b40d18"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40dfa6f8"/></to>
    </wire>
    <wire loc="125:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40b33b88"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40c3cc28"/></to>
    </wire>
    <wire loc="127:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40b31a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c3d5b0"/></to>
    </wire>
    <wire loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40b34470"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40c3dce0"/></to>
    </wire>
    <wire loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40b33510"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40c3c868"/></to>
    </wire>
    <wire loc="99:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40b1c0f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40b47ae8"/></to>
    </wire>
    <wire loc="295:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40b47ae8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40e8d618"/></to>
    </wire>
    <wire loc="209:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40b492e0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40d53150"/></to>
    </wire>
    <wire loc="123:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b34e30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c3c488"/></to>
    </wire>
    <wire loc="258:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b42260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40e58ec8"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b158a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b43678"/></to>
    </wire>
    <wire loc="299:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b43678"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40e868b8"/></to>
    </wire>
    <wire loc="98:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40b1dce0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40b48730"/></to>
    </wire>
    <wire loc="296:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40b48730"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40e88158"/></to>
    </wire>
    <wire loc="240:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b29cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dcbb18"/></to>
    </wire>
    <wire loc="87:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40b26100"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40b322a8"/></to>
    </wire>
    <wire loc="129:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40b322a8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40c3b030"/></to>
    </wire>
    <wire loc="188:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40b49900"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40d3f568"/></to>
    </wire>
    <wire loc="126:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b32cf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40c3e940"/></to>
    </wire>
    <wire loc="96:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40b1f660"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40b48040"/></to>
    </wire>
    <wire loc="217:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40b48040"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40d4ec20"/></to>
    </wire>
    <wire loc="298:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40b43180"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40e863c0"/></to>
    </wire>
    <wire loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40b267e0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40b32988"/></to>
    </wire>
    <wire loc="130:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40b32988"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40c3b410"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d61b88"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40d53758"/></to>
    </wire>
    <wire loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40e8c980"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40e76b98"/></to>
    </wire>
    <wire loc="161:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40b2f0c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40c92488"/></to>
    </wire>
    <wire loc="149:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x40b2f7d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c53420"/></to>
    </wire>
    <wire loc="98:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c53420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4141e3d8"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40c3cc28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x41403a68"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40c3dce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41404b20"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40c3c868"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x414036a8"/></to>
    </wire>
    <wire loc="162:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40b4a9c0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40cf6170"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40cf6170"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x41479950"/></to>
    </wire>
    <wire loc="163:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40b29538"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40c803b0"/></to>
    </wire>
    <wire loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40e8d618"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40e77838"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40d53150"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x414cd010"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40c3d5b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x414043f0"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c3c488"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x414032c8"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40e58ec8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x41517ca8"/></to>
    </wire>
    <wire loc="81:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40e868b8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40f1f110"/></to>
    </wire>
    <wire loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40e88158"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40ea63d8"/></to>
    </wire>
    <wire loc="159:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40b2a458"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40c80a48"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40c3b030"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x41403e48"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40d3f568"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40d37910"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40d4ec20"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x414c8490"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c3e940"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41405788"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40dfa6f8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x415194f0"/></to>
    </wire>
    <wire loc="160:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40b2abe8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40c92170"/></to>
    </wire>
    <wire loc="96:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40e863c0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ea4680"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40c3b410"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x41402248"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b87d18"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40cf8658"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40cf8658"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x41480f20"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40b822b0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40b9e108"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b7eef0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40e58ec8"/></to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x40b7e528"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40e5ac48"/></to>
    </wire>
    <wire loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40e5ac48"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40e78e70"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b9e9c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e85340"/></to>
    </wire>
    <wire loc="101:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40e85340"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e7d808"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c3a768"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40b6e2d0"/></to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c3bf20"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40c35538"/></to>
    </wire>
    <wire loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c3a430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x40c8b748"/></to>
    </wire>
    <wire loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c3b788"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40c8ba80"/></to>
    </wire>
    <wire loc="138:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c34010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c53420"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c35a60"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x40c8b250"/></to>
    </wire>
    <wire loc="154:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40c927d0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40cf8658"/></to>
    </wire>
    <wire loc="155:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c909e8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40c8c228"/></to>
    </wire>
    <wire loc="156:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c90ee0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40c8c720"/></to>
    </wire>
    <wire loc="157:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c90250"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40c8ca58"/></to>
    </wire>
    <wire loc="170:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c99280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40cf2388"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40cf2388"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4149cea0"/></to>
    </wire>
    <wire loc="171:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c99778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d3f250"/></to>
    </wire>
    <wire loc="114:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d3f250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d38938"/></to>
    </wire>
    <wire loc="172:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c99ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40cf6b88"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40cf6b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x414783f0"/></to>
    </wire>
    <wire loc="177:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40cf5368"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40d3fc00"/></to>
    </wire>
    <wire loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40d3fc00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40d38c70"/></to>
    </wire>
    <wire loc="182:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40d42668"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40b5f010"/></to>
    </wire>
    <wire loc="183:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cf2ca8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d40d38"/></to>
    </wire>
    <wire loc="113:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d40d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d38440"/></to>
    </wire>
    <wire loc="189:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d373f8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dcbb18"/></to>
    </wire>
    <wire loc="190:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d38440"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d60178"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d60178"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d53d30"/></to>
    </wire>
    <wire loc="191:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d38938"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d60670"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d60670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d52250"/></to>
    </wire>
    <wire loc="192:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d38c70"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40d60988"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40d60988"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40d52588"/></to>
    </wire>
    <wire loc="204:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40d53758"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d4fd98"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d4fd98"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x414c9360"/></to>
    </wire>
    <wire loc="205:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d53d30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d4e410"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d4e410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x414c9c70"/></to>
    </wire>
    <wire loc="206:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d52250"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d4e908"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d4e908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x414c8178"/></to>
    </wire>
    <wire loc="207:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d52588"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40e565b0"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40e565b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41515330"/></to>
    </wire>
    <wire loc="214:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40d9f8f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40d9b538"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40d9b538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x414f51e8"/></to>
    </wire>
    <wire loc="215:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40d9fdd0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40cf2860"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40cf2860"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x414993c0"/></to>
    </wire>
    <wire loc="216:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40d9f180"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40e6e070"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40e6e070"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40e6ce68"/></to>
    </wire>
    <wire loc="221:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d42250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40d9ba10"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40d9ba10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x414f56c0"/></to>
    </wire>
    <wire loc="230:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40ddae20"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40b51e28"/></to>
    </wire>
    <wire loc="231:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d9be58"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40dcb248"/></to>
    </wire>
    <wire loc="232:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40dda370"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40dcb720"/></to>
    </wire>
    <wire loc="233:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40dda768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40b9e108"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="238:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40de1988"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40e50af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="239:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40dca950"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40b9e108"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="241:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40de1030"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40b587e8"/></to>
    </wire>
    <wire loc="242:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40dca060"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40e033f0"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40e033f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40dff330"/></to>
    </wire>
    <wire loc="243:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40dca558"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40e038c8"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40e038c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40dff828"/></to>
    </wire>
    <wire loc="248:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40dfe828"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40b6d240"/></to>
    </wire>
    <wire loc="249:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40dff330"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40e6e7e8"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40e6e7e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40e6b6a0"/></to>
    </wire>
    <wire loc="250:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40dff828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40e6ecc0"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40e6ecc0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40e6bb98"/></to>
    </wire>
    <wire loc="251:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40dffc40"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40e5a7e0"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40e5a7e0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40e78a08"/></to>
    </wire>
    <wire loc="256:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40e56e08"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40e868b8"/></to>
    </wire>
    <wire loc="257:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40e55698"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40e4f150"/></to>
    </wire>
    <wire loc="260:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40e55e30"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40e50af0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="265:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40e4f918"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40e5ac48"/></to>
    </wire>
    <wire loc="275:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40e6abc0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40b6d240"/></to>
    </wire>
    <wire loc="276:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e6b6a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40e65da0"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40e65da0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40e62cc8"/></to>
    </wire>
    <wire loc="277:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e6bb98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40e5a390"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40e5a390"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40e785b8"/></to>
    </wire>
    <wire loc="278:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40e6ce68"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40e65628"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40e65628"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40e624b0"/></to>
    </wire>
    <wire loc="287:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40e624b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40e5d5b0"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40e5d5b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40e79858"/></to>
    </wire>
    <wire loc="288:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e62cc8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40e5dd88"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40e5dd88"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40e78060"/></to>
    </wire>
    <wire loc="293:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40e84e20"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40b5d640"/></to>
    </wire>
    <wire loc="294:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40e826f0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40e58ec8"/></to>
    </wire>
    <wire loc="301:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40e81ec0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40e50af0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="302:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40e80580"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40e50af0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="303:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40e80c40"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40e50af0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40b9e108"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x414153d0"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41415bc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b9e9c0"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x41412530"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40bd7a80"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41400010"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c22d60"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x414025c0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c3b788"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41402d58"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c3bf20"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41401330"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c3a430"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41401668"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c3a768"/></to>
    </wire>
    <wire loc="99:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40c53b60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4141eb18"/></to>
    </wire>
    <wire loc="100:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40c59010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4141ef20"/></to>
    </wire>
    <wire loc="101:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4141d3f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c594c0"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4141d820"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x414203a8"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x4141de18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41478b98"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c22d60"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41477250"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40cf5368"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x414989e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40d32540"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40d32540"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40d2d510"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41497150"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41496578"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41496578"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40d2c010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41499b20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40cf2ca8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41498030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d42250"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x41498428"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40d42668"/></to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40d64010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d373f8"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x414c8998"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40d9f180"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x414c7150"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40bd7a80"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x414c7708"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40d9f8f8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x414c7be0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40d9fdd0"/></to>
    </wire>
    <wire loc="189:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x414c6468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x414c68a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x414c6030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x414f5b08"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d9be58"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x414f3ed8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40ddae20"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x414f3030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40dda370"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x414f3428"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40dda768"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x414f3ac0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40dd8948"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x414f24e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40dd8088"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40dd7b10"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ddcdd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dd75f0"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ddde40"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40e02c50"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40e03cc0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40dffc40"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40e0ec20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40e00a80"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40e02150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40dfe090"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40e028e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40dfe828"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40e0e908"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40e00748"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40e0e430"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40e00250"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41512430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40e55698"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x41514200"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40e56e08"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x41514b08"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e328b0"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40e328b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e28bf8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x41515af8"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x40e55e30"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e2e5c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408d09f8"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40e6f2b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40e6c060"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40e6d150"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40e6a010"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40e6d548"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40e6a428"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40e6dce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40e6abc0"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40e6fd40"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40e6cb30"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40e6f868"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40e6c638"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40e667d0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40e63698"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40e64708"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40e61668"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40e64b00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40e61a80"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40e63330"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40e5f250"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40e64310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40e61250"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40e65310"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40e62178"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40e66d88"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40e63c70"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40e7d808"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4152d568"/></to>
    </wire>
    <wire loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40e8bd80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ea7010"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40f1f110"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40f1e538"/></to>
    </wire>
    <wire loc="83:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40e9e640"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40e84e20"/></to>
    </wire>
    <wire loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40e9ed30"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40e81ec0"/></to>
    </wire>
    <wire loc="89:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40e9d3f0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40e80580"/></to>
    </wire>
    <wire loc="92:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40e9dab0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40e80c40"/></to>
    </wire>
    <wire loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40e9c2c8"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40e826f0"/></to>
    </wire>
    <wire loc="98:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40ea3b68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40f1f110"/></to>
    </wire>
    <wire loc="99:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40ea2608"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x4087b490"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40e9a988"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40bd7a80"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40ea30b0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40efc340"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40efc340"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40efa950"/></to>
    </wire>
    <wire loc="116:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40e99010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ef9430"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f24320"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40f235f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40722b68"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40f1eed0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408dde30"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4152a010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40867cd8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x41528010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40861100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="234:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x41023010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x415d44d0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40addd50"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4160e6f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4160adb8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4160ed88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40af1ac8"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4160d4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4160c170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40af3010"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41607500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410e0120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41607b98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x410e0120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41132010"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41132780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40af9f08"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41132e28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41131a50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40af1ac8"/></to>
    </wire>
    <wire loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x41130190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x411305c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411255d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40af1ac8"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41125c70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4111e010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40af1ac8"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4111e6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></to>
    </wire>
    <wire loc="271:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x411bb468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="390:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x411bb030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4168f010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41688728"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4168f6a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40af1ac8"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4168fd40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x411ef410"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4168d950"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4168d950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40af3010"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41688df0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410e0120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416874d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411eed60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40af1ac8"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411ec4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4121c7b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41678230"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41678230"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ad8240"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4167aae8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ada158"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40ae7120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x41675328"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411ffaf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40546068"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411fe230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x411fee28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4053d010"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41671c80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41207290"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416703f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41207290"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x412069e8"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41204218"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40535be0"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x412048c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x412034d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40546068"/></to>
    </wire>
    <wire loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x41203ba8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x41202010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4122f8d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40546068"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4122e010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4122ec08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4053d010"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x416d2f20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41207290"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416cf5d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></to>
    </wire>
    <wire loc="36:/usr/src/tinyos/tos/lib/net/UARTDebugSenderP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x41221b78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/usr/src/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc" safe="">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/usr/src/tinyos/tos/system/NoPinC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/usr/src/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="41:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Jan Beutel&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc" safe="">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="RealMainP" loc="56:/usr/src/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/usr/src/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/usr/src/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="MultihopOscilloscopeC" loc="22:MultihopOscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.TimerMilliC" loc="44(MultihopOscilloscopeAppC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <value cst="I:6">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.Sensor" loc="35(MultihopOscilloscopeAppC.Sensor):/usr/src/tinyos/tos/platforms/ucmini/DemoSensorC.nc">
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Sht21C" loc="35:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <configuration/>
    </component>
    <component qname="Sht21P" loc="36:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <module/>
    </component>
    <component qname="Sht21C.TimerMilliC" loc="44(Sht21C.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSht21C" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <configuration/>
    </component>
    <component qname="HplSht21C.I2CBus" loc="43(HplSht21C.I2CBus):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/usr/src/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="I2CBusPowerManagerC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <configuration/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC" loc="35(I2CBusPowerManagerC.BusPowerManagerC):/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <instance number="0">
        <component-ref qname="BusPowerManagerC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP" loc="35(I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP):/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <instance number="0">
        <component-ref qname="BusPowerManagerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC" loc="44(I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CollectionC" loc="45:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="26:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ActiveMessageC" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="39(RFA1RadioC.RadioAlarmC.RadioAlarmP):/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/usr/src/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/usr/src/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/usr/src/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/usr/src/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/usr/src/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC.CounterMicro16C" loc="54(BusyWaitMicroC.CounterMicro16C):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/usr/src/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/usr/src/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4101c010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/usr/src/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f5db40"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f5ddc8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/usr/src/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4101c010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/usr/src/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f5db40"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f5ddc8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/usr/src/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/usr/src/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC" loc="43(MultihopOscilloscopeAppC.CollectionSenderC):/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP" loc="34(MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP):/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/usr/src/tinyos/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.SerialAMSenderC" loc="47(MultihopOscilloscopeAppC.SerialAMSenderC):/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP" loc="43(MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTMessagePoolP" loc="41(MultihopOscilloscopeAppC.UARTMessagePoolP):/usr/src/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP" loc="53(MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP):/usr/src/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4101c010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.UARTQueueP" loc="42(MultihopOscilloscopeAppC.UARTQueueP):/usr/src/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugMessagePool" loc="41(MultihopOscilloscopeAppC.DebugMessagePool):/usr/src/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP" loc="53(MultihopOscilloscopeAppC.DebugMessagePool.PoolP):/usr/src/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4101c010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSendQueue" loc="42(MultihopOscilloscopeAppC.DebugSendQueue):/usr/src/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSerialSender" loc="47(MultihopOscilloscopeAppC.DebugSerialSender):/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:114">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP" loc="43(MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UARTDebugSenderP" loc="2:/usr/src/tinyos/tos/lib/net/UARTDebugSenderP.nc">
      <module/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x40495558" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40495780" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404959a8" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/usr/src/tinyos/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/usr/src/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406fdcb0" loc="55:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406fdcb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406f9148" loc="56:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406f9148"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406f93b0" loc="57:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406f93b0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406f9820" loc="58:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406f9820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406f9a88" loc="59:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x406f9f10" loc="60:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x406f9f10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4071e6f8" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4071e6f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4071eb28" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4071eb28"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4071ed18" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/usr/src/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40852d00" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40852d00"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4084f148" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4084f148"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4084f338" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x4084f540" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x408e3450" loc="52:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x408e3450"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x408e38b0" loc="53:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x408e38b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x408e3b18" loc="54:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x408e3b18"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x408e1010" loc="55:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x408e1010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x408e1278" loc="56:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408fd158" loc="46:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408fd158"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40920b48" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40920b48"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40920d28" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/DemoSensorC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/usr/src/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x409af750" loc="89:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x409a9bc8" loc="42:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/usr/src/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x409c17c8" loc="52:/usr/src/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusPowerManagerC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc" abstract="">
      <parameters>
        <constant name="highIsOn" ref="0x40ab6690" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
          <component-ref qname="BusPowerManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
        <constant name="initPin" ref="0x40ab6880" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
          <component-ref qname="BusPowerManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusPowerManagerP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc" abstract="">
      <parameters>
        <constant name="highIsOn" ref="0x40ab2340" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
          <component-ref qname="BusPowerManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
        <constant name="initPin" ref="0x40ab2530" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
          <component-ref qname="BusPowerManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40c524c0" loc="83:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/usr/src/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40e2fb98" loc="46:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40e2fb98"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40efb710" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40efb710"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40efbb40" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40efbb40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/usr/src/tinyos/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x4101c010" loc="41:/usr/src/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4101c010"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x4101c230" loc="41:/usr/src/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/usr/src/tinyos/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/usr/src/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x41019508" loc="53:/usr/src/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x41019508"/></type-var>
        </typedef>
        <constant name="size" ref="0x410196f8" loc="53:/usr/src/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/usr/src/tinyos/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x4103fea0" loc="42:/usr/src/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x4103fea0"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x4103c0f0" loc="42:/usr/src/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x4102c580" loc="38:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x41060010" loc="43:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/usr/src/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x4107c8b0" loc="47:/usr/src/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/usr/src/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x410f4458" loc="47:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/usr/src/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x410eff28" loc="43:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/usr/src/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x410de5f8" loc="45:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/usr/src/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x41127b50" loc="43:/usr/src/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/usr/src/tinyos/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x41120500" loc="44:/usr/src/tinyos/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x411525e8" loc="107:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x41152828" loc="107:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x41152a68" loc="107:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x411d95a8" loc="43:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x41217088" loc="35:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x412172a0" loc="35:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/usr/src/tinyos/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/usr/src/tinyos/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x41216d48" loc="45:/usr/src/tinyos/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x4121bc08" loc="47:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x40428d18" loc="58:/usr/src/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40428ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40428078" loc="57:/usr/src/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40428078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40428250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40420510" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40420510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404206e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4042dd98" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40426010"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404260f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404261d0"/>
        <function-ref name="actualMicro" scoped="" ref="0x404262b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40426390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404265b8" loc="43:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404265b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40426790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4042aa48" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4042aa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042ac20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x40429608" loc="45:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x40429608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404297e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x40429238" loc="44:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x40429238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40429410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x4042ae38" loc="43:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x4042ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40429050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40425610" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40425610"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404257e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x40425dc8" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x40425dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40425a18" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40425a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40425bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x40443da0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x40443da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40446e00" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40446e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40443010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404439d8" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404439d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40443bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40443260" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40443260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40443438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40443628" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40443628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40443800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4044c5b0" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4044c5b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044c788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4044c960" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4044c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4044cb38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4044cc18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4044ccf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x4044cdd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4044ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x4044f248" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x4044f248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044f420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40466010" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40466010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404661e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Toggle" ref="0x4046cda0" loc="38:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Toggle" scoped="" ref="0x4046cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463010"/>
        <function-ref name="isInput" scoped="" ref="0x404630f0"/>
        <function-ref name="toggle" scoped="" ref="0x404631d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404632b0"/>
        <function-ref name="get" scoped="" ref="0x40463390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40463470"/>
        <function-ref name="set" scoped="" ref="0x40463550"/>
        <function-ref name="clr" scoped="" ref="0x40463630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40466850" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40466850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40466a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x4046a1d0" loc="42:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4046a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a3a8"/>
        <function-ref name="isInput" scoped="" ref="0x4046a488"/>
        <function-ref name="toggle" scoped="" ref="0x4046a568"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a648"/>
        <function-ref name="get" scoped="" ref="0x4046a728"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a808"/>
        <function-ref name="set" scoped="" ref="0x4046a8e8"/>
        <function-ref name="clr" scoped="" ref="0x4046a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x4046abd8" loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x4046abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046adb0"/>
        <function-ref name="isInput" scoped="" ref="0x4046ae90"/>
        <function-ref name="toggle" scoped="" ref="0x40469010"/>
        <function-ref name="isOutput" scoped="" ref="0x404690f0"/>
        <function-ref name="get" scoped="" ref="0x404691d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404692b0"/>
        <function-ref name="set" scoped="" ref="0x40469390"/>
        <function-ref name="clr" scoped="" ref="0x40469470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x40469688" loc="45:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x40469688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469860"/>
        <function-ref name="isInput" scoped="" ref="0x40469940"/>
        <function-ref name="toggle" scoped="" ref="0x40469a20"/>
        <function-ref name="isOutput" scoped="" ref="0x40469b00"/>
        <function-ref name="get" scoped="" ref="0x40469be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469cc0"/>
        <function-ref name="set" scoped="" ref="0x40469da0"/>
        <function-ref name="clr" scoped="" ref="0x40469e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4048e2f0" loc="93:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4048e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4048e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4048e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4048e968"/>
        <function-ref name="get" scoped="" ref="0x4048ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048eb28"/>
        <function-ref name="set" scoped="" ref="0x4048ec08"/>
        <function-ref name="clr" scoped="" ref="0x4048ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x4047a830" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x4047a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047aa08"/>
        <function-ref name="isInput" scoped="" ref="0x4047aae8"/>
        <function-ref name="toggle" scoped="" ref="0x4047abc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047aca8"/>
        <function-ref name="get" scoped="" ref="0x4047ad88"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047ae68"/>
        <function-ref name="set" scoped="" ref="0x40485010"/>
        <function-ref name="clr" scoped="" ref="0x404850f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4048bea8" loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4048bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4048a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4048a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4048a360"/>
        <function-ref name="get" scoped="" ref="0x4048a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a520"/>
        <function-ref name="set" scoped="" ref="0x4048a600"/>
        <function-ref name="clr" scoped="" ref="0x4048a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404910a0" loc="87:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491278"/>
        <function-ref name="isInput" scoped="" ref="0x40491358"/>
        <function-ref name="toggle" scoped="" ref="0x40491438"/>
        <function-ref name="isOutput" scoped="" ref="0x40491518"/>
        <function-ref name="get" scoped="" ref="0x404915f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404916d8"/>
        <function-ref name="set" scoped="" ref="0x404917b8"/>
        <function-ref name="clr" scoped="" ref="0x40491898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40497830" loc="98:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40497830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497a08"/>
        <function-ref name="isInput" scoped="" ref="0x40497ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40497bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40497ca8"/>
        <function-ref name="get" scoped="" ref="0x40497d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497e68"/>
        <function-ref name="set" scoped="" ref="0x40496010"/>
        <function-ref name="clr" scoped="" ref="0x404960f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4046e4b0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4046e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e688"/>
        <function-ref name="isInput" scoped="" ref="0x4046e768"/>
        <function-ref name="toggle" scoped="" ref="0x4046e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e928"/>
        <function-ref name="get" scoped="" ref="0x4046ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046eae8"/>
        <function-ref name="set" scoped="" ref="0x4046ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4046eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40487c08" loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40487c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487de0"/>
        <function-ref name="isInput" scoped="" ref="0x40487ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40486010"/>
        <function-ref name="isOutput" scoped="" ref="0x404860f0"/>
        <function-ref name="get" scoped="" ref="0x404861d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404862b0"/>
        <function-ref name="set" scoped="" ref="0x40486390"/>
        <function-ref name="clr" scoped="" ref="0x40486470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404798e0" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404798e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40479b98"/>
        <function-ref name="toggle" scoped="" ref="0x40479c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40479d58"/>
        <function-ref name="get" scoped="" ref="0x40479e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40479f18"/>
        <function-ref name="set" scoped="" ref="0x40478010"/>
        <function-ref name="clr" scoped="" ref="0x404780f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4047e0a0" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4047e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e278"/>
        <function-ref name="isInput" scoped="" ref="0x4047e358"/>
        <function-ref name="toggle" scoped="" ref="0x4047e438"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e518"/>
        <function-ref name="get" scoped="" ref="0x4047e5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e6d8"/>
        <function-ref name="set" scoped="" ref="0x4047e7b8"/>
        <function-ref name="clr" scoped="" ref="0x4047e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40484750" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40484750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40484928"/>
        <function-ref name="isInput" scoped="" ref="0x40484a08"/>
        <function-ref name="toggle" scoped="" ref="0x40484ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40484bc8"/>
        <function-ref name="get" scoped="" ref="0x40484ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484d88"/>
        <function-ref name="set" scoped="" ref="0x40484e68"/>
        <function-ref name="clr" scoped="" ref="0x40483010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40489ce8" loc="81:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40489ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40489ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40488010"/>
        <function-ref name="toggle" scoped="" ref="0x404880f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404881d0"/>
        <function-ref name="get" scoped="" ref="0x404882b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488390"/>
        <function-ref name="set" scoped="" ref="0x40488470"/>
        <function-ref name="clr" scoped="" ref="0x40488550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40471120" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40471120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404712f8"/>
        <function-ref name="isInput" scoped="" ref="0x404713d8"/>
        <function-ref name="toggle" scoped="" ref="0x404714b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40471598"/>
        <function-ref name="get" scoped="" ref="0x40471678"/>
        <function-ref name="makeOutput" scoped="" ref="0x40471758"/>
        <function-ref name="set" scoped="" ref="0x40471838"/>
        <function-ref name="clr" scoped="" ref="0x40471918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40477750" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40477750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477928"/>
        <function-ref name="isInput" scoped="" ref="0x40477a08"/>
        <function-ref name="toggle" scoped="" ref="0x40477ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40477bc8"/>
        <function-ref name="get" scoped="" ref="0x40477ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477d88"/>
        <function-ref name="set" scoped="" ref="0x40477e68"/>
        <function-ref name="clr" scoped="" ref="0x40476010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4047dea8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4047dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4047c1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4047c280"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c360"/>
        <function-ref name="get" scoped="" ref="0x4047c440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047c520"/>
        <function-ref name="set" scoped="" ref="0x4047c600"/>
        <function-ref name="clr" scoped="" ref="0x4047c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40481670" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40481670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40481848"/>
        <function-ref name="isInput" scoped="" ref="0x40481928"/>
        <function-ref name="toggle" scoped="" ref="0x40481a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40481ae8"/>
        <function-ref name="get" scoped="" ref="0x40481bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40481ca8"/>
        <function-ref name="set" scoped="" ref="0x40481d88"/>
        <function-ref name="clr" scoped="" ref="0x40481e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40490ea8" loc="90:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40490ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4048f1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4048f280"/>
        <function-ref name="isOutput" scoped="" ref="0x4048f360"/>
        <function-ref name="get" scoped="" ref="0x4048f440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f520"/>
        <function-ref name="set" scoped="" ref="0x4048f600"/>
        <function-ref name="clr" scoped="" ref="0x4048f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x4048c3d0" loc="96:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x4048c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c5a8"/>
        <function-ref name="isInput" scoped="" ref="0x4048c688"/>
        <function-ref name="toggle" scoped="" ref="0x4048c768"/>
        <function-ref name="isOutput" scoped="" ref="0x4048c848"/>
        <function-ref name="get" scoped="" ref="0x4048c928"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048ca08"/>
        <function-ref name="set" scoped="" ref="0x4048cae8"/>
        <function-ref name="clr" scoped="" ref="0x4048cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40480a98" loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40480a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480c70"/>
        <function-ref name="isInput" scoped="" ref="0x40480d50"/>
        <function-ref name="toggle" scoped="" ref="0x40480e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40480f10"/>
        <function-ref name="get" scoped="" ref="0x4048b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b0f0"/>
        <function-ref name="set" scoped="" ref="0x4048b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4048b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4046f010" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4046f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4046f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4046f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f488"/>
        <function-ref name="get" scoped="" ref="0x4046f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f648"/>
        <function-ref name="set" scoped="" ref="0x4046f728"/>
        <function-ref name="clr" scoped="" ref="0x4046f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40475750" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40475750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475928"/>
        <function-ref name="isInput" scoped="" ref="0x40475a08"/>
        <function-ref name="toggle" scoped="" ref="0x40475ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40475bc8"/>
        <function-ref name="get" scoped="" ref="0x40475ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475d88"/>
        <function-ref name="set" scoped="" ref="0x40475e68"/>
        <function-ref name="clr" scoped="" ref="0x40474010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4048eee8" loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4048eee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x4048d1c0"/>
        <function-ref name="toggle" scoped="" ref="0x4048d2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048d380"/>
        <function-ref name="get" scoped="" ref="0x4048d460"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048d540"/>
        <function-ref name="set" scoped="" ref="0x4048d620"/>
        <function-ref name="clr" scoped="" ref="0x4048d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40474c08" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40474c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40474de0"/>
        <function-ref name="isInput" scoped="" ref="0x40474ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4047f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f0f0"/>
        <function-ref name="get" scoped="" ref="0x4047f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f2b0"/>
        <function-ref name="set" scoped="" ref="0x4047f390"/>
        <function-ref name="clr" scoped="" ref="0x4047f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404852f0" loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404854c8"/>
        <function-ref name="isInput" scoped="" ref="0x404855a8"/>
        <function-ref name="toggle" scoped="" ref="0x40485688"/>
        <function-ref name="isOutput" scoped="" ref="0x40485768"/>
        <function-ref name="get" scoped="" ref="0x40485848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485928"/>
        <function-ref name="set" scoped="" ref="0x40485a08"/>
        <function-ref name="clr" scoped="" ref="0x40485ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4048a8e0" loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4048a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048aab8"/>
        <function-ref name="isInput" scoped="" ref="0x4048ab98"/>
        <function-ref name="toggle" scoped="" ref="0x4048ac78"/>
        <function-ref name="isOutput" scoped="" ref="0x4048ad58"/>
        <function-ref name="get" scoped="" ref="0x4048ae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048af18"/>
        <function-ref name="set" scoped="" ref="0x40489010"/>
        <function-ref name="clr" scoped="" ref="0x404890f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40491a98" loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40491a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491c70"/>
        <function-ref name="isInput" scoped="" ref="0x40491d50"/>
        <function-ref name="toggle" scoped="" ref="0x40491e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40491f10"/>
        <function-ref name="get" scoped="" ref="0x40490010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404900f0"/>
        <function-ref name="set" scoped="" ref="0x404901d0"/>
        <function-ref name="clr" scoped="" ref="0x404902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4046eea8" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4046eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404790c0"/>
        <function-ref name="isInput" scoped="" ref="0x404791a0"/>
        <function-ref name="toggle" scoped="" ref="0x40479280"/>
        <function-ref name="isOutput" scoped="" ref="0x40479360"/>
        <function-ref name="get" scoped="" ref="0x40479440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40479520"/>
        <function-ref name="set" scoped="" ref="0x40479600"/>
        <function-ref name="clr" scoped="" ref="0x404796e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404782f0" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404784c8"/>
        <function-ref name="isInput" scoped="" ref="0x404785a8"/>
        <function-ref name="toggle" scoped="" ref="0x40478688"/>
        <function-ref name="isOutput" scoped="" ref="0x40478768"/>
        <function-ref name="get" scoped="" ref="0x40478848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478928"/>
        <function-ref name="set" scoped="" ref="0x40478a08"/>
        <function-ref name="clr" scoped="" ref="0x40478ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4047ea98" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4047ea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047ec70"/>
        <function-ref name="isInput" scoped="" ref="0x4047ed50"/>
        <function-ref name="toggle" scoped="" ref="0x4047ee30"/>
        <function-ref name="isOutput" scoped="" ref="0x4047ef10"/>
        <function-ref name="get" scoped="" ref="0x4047d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047d0f0"/>
        <function-ref name="set" scoped="" ref="0x4047d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4047d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x40483210" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x40483210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404833e8"/>
        <function-ref name="isInput" scoped="" ref="0x404834c8"/>
        <function-ref name="toggle" scoped="" ref="0x404835a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40483688"/>
        <function-ref name="get" scoped="" ref="0x40483768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483848"/>
        <function-ref name="set" scoped="" ref="0x40483928"/>
        <function-ref name="clr" scoped="" ref="0x40483a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40488750" loc="82:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40488750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40488928"/>
        <function-ref name="isInput" scoped="" ref="0x40488a08"/>
        <function-ref name="toggle" scoped="" ref="0x40488ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40488bc8"/>
        <function-ref name="get" scoped="" ref="0x40488ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488d88"/>
        <function-ref name="set" scoped="" ref="0x40488e68"/>
        <function-ref name="clr" scoped="" ref="0x40487010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40471b18" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40471b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40471dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40471eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40470010"/>
        <function-ref name="get" scoped="" ref="0x404700f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404701d0"/>
        <function-ref name="set" scoped="" ref="0x404702b0"/>
        <function-ref name="clr" scoped="" ref="0x40470390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40476210" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40476210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476468"/>
        <function-ref name="isInput" scoped="" ref="0x40476548"/>
        <function-ref name="toggle" scoped="" ref="0x40476628"/>
        <function-ref name="isOutput" scoped="" ref="0x40476708"/>
        <function-ref name="get" scoped="" ref="0x404767e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404768c8"/>
        <function-ref name="set" scoped="" ref="0x404769a8"/>
        <function-ref name="clr" scoped="" ref="0x40476a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4047c8e0" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4047c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047cab8"/>
        <function-ref name="isInput" scoped="" ref="0x4047cb98"/>
        <function-ref name="toggle" scoped="" ref="0x4047cc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4047cd58"/>
        <function-ref name="get" scoped="" ref="0x4047ce38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047cf18"/>
        <function-ref name="set" scoped="" ref="0x4047b010"/>
        <function-ref name="clr" scoped="" ref="0x4047b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4048f8e0" loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4048f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048fab8"/>
        <function-ref name="isInput" scoped="" ref="0x4048fb98"/>
        <function-ref name="toggle" scoped="" ref="0x4048fc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4048fd58"/>
        <function-ref name="get" scoped="" ref="0x4048fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048ff18"/>
        <function-ref name="set" scoped="" ref="0x4048e010"/>
        <function-ref name="clr" scoped="" ref="0x4048e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4047bce8" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4047bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a010"/>
        <function-ref name="isInput" scoped="" ref="0x4047a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4047a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a2b0"/>
        <function-ref name="get" scoped="" ref="0x4047a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a470"/>
        <function-ref name="set" scoped="" ref="0x4047a550"/>
        <function-ref name="clr" scoped="" ref="0x4047a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4048b4b0" loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4048b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b688"/>
        <function-ref name="isInput" scoped="" ref="0x4048b768"/>
        <function-ref name="toggle" scoped="" ref="0x4048b848"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b928"/>
        <function-ref name="get" scoped="" ref="0x4048ba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048bae8"/>
        <function-ref name="set" scoped="" ref="0x4048bbc8"/>
        <function-ref name="clr" scoped="" ref="0x4048bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40486670" loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40486670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40486848"/>
        <function-ref name="isInput" scoped="" ref="0x40486928"/>
        <function-ref name="toggle" scoped="" ref="0x40486a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40486ae8"/>
        <function-ref name="get" scoped="" ref="0x40486bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40486ca8"/>
        <function-ref name="set" scoped="" ref="0x40486d88"/>
        <function-ref name="clr" scoped="" ref="0x40486e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4048cdc8" loc="97:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4048cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497010"/>
        <function-ref name="isInput" scoped="" ref="0x404970f0"/>
        <function-ref name="toggle" scoped="" ref="0x404971d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404972b0"/>
        <function-ref name="get" scoped="" ref="0x40497390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497470"/>
        <function-ref name="set" scoped="" ref="0x40497550"/>
        <function-ref name="clr" scoped="" ref="0x40497630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4046fa08" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4046fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x4046fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x4046fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fe80"/>
        <function-ref name="get" scoped="" ref="0x4046e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e0f0"/>
        <function-ref name="set" scoped="" ref="0x4046e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4046e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x40474210" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x40474210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404743e8"/>
        <function-ref name="isInput" scoped="" ref="0x404744c8"/>
        <function-ref name="toggle" scoped="" ref="0x404745a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40474688"/>
        <function-ref name="get" scoped="" ref="0x40474768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474848"/>
        <function-ref name="set" scoped="" ref="0x40474928"/>
        <function-ref name="clr" scoped="" ref="0x40474a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40487210" loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40487210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404873e8"/>
        <function-ref name="isInput" scoped="" ref="0x404874c8"/>
        <function-ref name="toggle" scoped="" ref="0x404875a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40487688"/>
        <function-ref name="get" scoped="" ref="0x40487768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487848"/>
        <function-ref name="set" scoped="" ref="0x40487928"/>
        <function-ref name="clr" scoped="" ref="0x40487a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4047f670" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4047f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f848"/>
        <function-ref name="isInput" scoped="" ref="0x4047f928"/>
        <function-ref name="toggle" scoped="" ref="0x4047fa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4047fae8"/>
        <function-ref name="get" scoped="" ref="0x4047fbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047fca8"/>
        <function-ref name="set" scoped="" ref="0x4047fd88"/>
        <function-ref name="clr" scoped="" ref="0x4047fe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40485ce8" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40485ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40484010"/>
        <function-ref name="toggle" scoped="" ref="0x404840f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404841d0"/>
        <function-ref name="get" scoped="" ref="0x404842b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484390"/>
        <function-ref name="set" scoped="" ref="0x40484470"/>
        <function-ref name="clr" scoped="" ref="0x40484550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404892f0" loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404894c8"/>
        <function-ref name="isInput" scoped="" ref="0x404895a8"/>
        <function-ref name="toggle" scoped="" ref="0x40489688"/>
        <function-ref name="isOutput" scoped="" ref="0x40489768"/>
        <function-ref name="get" scoped="" ref="0x40489848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40489928"/>
        <function-ref name="set" scoped="" ref="0x40489a08"/>
        <function-ref name="clr" scoped="" ref="0x40489ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404904b0" loc="89:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404904b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490688"/>
        <function-ref name="isInput" scoped="" ref="0x40490768"/>
        <function-ref name="toggle" scoped="" ref="0x40490848"/>
        <function-ref name="isOutput" scoped="" ref="0x40490928"/>
        <function-ref name="get" scoped="" ref="0x40490a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490ae8"/>
        <function-ref name="set" scoped="" ref="0x40490bc8"/>
        <function-ref name="clr" scoped="" ref="0x40490ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404686f0" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404686f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404688c8"/>
        <function-ref name="isInput" scoped="" ref="0x404689a8"/>
        <function-ref name="toggle" scoped="" ref="0x40468a88"/>
        <function-ref name="isOutput" scoped="" ref="0x40468b68"/>
        <function-ref name="get" scoped="" ref="0x40468c48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468d28"/>
        <function-ref name="set" scoped="" ref="0x40468e08"/>
        <function-ref name="clr" scoped="" ref="0x40468ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40478ce8" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40478ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40477010"/>
        <function-ref name="toggle" scoped="" ref="0x404770f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404771d0"/>
        <function-ref name="get" scoped="" ref="0x404772b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477390"/>
        <function-ref name="set" scoped="" ref="0x40477470"/>
        <function-ref name="clr" scoped="" ref="0x40477550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4047d4b0" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4047d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047d688"/>
        <function-ref name="isInput" scoped="" ref="0x4047d768"/>
        <function-ref name="toggle" scoped="" ref="0x4047d848"/>
        <function-ref name="isOutput" scoped="" ref="0x4047d928"/>
        <function-ref name="get" scoped="" ref="0x4047da08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047dae8"/>
        <function-ref name="set" scoped="" ref="0x4047dbc8"/>
        <function-ref name="clr" scoped="" ref="0x4047dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40483c08" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40483c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483de0"/>
        <function-ref name="isInput" scoped="" ref="0x40483ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40481010"/>
        <function-ref name="isOutput" scoped="" ref="0x404810f0"/>
        <function-ref name="get" scoped="" ref="0x404811d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404812b0"/>
        <function-ref name="set" scoped="" ref="0x40481390"/>
        <function-ref name="clr" scoped="" ref="0x40481470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4048d900" loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4048d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048dad8"/>
        <function-ref name="isInput" scoped="" ref="0x4048dbb8"/>
        <function-ref name="toggle" scoped="" ref="0x4048dc98"/>
        <function-ref name="isOutput" scoped="" ref="0x4048dd78"/>
        <function-ref name="get" scoped="" ref="0x4048de58"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048c010"/>
        <function-ref name="set" scoped="" ref="0x4048c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4048c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404800a0" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480278"/>
        <function-ref name="isInput" scoped="" ref="0x40480358"/>
        <function-ref name="toggle" scoped="" ref="0x40480438"/>
        <function-ref name="isOutput" scoped="" ref="0x40480518"/>
        <function-ref name="get" scoped="" ref="0x404805f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404806d8"/>
        <function-ref name="set" scoped="" ref="0x404807b8"/>
        <function-ref name="clr" scoped="" ref="0x40480898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4047b2f0" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4047b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4047b5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4047b688"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b768"/>
        <function-ref name="get" scoped="" ref="0x4047b848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b928"/>
        <function-ref name="set" scoped="" ref="0x4047ba08"/>
        <function-ref name="clr" scoped="" ref="0x4047bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40470590" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40470590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470768"/>
        <function-ref name="isInput" scoped="" ref="0x40470848"/>
        <function-ref name="toggle" scoped="" ref="0x40470928"/>
        <function-ref name="isOutput" scoped="" ref="0x40470a08"/>
        <function-ref name="get" scoped="" ref="0x40470ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470bc8"/>
        <function-ref name="set" scoped="" ref="0x40470ca8"/>
        <function-ref name="clr" scoped="" ref="0x40470d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40476c88" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40476c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476e60"/>
        <function-ref name="isInput" scoped="" ref="0x40475010"/>
        <function-ref name="toggle" scoped="" ref="0x404750f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404751d0"/>
        <function-ref name="get" scoped="" ref="0x404752b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475390"/>
        <function-ref name="set" scoped="" ref="0x40475470"/>
        <function-ref name="clr" scoped="" ref="0x40475550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40494190" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40494190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40494378"/>
        <function-ref name="isInput" scoped="" ref="0x40494458"/>
        <function-ref name="toggle" scoped="" ref="0x40494538"/>
        <function-ref name="isOutput" scoped="" ref="0x40494618"/>
        <function-ref name="get" scoped="" ref="0x404946f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404947d8"/>
        <function-ref name="set" scoped="" ref="0x404948b8"/>
        <function-ref name="clr" scoped="" ref="0x40494998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404a6a70" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404a6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a6c58"/>
        <function-ref name="isInput" scoped="" ref="0x404a6d38"/>
        <function-ref name="toggle" scoped="" ref="0x404a6e18"/>
        <function-ref name="isOutput" scoped="" ref="0x404a6ef8"/>
        <function-ref name="get" scoped="" ref="0x404a5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a50f0"/>
        <function-ref name="set" scoped="" ref="0x404a51d0"/>
        <function-ref name="clr" scoped="" ref="0x404a52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404ae2b8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae4a0"/>
        <function-ref name="isInput" scoped="" ref="0x404ae580"/>
        <function-ref name="toggle" scoped="" ref="0x404ae660"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae740"/>
        <function-ref name="get" scoped="" ref="0x404ae820"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae900"/>
        <function-ref name="set" scoped="" ref="0x404ae9e0"/>
        <function-ref name="clr" scoped="" ref="0x404aeac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404aaaf8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aace0"/>
        <function-ref name="isInput" scoped="" ref="0x404aadc0"/>
        <function-ref name="toggle" scoped="" ref="0x404aaea0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5010"/>
        <function-ref name="get" scoped="" ref="0x404b50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b51d0"/>
        <function-ref name="set" scoped="" ref="0x404b52b0"/>
        <function-ref name="clr" scoped="" ref="0x404b5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404b2440" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404b2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2628"/>
        <function-ref name="isInput" scoped="" ref="0x404b2708"/>
        <function-ref name="toggle" scoped="" ref="0x404b27e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b28c8"/>
        <function-ref name="get" scoped="" ref="0x404b29a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2a88"/>
        <function-ref name="set" scoped="" ref="0x404b2b68"/>
        <function-ref name="clr" scoped="" ref="0x404b2c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404bbc68" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404bbc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bbe50"/>
        <function-ref name="isInput" scoped="" ref="0x404ba010"/>
        <function-ref name="toggle" scoped="" ref="0x404ba0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ba1d0"/>
        <function-ref name="get" scoped="" ref="0x404ba2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ba390"/>
        <function-ref name="set" scoped="" ref="0x404ba470"/>
        <function-ref name="clr" scoped="" ref="0x404ba550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404b65c8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404b65c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b67b0"/>
        <function-ref name="isInput" scoped="" ref="0x404b6890"/>
        <function-ref name="toggle" scoped="" ref="0x404b6970"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6a50"/>
        <function-ref name="get" scoped="" ref="0x404b6b30"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6c10"/>
        <function-ref name="set" scoped="" ref="0x404b6cf0"/>
        <function-ref name="clr" scoped="" ref="0x404b6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x404d5438" loc="18:/usr/src/tinyos/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x404d5438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5610"/>
        <function-ref name="isInput" scoped="" ref="0x404d56f0"/>
        <function-ref name="toggle" scoped="" ref="0x404d57d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d58b0"/>
        <function-ref name="get" scoped="" ref="0x404d5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5a70"/>
        <function-ref name="set" scoped="" ref="0x404d5b50"/>
        <function-ref name="clr" scoped="" ref="0x404d5c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x404e7980" loc="34:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404e7980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404e7b58"/>
        <function-ref name="stopDone" scoped="" ref="0x404e7c38"/>
        <function-ref name="start" scoped="" ref="0x404e7d18"/>
        <function-ref name="stop" scoped="" ref="0x404e7df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x404e9860" loc="37:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404e9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e9a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x404f1ab0" loc="57:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x404f1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f1c88"/>
        <function-ref name="runTask" scoped="" ref="0x404f1d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x404f4388" loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x404f4388"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f4560"/>
        <function-ref name="runTask" scoped="" ref="0x404f4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x404f3708" loc="35:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x404f3708"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x404f38e0"/>
        <function-ref name="disable" scoped="" ref="0x404f39c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x404f3aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x404f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x404f3dc8" loc="36:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x404f3dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9010"/>
        <function-ref name="isInput" scoped="" ref="0x404e90f0"/>
        <function-ref name="toggle" scoped="" ref="0x404e91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e92b0"/>
        <function-ref name="get" scoped="" ref="0x404e9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9470"/>
        <function-ref name="set" scoped="" ref="0x404e9550"/>
        <function-ref name="clr" scoped="" ref="0x404e9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x40502758" loc="35:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x40502758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40502930"/>
        <function-ref name="disable" scoped="" ref="0x40502a10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40502af0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40502bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40502d90" loc="36:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40502d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501010"/>
        <function-ref name="isInput" scoped="" ref="0x405010f0"/>
        <function-ref name="toggle" scoped="" ref="0x405011d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405012b0"/>
        <function-ref name="get" scoped="" ref="0x40501390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40501470"/>
        <function-ref name="set" scoped="" ref="0x40501550"/>
        <function-ref name="clr" scoped="" ref="0x40501630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x404fe010" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x404fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x404fe1e8"/>
        <function-ref name="disable" scoped="" ref="0x404fe2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x404fe3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x404fe488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x40505428" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40505428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40505600"/>
        <function-ref name="fired" scoped="" ref="0x405056e0"/>
        <function-ref name="disable" scoped="" ref="0x405057c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x405058a0"/>
        <function-ref name="reset" scoped="" ref="0x40505980"/>
        <function-ref name="setMask" scoped="" ref="0x40505a60"/>
        <function-ref name="enable" scoped="" ref="0x40505b40"/>
        <function-ref name="getPins" scoped="" ref="0x40505c20"/>
        <function-ref name="getMask" scoped="" ref="0x40505d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x40518eb8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40518eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x404fc0c0"/>
        <function-ref name="fired" scoped="" ref="0x404fc1a0"/>
        <function-ref name="disable" scoped="" ref="0x404fc280"/>
        <function-ref name="isEnabled" scoped="" ref="0x404fc360"/>
        <function-ref name="reset" scoped="" ref="0x404fc440"/>
        <function-ref name="setMask" scoped="" ref="0x404fc520"/>
        <function-ref name="enable" scoped="" ref="0x404fc600"/>
        <function-ref name="getPins" scoped="" ref="0x404fc6e0"/>
        <function-ref name="getMask" scoped="" ref="0x404fc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x404fc9b8" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x404fc9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x404fcba0"/>
        <function-ref name="disable" scoped="" ref="0x404fcc80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x404fcd60"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x404fce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405250e0" loc="46:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405250e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405252b8"/>
        <function-ref name="stopDone" scoped="" ref="0x40525398"/>
        <function-ref name="start" scoped="" ref="0x40525478"/>
        <function-ref name="stop" scoped="" ref="0x40525558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40535be0" loc="47:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40535be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40535db8"/>
        <function-ref name="getPayload" scoped="" ref="0x40535e98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40524010"/>
        <function-ref name="cancel" scoped="" ref="0x405240f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405241d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40546068" loc="49:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40546068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40546240"/>
        <function-ref name="payloadLength" scoped="" ref="0x40546320"/>
        <function-ref name="getPayload" scoped="" ref="0x40546400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405464e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405465c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40522100" loc="48:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40522100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405222d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4053d548" loc="53:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4053d548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4053d720"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4053d800"/>
        <function-ref name="led1On" scoped="" ref="0x4053d8e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4053d9c0"/>
        <function-ref name="led3Off" scoped="" ref="0x4053daa0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4053db80"/>
        <function-ref name="get" scoped="" ref="0x4053dc60"/>
        <function-ref name="led1Off" scoped="" ref="0x4053dd40"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4053de20"/>
        <function-ref name="led3On" scoped="" ref="0x4053df00"/>
        <function-ref name="led0On" scoped="" ref="0x40549010"/>
        <function-ref name="led2Off" scoped="" ref="0x405490f0"/>
        <function-ref name="led2On" scoped="" ref="0x405491d0"/>
        <function-ref name="set" scoped="" ref="0x40549330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4053d010" loc="51:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4053d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4053d1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4053d2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4053d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4054cdf8" loc="50:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40541010"/>
        <function-ref name="source" scoped="" ref="0x405410f0"/>
        <function-ref name="address" scoped="" ref="0x405411d0"/>
        <function-ref name="destination" scoped="" ref="0x405412b0"/>
        <function-ref name="setSource" scoped="" ref="0x40541390"/>
        <function-ref name="setDestination" scoped="" ref="0x40541470"/>
        <function-ref name="type" scoped="" ref="0x40541550"/>
        <function-ref name="setType" scoped="" ref="0x40541630"/>
        <function-ref name="isForMe" scoped="" ref="0x40541710"/>
        <function-ref name="setGroup" scoped="" ref="0x405417f0"/>
        <function-ref name="localGroup" scoped="" ref="0x405418d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4058ced0" loc="54:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4058ced0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4058b0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x4058b1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058b280"/>
        <function-ref name="cancel" scoped="" ref="0x4058b360"/>
        <function-ref name="sendDone" scoped="" ref="0x4058b440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4058b5a0" loc="55:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4058b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058b778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40553be8" loc="47:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40553be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40553dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40553eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40552010"/>
        <function-ref name="cancel" scoped="" ref="0x405520f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405521d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4058c310" loc="50:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4058c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058c4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4058c5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4058c6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058c788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4058c868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405523a8" loc="48:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405523a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40552590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4058c9a8" loc="51:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058c9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4058cb80"/>
        <function-ref name="noAck" scoped="" ref="0x4058cc60"/>
        <function-ref name="wasAcked" scoped="" ref="0x4058cd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405526d0" loc="49:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405526d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405528a8"/>
        <function-ref name="source" scoped="" ref="0x40552988"/>
        <function-ref name="address" scoped="" ref="0x40552a68"/>
        <function-ref name="destination" scoped="" ref="0x40552b48"/>
        <function-ref name="setSource" scoped="" ref="0x40552c28"/>
        <function-ref name="setDestination" scoped="" ref="0x40552d08"/>
        <function-ref name="type" scoped="" ref="0x40552de8"/>
        <function-ref name="setType" scoped="" ref="0x40552ec8"/>
        <function-ref name="isForMe" scoped="" ref="0x4058c010"/>
        <function-ref name="setGroup" scoped="" ref="0x4058c0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4058c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4058ad10" loc="50:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4058ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4058aee8"/>
        <function-ref name="stopDone" scoped="" ref="0x40587010"/>
        <function-ref name="start" scoped="" ref="0x405870f0"/>
        <function-ref name="stop" scoped="" ref="0x405871d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40587c20" loc="52:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40587c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40587df8"/>
        <function-ref name="getPayload" scoped="" ref="0x40587ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40595010"/>
        <function-ref name="cancel" scoped="" ref="0x405950f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405951d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4058a978" loc="49:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4058a978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4058ab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40587618" loc="51:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40587618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405877f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40591840" loc="56:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40591840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40591a18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40591af8"/>
        <function-ref name="led1On" scoped="" ref="0x40591bd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40591cb8"/>
        <function-ref name="led3Off" scoped="" ref="0x40591d98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40591e78"/>
        <function-ref name="get" scoped="" ref="0x40594010"/>
        <function-ref name="led1Off" scoped="" ref="0x405940f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405941d0"/>
        <function-ref name="led3On" scoped="" ref="0x405942b0"/>
        <function-ref name="led0On" scoped="" ref="0x40594390"/>
        <function-ref name="led2Off" scoped="" ref="0x40594470"/>
        <function-ref name="led2On" scoped="" ref="0x40594550"/>
        <function-ref name="set" scoped="" ref="0x405946b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40591338" loc="55:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40591338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40591510"/>
        <function-ref name="offset" scoped="" ref="0x405915f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x405916d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4059f0f8" loc="66:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4059f0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4059f2d0"/>
        <function-ref name="stopDone" scoped="" ref="0x4059f3b0"/>
        <function-ref name="start" scoped="" ref="0x4059f490"/>
        <function-ref name="stop" scoped="" ref="0x4059f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x405e77a0" loc="332:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x405e77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e7978"/>
        <function-ref name="runTask" scoped="" ref="0x405e7a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x405b2760" loc="74:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x405b2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405b2938"/>
        <function-ref name="stop" scoped="" ref="0x405b2a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x405c3b28" loc="191:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x405c3b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405c3d00"/>
        <function-ref name="runTask" scoped="" ref="0x405c3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405a0d48" loc="65:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405a0d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405a0f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x405b1740" loc="75:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x405b1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x405b1918"/>
        <function-ref name="flush" scoped="" ref="0x405b19f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x405e8010" loc="322:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x405e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e81e8"/>
        <function-ref name="runTask" scoped="" ref="0x405e82c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x405b5e88" loc="72:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x405b5e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x405a8070"/>
        <function-ref name="resetSend" scoped="" ref="0x405a8150"/>
        <function-ref name="dataReceived" scoped="" ref="0x405a8230"/>
        <function-ref name="resetReceive" scoped="" ref="0x405a8310"/>
        <function-ref name="putData" scoped="" ref="0x405a83f0"/>
        <function-ref name="putDone" scoped="" ref="0x405a84d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x405a85b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405a8720" loc="73:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405a8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405a88f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405a89d8"/>
        <function-ref name="led1On" scoped="" ref="0x405a8ab8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405a8b98"/>
        <function-ref name="led3Off" scoped="" ref="0x405a8c78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405a8d58"/>
        <function-ref name="get" scoped="" ref="0x405a8e38"/>
        <function-ref name="led1Off" scoped="" ref="0x405a8f18"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405a7010"/>
        <function-ref name="led3On" scoped="" ref="0x405a70f0"/>
        <function-ref name="led0On" scoped="" ref="0x405a71d0"/>
        <function-ref name="led2Off" scoped="" ref="0x405a72b0"/>
        <function-ref name="led2On" scoped="" ref="0x405a7390"/>
        <function-ref name="set" scoped="" ref="0x405a74f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x405e4428" loc="341:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x405e4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e4600"/>
        <function-ref name="runTask" scoped="" ref="0x405e46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x405ab7f8" loc="67:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x405ab7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x405ab9d0"/>
        <function-ref name="nextByte" scoped="" ref="0x405abab0"/>
        <function-ref name="startSend" scoped="" ref="0x405abb90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x405abc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x405a9bd8" loc="68:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405a9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x405a9db0"/>
        <function-ref name="byteReceived" scoped="" ref="0x405a9e90"/>
        <function-ref name="endPacket" scoped="" ref="0x405ad010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x4065cdb0" loc="275:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x4065cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4065b010"/>
        <function-ref name="runTask" scoped="" ref="0x4065b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4064c710" loc="51:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4064c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4064c8f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4064c9d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4064cab8"/>
        <function-ref name="cancel" scoped="" ref="0x4064cb98"/>
        <function-ref name="sendDone" scoped="" ref="0x4064cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x4065b270" loc="158:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x4065b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4065b448"/>
        <function-ref name="runTask" scoped="" ref="0x4065b528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4064c350" loc="50:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4064c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4064c538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x4064cea0" loc="54:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x4064cea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4065d0c0"/>
        <function-ref name="offset" scoped="" ref="0x4065d1a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4065d280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4065de50" loc="57:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4065de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4065c050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4065c130"/>
        <function-ref name="led1On" scoped="" ref="0x4065c210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4065c2f0"/>
        <function-ref name="led3Off" scoped="" ref="0x4065c3d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4065c4b0"/>
        <function-ref name="get" scoped="" ref="0x4065c590"/>
        <function-ref name="led1Off" scoped="" ref="0x4065c670"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4065c750"/>
        <function-ref name="led3On" scoped="" ref="0x4065c830"/>
        <function-ref name="led0On" scoped="" ref="0x4065c910"/>
        <function-ref name="led2Off" scoped="" ref="0x4065c9f0"/>
        <function-ref name="led2On" scoped="" ref="0x4065cad0"/>
        <function-ref name="set" scoped="" ref="0x4065cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x4065d898" loc="56:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4065d898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4065da70"/>
        <function-ref name="nextByte" scoped="" ref="0x4065db50"/>
        <function-ref name="startSend" scoped="" ref="0x4065dc30"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4065dd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4065d3c0" loc="55:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4065d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4065d598"/>
        <function-ref name="byteReceived" scoped="" ref="0x4065d678"/>
        <function-ref name="endPacket" scoped="" ref="0x4065d758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x406639e8" loc="50:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406639e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40663bc0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40663ca0"/>
        <function-ref name="receive" scoped="" ref="0x40663d80"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40663e60"/>
        <function-ref name="receiveDone" scoped="" ref="0x40656010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406560f0"/>
        <function-ref name="sendDone" scoped="" ref="0x406561d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x4065a718" loc="48:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x4065a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x4065a8f0"/>
        <function-ref name="resetSend" scoped="" ref="0x4065a9d0"/>
        <function-ref name="dataReceived" scoped="" ref="0x4065aab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x4065ab90"/>
        <function-ref name="putData" scoped="" ref="0x4065ac70"/>
        <function-ref name="putDone" scoped="" ref="0x4065ad50"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x4065ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40656340" loc="51:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40656340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40656518"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406565f8"/>
        <function-ref name="led1On" scoped="" ref="0x406566d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406567b8"/>
        <function-ref name="led3Off" scoped="" ref="0x40656898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40656978"/>
        <function-ref name="get" scoped="" ref="0x40656a58"/>
        <function-ref name="led1Off" scoped="" ref="0x40656b38"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40656c18"/>
        <function-ref name="led3On" scoped="" ref="0x40656cf8"/>
        <function-ref name="led0On" scoped="" ref="0x40656dd8"/>
        <function-ref name="led2Off" scoped="" ref="0x40656eb8"/>
        <function-ref name="led2On" scoped="" ref="0x40655010"/>
        <function-ref name="set" scoped="" ref="0x40655170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406788f0" loc="42:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406788f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40678ac8"/>
        <function-ref name="receive" scoped="" ref="0x40678ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40659a88" loc="41:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40659a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40659c60"/>
        <function-ref name="receivedByte" scoped="" ref="0x40659d40"/>
        <function-ref name="receive" scoped="" ref="0x40659e20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40659f00"/>
        <function-ref name="receiveDone" scoped="" ref="0x4067b010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4067b0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4067b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40659608" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40659608"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406597e0"/>
        <function-ref name="stop" scoped="" ref="0x406598c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4067a7a0" loc="41:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4067a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4067a978"/>
        <function-ref name="receive" scoped="" ref="0x4067aa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4067ac20" loc="42:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4067ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4067adf8"/>
        <function-ref name="receivedByte" scoped="" ref="0x4067aed8"/>
        <function-ref name="receive" scoped="" ref="0x40675010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406750f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406751d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406752b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40675390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40685418" loc="43:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40685418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40685b68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40674068"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40685de0"/>
        <function-ref name="overflow" scoped="" ref="0x406742e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4067a330" loc="40:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4067a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4067a508"/>
        <function-ref name="stop" scoped="" ref="0x4067a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40673ae8" loc="50:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40673ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40673cc0"/>
        <function-ref name="receive" scoped="" ref="0x40673da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x406847b0" loc="53:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x406847b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40684988"/>
        <function-ref name="stop" scoped="" ref="0x40684a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40673398" loc="48:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40673398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40673570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40673f00" loc="51:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40673f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406840f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x406841d0"/>
        <function-ref name="receive" scoped="" ref="0x406842b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40684390"/>
        <function-ref name="receiveDone" scoped="" ref="0x40684470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40684550"/>
        <function-ref name="sendDone" scoped="" ref="0x40684630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406acc88" loc="56:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406acc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406ab3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406ab8e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ab668"/>
        <function-ref name="overflow" scoped="" ref="0x406abb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x406ac050" loc="55:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x406ac050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406ac228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406ac308"/>
        <function-ref name="rxDone" scoped="" ref="0x406ac3e8"/>
        <function-ref name="txDone" scoped="" ref="0x406ac4c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406ac5a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406ac688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406ac768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406ac848"/>
        <function-ref name="tx" scoped="" ref="0x406ac928"/>
        <function-ref name="rx" scoped="" ref="0x406aca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406736d0" loc="49:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406736d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406738a8"/>
        <function-ref name="stop" scoped="" ref="0x40673988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40684be8" loc="54:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40684be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40684dc0"/>
        <function-ref name="stop" scoped="" ref="0x40684ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406c00b8" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406c00b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406c0290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406c0370"/>
        <function-ref name="rxDone" scoped="" ref="0x406c0450"/>
        <function-ref name="txDone" scoped="" ref="0x406c0530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406c0610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406c06f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406c07d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406c08b0"/>
        <function-ref name="tx" scoped="" ref="0x406c0990"/>
        <function-ref name="rx" scoped="" ref="0x406c0a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x406bf760" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x406bf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406bf938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406bfa18"/>
        <function-ref name="rxDone" scoped="" ref="0x406bfaf8"/>
        <function-ref name="txDone" scoped="" ref="0x406bfbd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406bfcb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406bfd98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406bfe78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406be010"/>
        <function-ref name="tx" scoped="" ref="0x406be0f0"/>
        <function-ref name="rx" scoped="" ref="0x406be1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406c1b98" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406c1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c1d70"/>
        <function-ref name="stop" scoped="" ref="0x406c1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406c0cc8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406c0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c0ea0"/>
        <function-ref name="stop" scoped="" ref="0x406bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x406bf268" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x406bf268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bf440"/>
        <function-ref name="stop" scoped="" ref="0x406bf520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406c1688" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406c1688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c1860"/>
        <function-ref name="stop" scoped="" ref="0x406c1940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x406be9f8" loc="114:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x406be9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406bebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406bb8c0" loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406bb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406bba98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406bbb78"/>
        <function-ref name="rxDone" scoped="" ref="0x406bbc58"/>
        <function-ref name="txDone" scoped="" ref="0x406bbd38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406bbe18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406bbef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406ba010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406ba0f0"/>
        <function-ref name="tx" scoped="" ref="0x406ba1d0"/>
        <function-ref name="rx" scoped="" ref="0x406ba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406cb010" loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406cb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406cb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x406ba4c0" loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x406ba4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406ba698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x406b8390" loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x406b8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406b8568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406b8648"/>
        <function-ref name="rxDone" scoped="" ref="0x406b8728"/>
        <function-ref name="txDone" scoped="" ref="0x406b8808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406b88e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406b89c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406b8aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406b8b88"/>
        <function-ref name="tx" scoped="" ref="0x406b8c68"/>
        <function-ref name="rx" scoped="" ref="0x406b8d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406bb3a8" loc="116:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406bb3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bb580"/>
        <function-ref name="stop" scoped="" ref="0x406bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406ba910" loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406ba910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406baae8"/>
        <function-ref name="stop" scoped="" ref="0x406babc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x406bae40" loc="121:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x406bae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406b8050"/>
        <function-ref name="stop" scoped="" ref="0x406b8130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x406cb3e0" loc="126:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x406cb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x406cb5b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x406cb698"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x406cb778"/>
        <function-ref name="actualMicro" scoped="" ref="0x406cb858"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x406cb938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x406cbb20" loc="127:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x406cbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x406cbcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406bee48" loc="115:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406bee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bb050"/>
        <function-ref name="stop" scoped="" ref="0x406bb130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4040be50" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4040e050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4040d218" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4040d218"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403283d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403283d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4040d3f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4040d4d0"/>
        <function-ref name="led1On" scoped="" ref="0x4040d5b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4040d690"/>
        <function-ref name="led3Off" scoped="" ref="0x4040d770"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4040d850"/>
        <function-ref name="get" scoped="" ref="0x4040d930"/>
        <function-ref name="led1Off" scoped="" ref="0x4040da10"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4040daf0"/>
        <function-ref name="led3On" scoped="" ref="0x4040dbd0"/>
        <function-ref name="led0On" scoped="" ref="0x4040dcb0"/>
        <function-ref name="led2Off" scoped="" ref="0x4040dd90"/>
        <function-ref name="led2On" scoped="" ref="0x4040de70"/>
        <function-ref name="set" scoped="" ref="0x40414010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403324a0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403324a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40332678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4040c1a8" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4040c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40676c48" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40676c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fe3b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406fe8a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406fe628"/>
        <function-ref name="overflow" scoped="" ref="0x406feb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407176f8" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407176f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40717e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40716350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407160d8"/>
        <function-ref name="overflow" scoped="" ref="0x407165c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406fc490" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406fc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fcbe0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40717110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406fce58"/>
        <function-ref name="overflow" scoped="" ref="0x40717388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407153f0" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407153f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40715b40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40711048"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40715db8"/>
        <function-ref name="overflow" scoped="" ref="0x407112c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4070fb60" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4070fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4070d308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4070d7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4070d580"/>
        <function-ref name="overflow" scoped="" ref="0x4070da70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40710918" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40710918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4070f088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4070f578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4070f300"/>
        <function-ref name="overflow" scoped="" ref="0x4070f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40722b68" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40722b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4071f308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4071f7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4071f580"/>
        <function-ref name="overflow" scoped="" ref="0x4071fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4071c010" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4071c010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4071c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4071c448" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4071c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4071cb98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407380a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4071ce10"/>
        <function-ref name="overflow" scoped="" ref="0x40738320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x407385f0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x407385f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40735068"/>
        <function-ref name="test" scoped="" ref="0x407373e8"/>
        <function-ref name="get" scoped="" ref="0x40738c38"/>
        <function-ref name="reset" scoped="" ref="0x40737660"/>
        <function-ref name="getMode" scoped="" ref="0x40735308"/>
        <function-ref name="overflow" scoped="" ref="0x40737170"/>
        <function-ref name="isOn" scoped="" ref="0x40737dc8"/>
        <function-ref name="set" scoped="" ref="0x40738eb0"/>
        <function-ref name="start" scoped="" ref="0x407378d8"/>
        <function-ref name="stop" scoped="" ref="0x40737b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4074e1d8" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4074e1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4073cc68"/>
        <function-ref name="test" scoped="" ref="0x4073c010"/>
        <function-ref name="fired" scoped="" ref="0x4074ed38"/>
        <function-ref name="get" scoped="" ref="0x4074e820"/>
        <function-ref name="reset" scoped="" ref="0x4073c288"/>
        <function-ref name="getMode" scoped="" ref="0x4073cf08"/>
        <function-ref name="isOn" scoped="" ref="0x4073c9f0"/>
        <function-ref name="set" scoped="" ref="0x4074ea98"/>
        <function-ref name="start" scoped="" ref="0x4073c500"/>
        <function-ref name="stop" scoped="" ref="0x4073c778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40734878" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40734878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407302e0"/>
        <function-ref name="test" scoped="" ref="0x40731668"/>
        <function-ref name="get" scoped="" ref="0x40734ec0"/>
        <function-ref name="reset" scoped="" ref="0x407318e0"/>
        <function-ref name="getMode" scoped="" ref="0x40730580"/>
        <function-ref name="overflow" scoped="" ref="0x407313f0"/>
        <function-ref name="isOn" scoped="" ref="0x40730068"/>
        <function-ref name="set" scoped="" ref="0x40731150"/>
        <function-ref name="start" scoped="" ref="0x40731b58"/>
        <function-ref name="stop" scoped="" ref="0x40731dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40740f08" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40740f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4073f9f0"/>
        <function-ref name="test" scoped="" ref="0x4072ed08"/>
        <function-ref name="fired" scoped="" ref="0x4072ea90"/>
        <function-ref name="force" scoped="" ref="0x4073ff08"/>
        <function-ref name="get" scoped="" ref="0x4072e578"/>
        <function-ref name="reset" scoped="" ref="0x4073f010"/>
        <function-ref name="getMode" scoped="" ref="0x4073fc90"/>
        <function-ref name="isOn" scoped="" ref="0x4073f778"/>
        <function-ref name="set" scoped="" ref="0x4072e7f0"/>
        <function-ref name="start" scoped="" ref="0x4073f288"/>
        <function-ref name="stop" scoped="" ref="0x4073f500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40749b98" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40749b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40746600"/>
        <function-ref name="test" scoped="" ref="0x40747990"/>
        <function-ref name="fired" scoped="" ref="0x40747718"/>
        <function-ref name="force" scoped="" ref="0x40746b18"/>
        <function-ref name="get" scoped="" ref="0x40747200"/>
        <function-ref name="reset" scoped="" ref="0x40747c08"/>
        <function-ref name="getMode" scoped="" ref="0x407468a0"/>
        <function-ref name="isOn" scoped="" ref="0x40746388"/>
        <function-ref name="set" scoped="" ref="0x40747478"/>
        <function-ref name="start" scoped="" ref="0x40747e80"/>
        <function-ref name="stop" scoped="" ref="0x40746110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407556a8" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407556a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407531a0"/>
        <function-ref name="test" scoped="" ref="0x40754528"/>
        <function-ref name="fired" scoped="" ref="0x407542b0"/>
        <function-ref name="get" scoped="" ref="0x40755cf0"/>
        <function-ref name="reset" scoped="" ref="0x407547a0"/>
        <function-ref name="getMode" scoped="" ref="0x40753440"/>
        <function-ref name="isOn" scoped="" ref="0x40754f08"/>
        <function-ref name="set" scoped="" ref="0x40754010"/>
        <function-ref name="start" scoped="" ref="0x40754a18"/>
        <function-ref name="stop" scoped="" ref="0x40754c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407536f8" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407536f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407538d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40746f10" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40746f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407599f0"/>
        <function-ref name="test" scoped="" ref="0x40745d08"/>
        <function-ref name="fired" scoped="" ref="0x40745a90"/>
        <function-ref name="force" scoped="" ref="0x40759f08"/>
        <function-ref name="get" scoped="" ref="0x40745578"/>
        <function-ref name="reset" scoped="" ref="0x40759010"/>
        <function-ref name="getMode" scoped="" ref="0x40759c90"/>
        <function-ref name="isOn" scoped="" ref="0x40759778"/>
        <function-ref name="set" scoped="" ref="0x407457f0"/>
        <function-ref name="start" scoped="" ref="0x40759288"/>
        <function-ref name="stop" scoped="" ref="0x40759500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40753ae8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40753ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40753cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40758320" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40758320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40757d68"/>
        <function-ref name="test" scoped="" ref="0x40757110"/>
        <function-ref name="fired" scoped="" ref="0x40758e80"/>
        <function-ref name="force" scoped="" ref="0x407552c0"/>
        <function-ref name="get" scoped="" ref="0x40758968"/>
        <function-ref name="reset" scoped="" ref="0x40757388"/>
        <function-ref name="getMode" scoped="" ref="0x40755048"/>
        <function-ref name="isOn" scoped="" ref="0x40757af0"/>
        <function-ref name="set" scoped="" ref="0x40758be0"/>
        <function-ref name="start" scoped="" ref="0x40757600"/>
        <function-ref name="stop" scoped="" ref="0x40757878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4074da80" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4074da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40749500"/>
        <function-ref name="test" scoped="" ref="0x4074a888"/>
        <function-ref name="get" scoped="" ref="0x4074a0f8"/>
        <function-ref name="reset" scoped="" ref="0x4074ab00"/>
        <function-ref name="getMode" scoped="" ref="0x407497a0"/>
        <function-ref name="overflow" scoped="" ref="0x4074a610"/>
        <function-ref name="isOn" scoped="" ref="0x40749288"/>
        <function-ref name="set" scoped="" ref="0x4074a370"/>
        <function-ref name="start" scoped="" ref="0x4074ad78"/>
        <function-ref name="stop" scoped="" ref="0x40749010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40713b80" loc="47:/usr/src/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40713b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40713d58"/>
        <function-ref name="offset" scoped="" ref="0x40713e38"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40713f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x407a4010" loc="43:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a41e8"/>
        <function-ref name="getPayload" scoped="" ref="0x407a42c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407a43a8"/>
        <function-ref name="cancel" scoped="" ref="0x407a4488"/>
        <function-ref name="sendDone" scoped="" ref="0x407a4568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x407a46f0" loc="44:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407a46f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407a48c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407a4a38" loc="45:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407a4a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407a4c10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407a4cf0"/>
        <function-ref name="led1On" scoped="" ref="0x407a4dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407a4eb0"/>
        <function-ref name="led3Off" scoped="" ref="0x407a3010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407a30f0"/>
        <function-ref name="get" scoped="" ref="0x407a31d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407a32b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407a3390"/>
        <function-ref name="led3On" scoped="" ref="0x407a3470"/>
        <function-ref name="led0On" scoped="" ref="0x407a3550"/>
        <function-ref name="led2Off" scoped="" ref="0x407a3630"/>
        <function-ref name="led2On" scoped="" ref="0x407a3710"/>
        <function-ref name="set" scoped="" ref="0x407a3870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x407a2218" loc="54:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x407a2218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407a23f0"/>
        <function-ref name="runTask" scoped="" ref="0x407a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x407a7a28" loc="38:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x407a7a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x407a7c00"/>
        <function-ref name="offset" scoped="" ref="0x407a7ce0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x407a7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407a6a20" loc="42:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407a6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407a6bf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407a6cd8"/>
        <function-ref name="led1On" scoped="" ref="0x407a6db8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407a6e98"/>
        <function-ref name="led3Off" scoped="" ref="0x407c4010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407c40f0"/>
        <function-ref name="get" scoped="" ref="0x407c41d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407c42b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407c4390"/>
        <function-ref name="led3On" scoped="" ref="0x407c4470"/>
        <function-ref name="led0On" scoped="" ref="0x407c4550"/>
        <function-ref name="led2Off" scoped="" ref="0x407c4630"/>
        <function-ref name="led2On" scoped="" ref="0x407c4710"/>
        <function-ref name="set" scoped="" ref="0x407c4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x407c0480" loc="50:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407c0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c0658"/>
        <function-ref name="isInput" scoped="" ref="0x407c0738"/>
        <function-ref name="toggle" scoped="" ref="0x407c0818"/>
        <function-ref name="isOutput" scoped="" ref="0x407c08f8"/>
        <function-ref name="get" scoped="" ref="0x407c09d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c0ab8"/>
        <function-ref name="set" scoped="" ref="0x407c0b98"/>
        <function-ref name="clr" scoped="" ref="0x407c0c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x407be2e0" loc="53:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x407be2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407be4b8"/>
        <function-ref name="isInput" scoped="" ref="0x407be598"/>
        <function-ref name="toggle" scoped="" ref="0x407be678"/>
        <function-ref name="isOutput" scoped="" ref="0x407be758"/>
        <function-ref name="get" scoped="" ref="0x407be838"/>
        <function-ref name="makeOutput" scoped="" ref="0x407be918"/>
        <function-ref name="set" scoped="" ref="0x407be9f8"/>
        <function-ref name="clr" scoped="" ref="0x407bead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407c1128" loc="46:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407c1128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407c1300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x407c0e68" loc="51:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x407c0e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bf050"/>
        <function-ref name="isInput" scoped="" ref="0x407bf130"/>
        <function-ref name="toggle" scoped="" ref="0x407bf210"/>
        <function-ref name="isOutput" scoped="" ref="0x407bf2f0"/>
        <function-ref name="get" scoped="" ref="0x407bf3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bf4b0"/>
        <function-ref name="set" scoped="" ref="0x407bf590"/>
        <function-ref name="clr" scoped="" ref="0x407bf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407c1470" loc="47:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407c1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407c1648"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407c1728"/>
        <function-ref name="led1On" scoped="" ref="0x407c1808"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407c18e8"/>
        <function-ref name="led3Off" scoped="" ref="0x407c19c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407c1aa8"/>
        <function-ref name="get" scoped="" ref="0x407c1b88"/>
        <function-ref name="led1Off" scoped="" ref="0x407c1c68"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407c1d48"/>
        <function-ref name="led3On" scoped="" ref="0x407c1e28"/>
        <function-ref name="led0On" scoped="" ref="0x407c1f08"/>
        <function-ref name="led2Off" scoped="" ref="0x407c0010"/>
        <function-ref name="led2On" scoped="" ref="0x407c00f0"/>
        <function-ref name="set" scoped="" ref="0x407c0250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x407bf860" loc="52:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x407bf860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bfa38"/>
        <function-ref name="isInput" scoped="" ref="0x407bfb18"/>
        <function-ref name="toggle" scoped="" ref="0x407bfbf8"/>
        <function-ref name="isOutput" scoped="" ref="0x407bfcd8"/>
        <function-ref name="get" scoped="" ref="0x407bfdb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bfe98"/>
        <function-ref name="set" scoped="" ref="0x407be010"/>
        <function-ref name="clr" scoped="" ref="0x407be0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x407c3c20" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407c3c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c3df8"/>
        <function-ref name="isInput" scoped="" ref="0x407c3ed8"/>
        <function-ref name="toggle" scoped="" ref="0x407db010"/>
        <function-ref name="isOutput" scoped="" ref="0x407db0f0"/>
        <function-ref name="get" scoped="" ref="0x407db1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407db2b0"/>
        <function-ref name="set" scoped="" ref="0x407db390"/>
        <function-ref name="clr" scoped="" ref="0x407db470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x407daa48" loc="42:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x407daa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407dac20"/>
        <function-ref name="isInput" scoped="" ref="0x407dad00"/>
        <function-ref name="toggle" scoped="" ref="0x407dade0"/>
        <function-ref name="isOutput" scoped="" ref="0x407daec0"/>
        <function-ref name="get" scoped="" ref="0x407d9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d90f0"/>
        <function-ref name="set" scoped="" ref="0x407d91d0"/>
        <function-ref name="clr" scoped="" ref="0x407d92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x407db660" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x407db660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407db838"/>
        <function-ref name="isInput" scoped="" ref="0x407db918"/>
        <function-ref name="toggle" scoped="" ref="0x407db9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x407dbad8"/>
        <function-ref name="get" scoped="" ref="0x407dbbb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407dbc98"/>
        <function-ref name="set" scoped="" ref="0x407dbd78"/>
        <function-ref name="clr" scoped="" ref="0x407dbe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x407d9450" loc="45:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407d9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d9628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x407da060" loc="41:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x407da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407da238"/>
        <function-ref name="isInput" scoped="" ref="0x407da318"/>
        <function-ref name="toggle" scoped="" ref="0x407da3f8"/>
        <function-ref name="isOutput" scoped="" ref="0x407da4d8"/>
        <function-ref name="get" scoped="" ref="0x407da5b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407da698"/>
        <function-ref name="set" scoped="" ref="0x407da778"/>
        <function-ref name="clr" scoped="" ref="0x407da858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x407d4508" loc="60:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x407d4508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4041f778" loc="57:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4041f778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4041f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x407d4100" loc="59:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x407d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d42d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4041fb10" loc="58:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4041fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041fce8"/>
        <function-ref name="taskLoop" scoped="" ref="0x4041fdc8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4041fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4038a330" loc="48:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4038a508"/>
        <function-ref name="runTask" scoped="" ref="0x4038a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4032fb58" loc="47:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4032fd30"/>
        <function-ref name="taskLoop" scoped="" ref="0x4032fe10"/>
        <function-ref name="runNextTask" scoped="" ref="0x4032fef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403f8010" loc="56:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403f81e8"/>
        <function-ref name="runTask" scoped="" ref="0x403f82c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403f8c70" loc="57:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403f8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403f8e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403f9738" loc="55:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403f9738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f9910"/>
        <function-ref name="taskLoop" scoped="" ref="0x403f99f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403f9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x407f21a0" loc="36:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x407f21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x407f2378"/>
        <function-ref name="setRoot" scoped="" ref="0x407f2458"/>
        <function-ref name="unsetRoot" scoped="" ref="0x407f2538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x407f5a78" loc="35:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x407f5a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x407f5c50"/>
        <function-ref name="setOrigin" scoped="" ref="0x407f5d30"/>
        <function-ref name="setType" scoped="" ref="0x407f5e10"/>
        <function-ref name="getOrigin" scoped="" ref="0x407f5ef0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x407e0010"/>
        <function-ref name="getType" scoped="" ref="0x407e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x407e5400" loc="25:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x407e5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x407e55d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x407e5f18" loc="27:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x407e5f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407e4108"/>
        <function-ref name="stopDone" scoped="" ref="0x407e41e8"/>
        <function-ref name="start" scoped="" ref="0x407e42c8"/>
        <function-ref name="stop" scoped="" ref="0x407e43a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x40810480" loc="49:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x40810480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40810658"/>
        <function-ref name="runTask" scoped="" ref="0x40810738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Snoop" ref="0x407e21f0" loc="32:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x407e21f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e23c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x407e5838" loc="26:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x407e5838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407e5a10"/>
        <function-ref name="stopDone" scoped="" ref="0x407e5af0"/>
        <function-ref name="start" scoped="" ref="0x407e5bd0"/>
        <function-ref name="stop" scoped="" ref="0x407e5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x407e4a38" loc="31:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407e4a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e4c10"/>
        <function-ref name="getPayload" scoped="" ref="0x407e4cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e4dd0"/>
        <function-ref name="cancel" scoped="" ref="0x407e4eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x407e2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x40803da0" loc="39:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x40803da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407ede78"/>
        <function-ref name="maxSize" scoped="" ref="0x407ed890"/>
        <function-ref name="empty" scoped="" ref="0x407ed3e0"/>
        <function-ref name="put" scoped="" ref="0x407edae8"/>
        <function-ref name="size" scoped="" ref="0x407ed638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x40811480" loc="43:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40811480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40811aa8"/>
        <function-ref name="readDone" scoped="" ref="0x40811d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x407e2930" loc="34:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x407e2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407e2b08"/>
        <function-ref name="getPayload" scoped="" ref="0x407e2be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407e2cc8"/>
        <function-ref name="cancel" scoped="" ref="0x407e2da8"/>
        <function-ref name="sendDone" scoped="" ref="0x407e2e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x407e4600" loc="28:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x407e4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407e47d8"/>
        <function-ref name="stop" scoped="" ref="0x407e48b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x407e2550" loc="33:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407e2550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407e2728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407f8040" loc="44:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407f8040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407f8218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407f82f8"/>
        <function-ref name="led1On" scoped="" ref="0x407f83d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407f84b8"/>
        <function-ref name="led3Off" scoped="" ref="0x407f8598"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407f8678"/>
        <function-ref name="get" scoped="" ref="0x407f8758"/>
        <function-ref name="led1Off" scoped="" ref="0x407f8838"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407f8918"/>
        <function-ref name="led3On" scoped="" ref="0x407f89f8"/>
        <function-ref name="led0On" scoped="" ref="0x407f8ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x407f8bb8"/>
        <function-ref name="led2On" scoped="" ref="0x407f8c98"/>
        <function-ref name="set" scoped="" ref="0x407f8df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x407efab8" loc="38:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x407efab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x407df808"/>
        <function-ref name="enqueue" scoped="" ref="0x407dfee8"/>
        <function-ref name="element" scoped="" ref="0x407f3270"/>
        <function-ref name="maxSize" scoped="" ref="0x407df5b0"/>
        <function-ref name="dequeue" scoped="" ref="0x407dfb78"/>
        <function-ref name="empty" scoped="" ref="0x407df100"/>
        <function-ref name="size" scoped="" ref="0x407df358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407fccd0" loc="42:MultihopOscilloscopeC.nc">
      <component-ref qname="MultihopOscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407fccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408008a8"/>
        <function-ref name="fired" scoped="" ref="0x40801b18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40800268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40800010"/>
        <function-ref name="getdt" scoped="" ref="0x40800d58"/>
        <function-ref name="gett0" scoped="" ref="0x40800b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40801d70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408013c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40800588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40801640"/>
        <function-ref name="stop" scoped="" ref="0x408018c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408350a0" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408350a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4082fb88"/>
        <function-ref name="fired" scoped="" ref="0x40835e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4082f548"/>
        <function-ref name="isOneShot" scoped="" ref="0x4082f2f0"/>
        <function-ref name="getdt" scoped="" ref="0x4094b048"/>
        <function-ref name="gett0" scoped="" ref="0x4082fde0"/>
        <function-ref name="isRunning" scoped="" ref="0x4082f098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408356c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4082f868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40835948"/>
        <function-ref name="stop" scoped="" ref="0x40835bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40831e58" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40831e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4082d988"/>
        <function-ref name="fired" scoped="" ref="0x4082ec10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4082d348"/>
        <function-ref name="isOneShot" scoped="" ref="0x4082d0f0"/>
        <function-ref name="getdt" scoped="" ref="0x4082de38"/>
        <function-ref name="gett0" scoped="" ref="0x4082dbe0"/>
        <function-ref name="isRunning" scoped="" ref="0x4082ee68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4082e4b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4082d668"/>
        <function-ref name="startOneShot" scoped="" ref="0x4082e738"/>
        <function-ref name="stop" scoped="" ref="0x4082e9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40844cf0" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40844cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409001e8"/>
        <function-ref name="fired" scoped="" ref="0x40843990"/>
        <function-ref name="startAt" scoped="" ref="0x40843e80"/>
        <function-ref name="isRunning" scoped="" ref="0x40843c08"/>
        <function-ref name="getAlarm" scoped="" ref="0x40900460"/>
        <function-ref name="start" scoped="" ref="0x40843478"/>
        <function-ref name="stop" scoped="" ref="0x40843718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41332868" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41332868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41330d58"/>
        <function-ref name="fired" scoped="" ref="0x41330528"/>
        <function-ref name="startAt" scoped="" ref="0x41330a18"/>
        <function-ref name="isRunning" scoped="" ref="0x413307a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4132f010"/>
        <function-ref name="start" scoped="" ref="0x41330010"/>
        <function-ref name="stop" scoped="" ref="0x413302b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x413202b0" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x413202b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4131fd00"/>
        <function-ref name="test" scoped="" ref="0x4131f0a8"/>
        <function-ref name="fired" scoped="" ref="0x41320e10"/>
        <function-ref name="force" scoped="" ref="0x4131e288"/>
        <function-ref name="get" scoped="" ref="0x413208f8"/>
        <function-ref name="reset" scoped="" ref="0x4131f320"/>
        <function-ref name="getMode" scoped="" ref="0x4131e010"/>
        <function-ref name="isOn" scoped="" ref="0x4131fa88"/>
        <function-ref name="set" scoped="" ref="0x41320b70"/>
        <function-ref name="start" scoped="" ref="0x4131f598"/>
        <function-ref name="stop" scoped="" ref="0x4131f810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x413258a8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413258a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41324d58"/>
        <function-ref name="fired" scoped="" ref="0x41324528"/>
        <function-ref name="startAt" scoped="" ref="0x41324a18"/>
        <function-ref name="isRunning" scoped="" ref="0x413247a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41323010"/>
        <function-ref name="start" scoped="" ref="0x41324010"/>
        <function-ref name="stop" scoped="" ref="0x413242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41325470" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41325470"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41325648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x413232e0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x413232e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41322d30"/>
        <function-ref name="test" scoped="" ref="0x413220d8"/>
        <function-ref name="get" scoped="" ref="0x41323928"/>
        <function-ref name="reset" scoped="" ref="0x41322350"/>
        <function-ref name="getMode" scoped="" ref="0x41320010"/>
        <function-ref name="overflow" scoped="" ref="0x41323e40"/>
        <function-ref name="isOn" scoped="" ref="0x41322ab8"/>
        <function-ref name="set" scoped="" ref="0x41323ba0"/>
        <function-ref name="start" scoped="" ref="0x413225c8"/>
        <function-ref name="stop" scoped="" ref="0x41322840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40867cd8" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40867cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40863778"/>
        <function-ref name="test" scoped="" ref="0x40864b00"/>
        <function-ref name="get" scoped="" ref="0x40864370"/>
        <function-ref name="reset" scoped="" ref="0x40864d78"/>
        <function-ref name="getMode" scoped="" ref="0x40863a18"/>
        <function-ref name="overflow" scoped="" ref="0x40864888"/>
        <function-ref name="isOn" scoped="" ref="0x40863500"/>
        <function-ref name="set" scoped="" ref="0x408645e8"/>
        <function-ref name="start" scoped="" ref="0x40863010"/>
        <function-ref name="stop" scoped="" ref="0x40863288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x4087b490" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x4087b490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40879ee0"/>
        <function-ref name="test" scoped="" ref="0x40879288"/>
        <function-ref name="fired" scoped="" ref="0x40879010"/>
        <function-ref name="get" scoped="" ref="0x4087bad8"/>
        <function-ref name="reset" scoped="" ref="0x40879500"/>
        <function-ref name="getMode" scoped="" ref="0x408781c0"/>
        <function-ref name="isOn" scoped="" ref="0x40879c68"/>
        <function-ref name="set" scoped="" ref="0x4087bd50"/>
        <function-ref name="start" scoped="" ref="0x40879778"/>
        <function-ref name="stop" scoped="" ref="0x408799f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40861100" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40861100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40860b50"/>
        <function-ref name="test" scoped="" ref="0x40861ed8"/>
        <function-ref name="fired" scoped="" ref="0x40861c60"/>
        <function-ref name="force" scoped="" ref="0x4087b088"/>
        <function-ref name="get" scoped="" ref="0x40861748"/>
        <function-ref name="reset" scoped="" ref="0x40860170"/>
        <function-ref name="getMode" scoped="" ref="0x40860df0"/>
        <function-ref name="isOn" scoped="" ref="0x408608d8"/>
        <function-ref name="set" scoped="" ref="0x408619c0"/>
        <function-ref name="start" scoped="" ref="0x408603e8"/>
        <function-ref name="stop" scoped="" ref="0x40860660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40873e88" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40873e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40871908"/>
        <function-ref name="test" scoped="" ref="0x40872c88"/>
        <function-ref name="fired" scoped="" ref="0x40872a10"/>
        <function-ref name="force" scoped="" ref="0x40871e20"/>
        <function-ref name="get" scoped="" ref="0x408724f8"/>
        <function-ref name="reset" scoped="" ref="0x40872f00"/>
        <function-ref name="getMode" scoped="" ref="0x40871ba8"/>
        <function-ref name="isOn" scoped="" ref="0x40871690"/>
        <function-ref name="set" scoped="" ref="0x40872770"/>
        <function-ref name="start" scoped="" ref="0x408711a0"/>
        <function-ref name="stop" scoped="" ref="0x40871418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40883a90" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40883a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40883c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4086f248" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4086f248"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4086eca0"/>
        <function-ref name="test" scoped="" ref="0x4086e048"/>
        <function-ref name="fired" scoped="" ref="0x4086fda8"/>
        <function-ref name="force" scoped="" ref="0x40889288"/>
        <function-ref name="get" scoped="" ref="0x4086f890"/>
        <function-ref name="reset" scoped="" ref="0x4086e2c0"/>
        <function-ref name="getMode" scoped="" ref="0x40889010"/>
        <function-ref name="isOn" scoped="" ref="0x4086ea28"/>
        <function-ref name="set" scoped="" ref="0x4086fb08"/>
        <function-ref name="start" scoped="" ref="0x4086e538"/>
        <function-ref name="stop" scoped="" ref="0x4086e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40878d50" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40878d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408737f0"/>
        <function-ref name="test" scoped="" ref="0x40875b70"/>
        <function-ref name="get" scoped="" ref="0x408753e0"/>
        <function-ref name="reset" scoped="" ref="0x40875de8"/>
        <function-ref name="getMode" scoped="" ref="0x40873a90"/>
        <function-ref name="overflow" scoped="" ref="0x408758f8"/>
        <function-ref name="isOn" scoped="" ref="0x40873578"/>
        <function-ref name="set" scoped="" ref="0x40875658"/>
        <function-ref name="start" scoped="" ref="0x40873088"/>
        <function-ref name="stop" scoped="" ref="0x40873300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40883e80" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40883e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40882070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40886ac0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40886ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40883538"/>
        <function-ref name="test" scoped="" ref="0x408858b0"/>
        <function-ref name="fired" scoped="" ref="0x40885638"/>
        <function-ref name="get" scoped="" ref="0x40885120"/>
        <function-ref name="reset" scoped="" ref="0x40885b28"/>
        <function-ref name="getMode" scoped="" ref="0x408837d8"/>
        <function-ref name="isOn" scoped="" ref="0x408832c0"/>
        <function-ref name="set" scoped="" ref="0x40885398"/>
        <function-ref name="start" scoped="" ref="0x40885da0"/>
        <function-ref name="stop" scoped="" ref="0x40883048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40889680" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40889680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408861a0"/>
        <function-ref name="test" scoped="" ref="0x40887528"/>
        <function-ref name="fired" scoped="" ref="0x408872b0"/>
        <function-ref name="force" scoped="" ref="0x408866b8"/>
        <function-ref name="get" scoped="" ref="0x40889cc8"/>
        <function-ref name="reset" scoped="" ref="0x408877a0"/>
        <function-ref name="getMode" scoped="" ref="0x40886440"/>
        <function-ref name="isOn" scoped="" ref="0x40887f08"/>
        <function-ref name="set" scoped="" ref="0x40887010"/>
        <function-ref name="start" scoped="" ref="0x40887a18"/>
        <function-ref name="stop" scoped="" ref="0x40887c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408dde30" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408dde30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408da590"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408daa80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408da808"/>
        <function-ref name="overflow" scoped="" ref="0x408dacf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408d8d70" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408d8d70"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408d7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408d7270" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408d7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408d79c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408d7eb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408d7c38"/>
        <function-ref name="overflow" scoped="" ref="0x408d6150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x408d6420" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x408d6420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408d4ee0"/>
        <function-ref name="test" scoped="" ref="0x408d4288"/>
        <function-ref name="get" scoped="" ref="0x408d6a68"/>
        <function-ref name="reset" scoped="" ref="0x408d4500"/>
        <function-ref name="getMode" scoped="" ref="0x408d31c0"/>
        <function-ref name="overflow" scoped="" ref="0x408d4010"/>
        <function-ref name="isOn" scoped="" ref="0x408d4c68"/>
        <function-ref name="set" scoped="" ref="0x408d6ce0"/>
        <function-ref name="start" scoped="" ref="0x408d4778"/>
        <function-ref name="stop" scoped="" ref="0x408d49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408d09f8" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408d09f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ea200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408ea6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408ea478"/>
        <function-ref name="overflow" scoped="" ref="0x408ea968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x408e6298" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x408e6298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408e69e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408e6ed8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408e6c60"/>
        <function-ref name="overflow" scoped="" ref="0x408e5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408e8030" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408e8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408e8780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408e8c70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408e89f8"/>
        <function-ref name="overflow" scoped="" ref="0x408e8ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4132e240" loc="61:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4132e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4132d708"/>
        <function-ref name="fired" scoped="" ref="0x4132eea8"/>
        <function-ref name="startAt" scoped="" ref="0x4132d3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4132d150"/>
        <function-ref name="getAlarm" scoped="" ref="0x4132d980"/>
        <function-ref name="start" scoped="" ref="0x4132e990"/>
        <function-ref name="stop" scoped="" ref="0x4132ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x4132bf10" loc="73:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x4132bf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413293e8"/>
        <function-ref name="fired" scoped="" ref="0x4132ab98"/>
        <function-ref name="startAt" scoped="" ref="0x413290a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4132ae10"/>
        <function-ref name="getAlarm" scoped="" ref="0x41329660"/>
        <function-ref name="start" scoped="" ref="0x4132a680"/>
        <function-ref name="stop" scoped="" ref="0x4132a920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4132dcd0" loc="68:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4132dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4132b438"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4132b928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4132b6b0"/>
        <function-ref name="overflow" scoped="" ref="0x4132bba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40921298" loc="74:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40921298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40921470"/>
        <function-ref name="runTask" scoped="" ref="0x40921550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x409238d8" loc="49:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409238d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40922d90"/>
        <function-ref name="fired" scoped="" ref="0x40922560"/>
        <function-ref name="startAt" scoped="" ref="0x40922a50"/>
        <function-ref name="isRunning" scoped="" ref="0x409227d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40921048"/>
        <function-ref name="start" scoped="" ref="0x40922048"/>
        <function-ref name="stop" scoped="" ref="0x409222e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408fe5d8" loc="48:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408fe5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409230d8"/>
        <function-ref name="fired" scoped="" ref="0x40925368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40925a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40925818"/>
        <function-ref name="getdt" scoped="" ref="0x40923588"/>
        <function-ref name="gett0" scoped="" ref="0x40923330"/>
        <function-ref name="isRunning" scoped="" ref="0x409255c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408fec00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40925d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x408fee80"/>
        <function-ref name="stop" scoped="" ref="0x40925110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4094d050" loc="71:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4094d050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4094d228"/>
        <function-ref name="runTask" scoped="" ref="0x4094d308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40952e30" loc="49:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40952e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4094f920"/>
        <function-ref name="fired" scoped="" ref="0x40950bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4094f2e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4094f088"/>
        <function-ref name="getdt" scoped="" ref="0x4094fdd0"/>
        <function-ref name="gett0" scoped="" ref="0x4094fb78"/>
        <function-ref name="isRunning" scoped="" ref="0x40950e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40950468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4094f600"/>
        <function-ref name="startOneShot" scoped="" ref="0x409506e8"/>
        <function-ref name="stop" scoped="" ref="0x40950968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4091ea60" loc="48:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4091ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40952670"/>
        <function-ref name="fired" scoped="" ref="0x40953840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40952010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40953d10"/>
        <function-ref name="getdt" scoped="" ref="0x40952b40"/>
        <function-ref name="gett0" scoped="" ref="0x409528d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40953aa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409530b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40952340"/>
        <function-ref name="startOneShot" scoped="" ref="0x40953348"/>
        <function-ref name="stop" scoped="" ref="0x409535d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4094a5a8" loc="36:/usr/src/tinyos/tos/platforms/ucmini/DemoSensorC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4094a5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4094abd0"/>
        <function-ref name="readDone" scoped="" ref="0x4094ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x40963bb8" loc="37:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <component-ref qname="Sht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x40963bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409621f0"/>
        <function-ref name="readDone" scoped="" ref="0x40962448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x40947ea0" loc="36:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <component-ref qname="Sht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x40947ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409634d8"/>
        <function-ref name="readDone" scoped="" ref="0x40963730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalReadDone" ref="0x40979eb8" loc="153:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalReadDone" scoped="" ref="0x40979eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409770c0"/>
        <function-ref name="runTask" scoped="" ref="0x409771a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x409913b0" loc="192:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x409913b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40991588"/>
        <function-ref name="runTask" scoped="" ref="0x40991668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusPowerManager" ref="0x40968b00" loc="43:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40968b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40968cd8"/>
        <function-ref name="requestPower" scoped="" ref="0x40968db8"/>
        <function-ref name="powerOff" scoped="" ref="0x40968e98"/>
        <function-ref name="configure" scoped="" ref="0x4096e010"/>
        <function-ref name="releasePower" scoped="" ref="0x4096e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x4095d6f0" loc="38:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x4095d6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4095dd18"/>
        <function-ref name="readDone" scoped="" ref="0x4095c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4096e280" loc="44:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4096e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4096e458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x4096b468" loc="42:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x4096b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4096b640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4096b720"/>
        <function-ref name="request" scoped="" ref="0x4096b800"/>
        <function-ref name="granted" scoped="" ref="0x4096b8e0"/>
        <function-ref name="isOwner" scoped="" ref="0x4096b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x4095e9a8" loc="37:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x4095e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4095d010"/>
        <function-ref name="readDone" scoped="" ref="0x4095d268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x4095a158" loc="40:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4095a158"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x4095c980"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x4095cae8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4095a7a0"/>
        <function-ref name="writeDone" scoped="" ref="0x40959a20"/>
        <function-ref name="write" scoped="" ref="0x4095adc0"/>
        <function-ref name="readDone" scoped="" ref="0x40959400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40971130" loc="41:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40971130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40970c20"/>
        <function-ref name="fired" scoped="" ref="0x40971eb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409705e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40970388"/>
        <function-ref name="getdt" scoped="" ref="0x4096f0f0"/>
        <function-ref name="gett0" scoped="" ref="0x40970e78"/>
        <function-ref name="isRunning" scoped="" ref="0x40970130"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40971758"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40970900"/>
        <function-ref name="startOneShot" scoped="" ref="0x409719d8"/>
        <function-ref name="stop" scoped="" ref="0x40971c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409875a8" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="Sht21C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409875a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409a50d8"/>
        <function-ref name="fired" scoped="" ref="0x40986368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40986a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40986818"/>
        <function-ref name="getdt" scoped="" ref="0x409a5588"/>
        <function-ref name="gett0" scoped="" ref="0x409a5330"/>
        <function-ref name="isRunning" scoped="" ref="0x409865c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40987bd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40986d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40987e50"/>
        <function-ref name="stop" scoped="" ref="0x40986110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x4099e208" loc="38:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x4099e208"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x4099e3e0"/>
        <function-ref name="requestPower" scoped="" ref="0x4099e4c0"/>
        <function-ref name="powerOff" scoped="" ref="0x4099e5a0"/>
        <function-ref name="configure" scoped="" ref="0x4099e680"/>
        <function-ref name="releasePower" scoped="" ref="0x4099e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4099f9d8" loc="37:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4099f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4099fbb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4099fc90"/>
        <function-ref name="request" scoped="" ref="0x4099fd70"/>
        <function-ref name="granted" scoped="" ref="0x4099fe50"/>
        <function-ref name="isOwner" scoped="" ref="0x4099e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x409a4aa8" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x409a4aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x4095c980"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x4095cae8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a1120"/>
        <function-ref name="writeDone" scoped="" ref="0x4099f3a8"/>
        <function-ref name="write" scoped="" ref="0x409a1740"/>
        <function-ref name="readDone" scoped="" ref="0x409a1d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4099d718" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplSht21C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4099d718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4099d8f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4099d9d0"/>
        <function-ref name="request" scoped="" ref="0x4099dab0"/>
        <function-ref name="granted" scoped="" ref="0x4099db90"/>
        <function-ref name="isOwner" scoped="" ref="0x4099dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x4099de60" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplSht21C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x4099de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x4095c980"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x4095cae8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099c4d8"/>
        <function-ref name="writeDone" scoped="" ref="0x40a97778"/>
        <function-ref name="write" scoped="" ref="0x4099caf8"/>
        <function-ref name="readDone" scoped="" ref="0x40a97158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409968e0" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409968e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40996ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40996b98"/>
        <function-ref name="request" scoped="" ref="0x40996c78"/>
        <function-ref name="granted" scoped="" ref="0x40996d58"/>
        <function-ref name="isOwner" scoped="" ref="0x40996e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x409b2460" loc="46:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x409b2460"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x4095c980"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x4095cae8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b2aa8"/>
        <function-ref name="writeDone" scoped="" ref="0x409b1d68"/>
        <function-ref name="write" scoped="" ref="0x409b1128"/>
        <function-ref name="readDone" scoped="" ref="0x409b1748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x409eb488" loc="92:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x409eb488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x409eb670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x409eb750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409ea3e8" loc="96:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409ea3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409ea5d0"/>
        <function-ref name="configure" scoped="" ref="0x409ea6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x409eb890" loc="93:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x409eb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409eba68"/>
        <function-ref name="requested" scoped="" ref="0x409ebb48"/>
        <function-ref name="granted" scoped="" ref="0x409ebc28"/>
        <function-ref name="isOwner" scoped="" ref="0x409ebd08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x409ebde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409adce8" loc="91:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409adce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409aded0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409eb010"/>
        <function-ref name="request" scoped="" ref="0x409eb0f0"/>
        <function-ref name="granted" scoped="" ref="0x409eb1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x409eb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x409ebf28" loc="94:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x409ebf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x409ea110"/>
        <function-ref name="userId" scoped="" ref="0x409ea1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413664b8" loc="44:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413664b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41366690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x413667f0" loc="45:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x413667f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413669c8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41366aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41366b88"/>
        <function-ref name="dequeue" scoped="" ref="0x41366c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x413630c8" loc="55:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x413630c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x413632b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41363390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41362068" loc="60:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41362068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41362250"/>
        <function-ref name="configure" scoped="" ref="0x41362330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41362490" loc="61:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41362490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41362668"/>
        <function-ref name="isEmpty" scoped="" ref="0x41362748"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41362828"/>
        <function-ref name="dequeue" scoped="" ref="0x41362908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x413634d0" loc="56:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x413634d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x413636a8"/>
        <function-ref name="requested" scoped="" ref="0x41363788"/>
        <function-ref name="granted" scoped="" ref="0x41363868"/>
        <function-ref name="isOwner" scoped="" ref="0x41363948"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41363a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41362a48" loc="62:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41362a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41362c20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41362d00"/>
        <function-ref name="led1On" scoped="" ref="0x41362de0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41362ec0"/>
        <function-ref name="led3Off" scoped="" ref="0x41361010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413610f0"/>
        <function-ref name="get" scoped="" ref="0x413611d0"/>
        <function-ref name="led1Off" scoped="" ref="0x413612b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41361390"/>
        <function-ref name="led3On" scoped="" ref="0x41361470"/>
        <function-ref name="led0On" scoped="" ref="0x41361550"/>
        <function-ref name="led2Off" scoped="" ref="0x41361630"/>
        <function-ref name="led2On" scoped="" ref="0x41361710"/>
        <function-ref name="set" scoped="" ref="0x41361870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41364960" loc="54:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41364960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41364b48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41364c28"/>
        <function-ref name="request" scoped="" ref="0x41364d08"/>
        <function-ref name="granted" scoped="" ref="0x41364de8"/>
        <function-ref name="isOwner" scoped="" ref="0x41364ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41363b68" loc="57:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41363b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41363d40"/>
        <function-ref name="userId" scoped="" ref="0x41363e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x413619f0" loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x413619f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41361bc8"/>
        <function-ref name="runTask" scoped="" ref="0x41361ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x409e8d38" loc="62:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x409e8d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x409e8f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40a01070" loc="63:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a01070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a01248"/>
        <function-ref name="requested" scoped="" ref="0x40a01328"/>
        <function-ref name="granted" scoped="" ref="0x40a01408"/>
        <function-ref name="isOwner" scoped="" ref="0x40a014e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a015c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x409e8940" loc="60:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x409e8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409e8b18"/>
        <function-ref name="stop" scoped="" ref="0x409e8bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a01708" loc="64:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a01708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a018e0"/>
        <function-ref name="userId" scoped="" ref="0x40a019c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x40a20860" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40a20860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40a20a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a229a8" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a229a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x4095c980"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x4095cae8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a21010"/>
        <function-ref name="writeDone" scoped="" ref="0x40a20288"/>
        <function-ref name="write" scoped="" ref="0x40a21630"/>
        <function-ref name="readDone" scoped="" ref="0x40a21c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a20b98" loc="46:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a20b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a20d70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a20e50"/>
        <function-ref name="led1On" scoped="" ref="0x40a1e010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a1e0f0"/>
        <function-ref name="led3Off" scoped="" ref="0x40a1e1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a1e2b0"/>
        <function-ref name="get" scoped="" ref="0x40a1e390"/>
        <function-ref name="led1Off" scoped="" ref="0x40a1e470"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a1e550"/>
        <function-ref name="led3On" scoped="" ref="0x40a1e630"/>
        <function-ref name="led0On" scoped="" ref="0x40a1e710"/>
        <function-ref name="led2Off" scoped="" ref="0x40a1e7f0"/>
        <function-ref name="led2On" scoped="" ref="0x40a1e8d0"/>
        <function-ref name="set" scoped="" ref="0x40a1ea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409ff9e0" loc="41:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409ff9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409ffbc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409ffca8"/>
        <function-ref name="request" scoped="" ref="0x409ffd88"/>
        <function-ref name="granted" scoped="" ref="0x409ffe68"/>
        <function-ref name="isOwner" scoped="" ref="0x409fe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x409fe298" loc="42:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x409fe298"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x4095c980"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x4095cae8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409fe8f0"/>
        <function-ref name="writeDone" scoped="" ref="0x40a23b98"/>
        <function-ref name="write" scoped="" ref="0x409fef20"/>
        <function-ref name="readDone" scoped="" ref="0x40a23568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40a22230" loc="43:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40a22230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a22418"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a224f8"/>
        <function-ref name="request" scoped="" ref="0x40a225d8"/>
        <function-ref name="granted" scoped="" ref="0x40a226b8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a22798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x40a68240" loc="79:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40a68240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40a68418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x40a68598" loc="81:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40a68598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40a68770"/>
        <function-ref name="sendCommand" scoped="" ref="0x40a68850"/>
        <function-ref name="setStart" scoped="" ref="0x40a68930"/>
        <function-ref name="status" scoped="" ref="0x40a68a10"/>
        <function-ref name="hasAcks" scoped="" ref="0x40a68af0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40a68bd0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a68cb0"/>
        <function-ref name="read" scoped="" ref="0x40a68d90"/>
        <function-ref name="init" scoped="" ref="0x40a68e70"/>
        <function-ref name="enableAck" scoped="" ref="0x40a67010"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a670f0"/>
        <function-ref name="hasStart" scoped="" ref="0x40a671d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a672b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x40a67410"/>
        <function-ref name="enable" scoped="" ref="0x40a674f0"/>
        <function-ref name="write" scoped="" ref="0x40a675d0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40a676b0"/>
        <function-ref name="off" scoped="" ref="0x40a67790"/>
        <function-ref name="setStop" scoped="" ref="0x40a67870"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40a67950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a67a30"/>
        <function-ref name="hasStop" scoped="" ref="0x40a67b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x40a67c90" loc="82:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x40a67c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a67e68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a66010"/>
        <function-ref name="led1On" scoped="" ref="0x40a660f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a661d0"/>
        <function-ref name="led3Off" scoped="" ref="0x40a662b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a66390"/>
        <function-ref name="get" scoped="" ref="0x40a66470"/>
        <function-ref name="led1Off" scoped="" ref="0x40a66550"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a66630"/>
        <function-ref name="led3On" scoped="" ref="0x40a66710"/>
        <function-ref name="led0On" scoped="" ref="0x40a667f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40a668d0"/>
        <function-ref name="led2On" scoped="" ref="0x40a669b0"/>
        <function-ref name="set" scoped="" ref="0x40a66b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x40a66c90" loc="83:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x40a66c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a66e68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a65010"/>
        <function-ref name="led1On" scoped="" ref="0x40a650f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a651d0"/>
        <function-ref name="led3Off" scoped="" ref="0x40a652b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a65390"/>
        <function-ref name="get" scoped="" ref="0x40a65470"/>
        <function-ref name="led1Off" scoped="" ref="0x40a65550"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a65630"/>
        <function-ref name="led3On" scoped="" ref="0x40a65710"/>
        <function-ref name="led0On" scoped="" ref="0x40a657f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40a658d0"/>
        <function-ref name="led2On" scoped="" ref="0x40a659b0"/>
        <function-ref name="set" scoped="" ref="0x40a65b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40a1cd80" loc="77:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a1cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a1b010"/>
        <function-ref name="stop" scoped="" ref="0x40a1b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40a1b2e0" loc="78:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40a1b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x4095c980"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x4095cae8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a1b928"/>
        <function-ref name="writeDone" scoped="" ref="0x40a6ac50"/>
        <function-ref name="write" scoped="" ref="0x40a6a010"/>
        <function-ref name="readDone" scoped="" ref="0x40a6a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40a63538" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40a63538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40a63710"/>
        <function-ref name="sendCommand" scoped="" ref="0x40a637f0"/>
        <function-ref name="setStart" scoped="" ref="0x40a638d0"/>
        <function-ref name="status" scoped="" ref="0x40a639b0"/>
        <function-ref name="hasAcks" scoped="" ref="0x40a63a90"/>
        <function-ref name="isEnabled" scoped="" ref="0x40a63b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a63c50"/>
        <function-ref name="read" scoped="" ref="0x40a63d30"/>
        <function-ref name="init" scoped="" ref="0x40a63e10"/>
        <function-ref name="enableAck" scoped="" ref="0x40a63ef0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a60010"/>
        <function-ref name="hasStart" scoped="" ref="0x40a600f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a601d0"/>
        <function-ref name="commandComplete" scoped="" ref="0x40a60330"/>
        <function-ref name="enable" scoped="" ref="0x40a60410"/>
        <function-ref name="write" scoped="" ref="0x40a604f0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40a605d0"/>
        <function-ref name="off" scoped="" ref="0x40a606b0"/>
        <function-ref name="setStop" scoped="" ref="0x40a60790"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40a60870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a60950"/>
        <function-ref name="hasStop" scoped="" ref="0x40a60a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40a5f5d8" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40a5f5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40a5f7b0"/>
        <function-ref name="sendCommand" scoped="" ref="0x40a5f890"/>
        <function-ref name="setStart" scoped="" ref="0x40a5f970"/>
        <function-ref name="status" scoped="" ref="0x40a5fa50"/>
        <function-ref name="hasAcks" scoped="" ref="0x40a5fb30"/>
        <function-ref name="isEnabled" scoped="" ref="0x40a5fc10"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a5fcf0"/>
        <function-ref name="read" scoped="" ref="0x40a5fdd0"/>
        <function-ref name="init" scoped="" ref="0x40a5feb0"/>
        <function-ref name="enableAck" scoped="" ref="0x40a80010"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a800f0"/>
        <function-ref name="hasStart" scoped="" ref="0x40a801d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a802b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x40a80410"/>
        <function-ref name="enable" scoped="" ref="0x40a804f0"/>
        <function-ref name="write" scoped="" ref="0x40a805d0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40a806b0"/>
        <function-ref name="off" scoped="" ref="0x40a80790"/>
        <function-ref name="setStop" scoped="" ref="0x40a80870"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40a80950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a80a30"/>
        <function-ref name="hasStop" scoped="" ref="0x40a80b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40a80d18" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40a80d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40a80ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x40a7f140" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x40a7f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7f318"/>
        <function-ref name="isInput" scoped="" ref="0x40a7f3f8"/>
        <function-ref name="toggle" scoped="" ref="0x40a7f4d8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7f5b8"/>
        <function-ref name="get" scoped="" ref="0x40a7f698"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7f778"/>
        <function-ref name="set" scoped="" ref="0x40a7f858"/>
        <function-ref name="clr" scoped="" ref="0x40a7f938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a7e558" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a7e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a7e730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x40a7fb40" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x40a7fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a7fd18"/>
        <function-ref name="isInput" scoped="" ref="0x40a7fdf8"/>
        <function-ref name="toggle" scoped="" ref="0x40a7fed8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a7e010"/>
        <function-ref name="get" scoped="" ref="0x40a7e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a7e1d0"/>
        <function-ref name="set" scoped="" ref="0x40a7e2b0"/>
        <function-ref name="clr" scoped="" ref="0x40a7e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a82010" loc="46:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a82010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a821e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40a82378" loc="47:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a82378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a82550"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a82630"/>
        <function-ref name="led1On" scoped="" ref="0x40a82710"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a827f0"/>
        <function-ref name="led3Off" scoped="" ref="0x40a828d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a829b0"/>
        <function-ref name="get" scoped="" ref="0x40a82a90"/>
        <function-ref name="led1Off" scoped="" ref="0x40a82b70"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a82c50"/>
        <function-ref name="led3On" scoped="" ref="0x40a82d30"/>
        <function-ref name="led0On" scoped="" ref="0x40a82e10"/>
        <function-ref name="led2Off" scoped="" ref="0x40a82ef0"/>
        <function-ref name="led2On" scoped="" ref="0x40aa5010"/>
        <function-ref name="set" scoped="" ref="0x40aa5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40a956a0" loc="36:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40a956a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40a95878"/>
        <function-ref name="requestPower" scoped="" ref="0x40a95958"/>
        <function-ref name="powerOff" scoped="" ref="0x40a95a38"/>
        <function-ref name="configure" scoped="" ref="0x40a95b18"/>
        <function-ref name="releasePower" scoped="" ref="0x40a95bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40ab5e00" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40ab5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40ab4010"/>
        <function-ref name="requestPower" scoped="" ref="0x40ab40f0"/>
        <function-ref name="powerOff" scoped="" ref="0x40ab41d0"/>
        <function-ref name="configure" scoped="" ref="0x40ab42b0"/>
        <function-ref name="releasePower" scoped="" ref="0x40ab4390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40ab44f0" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40ab44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ab46c8"/>
        <function-ref name="isInput" scoped="" ref="0x40ab47a8"/>
        <function-ref name="toggle" scoped="" ref="0x40ab4888"/>
        <function-ref name="isOutput" scoped="" ref="0x40ab4968"/>
        <function-ref name="get" scoped="" ref="0x40ab4a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ab4b28"/>
        <function-ref name="set" scoped="" ref="0x40ab4c08"/>
        <function-ref name="clr" scoped="" ref="0x40ab4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x413acb08" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x413acb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x413acce0"/>
        <function-ref name="requestPower" scoped="" ref="0x413acdc0"/>
        <function-ref name="powerOff" scoped="" ref="0x413acea0"/>
        <function-ref name="configure" scoped="" ref="0x413ab010"/>
        <function-ref name="releasePower" scoped="" ref="0x413ab0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413a8e28" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413a8e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413a7050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x413a84d0" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x413a84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x413a86a8"/>
        <function-ref name="isInput" scoped="" ref="0x413a8788"/>
        <function-ref name="toggle" scoped="" ref="0x413a8868"/>
        <function-ref name="isOutput" scoped="" ref="0x413a8948"/>
        <function-ref name="get" scoped="" ref="0x413a8a28"/>
        <function-ref name="makeOutput" scoped="" ref="0x413a8b08"/>
        <function-ref name="set" scoped="" ref="0x413a8be8"/>
        <function-ref name="clr" scoped="" ref="0x413a8cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x413ab2e0" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x413ab2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413a9dd0"/>
        <function-ref name="fired" scoped="" ref="0x413a9088"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x413a9790"/>
        <function-ref name="isOneShot" scoped="" ref="0x413a9538"/>
        <function-ref name="getdt" scoped="" ref="0x413a82a0"/>
        <function-ref name="gett0" scoped="" ref="0x413a8048"/>
        <function-ref name="isRunning" scoped="" ref="0x413a92e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x413ab908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x413a9ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x413abb88"/>
        <function-ref name="stop" scoped="" ref="0x413abe08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x413a6010" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x413a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413a5b00"/>
        <function-ref name="fired" scoped="" ref="0x413a6d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x413a54c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x413a5268"/>
        <function-ref name="getdt" scoped="" ref="0x413eb010"/>
        <function-ref name="gett0" scoped="" ref="0x413a5d58"/>
        <function-ref name="isRunning" scoped="" ref="0x413a5010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x413a6638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x413a57e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x413a68b8"/>
        <function-ref name="stop" scoped="" ref="0x413a6b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40ae8060" loc="59:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40ae8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40ae8238"/>
        <function-ref name="setRoot" scoped="" ref="0x40ae8318"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40ae83f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40ad8980" loc="54:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40ad8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40ad8b58"/>
        <function-ref name="setOrigin" scoped="" ref="0x40ad8c38"/>
        <function-ref name="setType" scoped="" ref="0x40ad8d18"/>
        <function-ref name="getOrigin" scoped="" ref="0x40ad8df8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40ad8ed8"/>
        <function-ref name="getType" scoped="" ref="0x40ad7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40ae2d80" loc="64:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40ae2d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40ae6010"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40ae60f0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40ae61d0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40ae62b0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40ae6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40ad5ec0" loc="51:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40ad5ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40ad80c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ad8240" loc="53:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ad8240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ad8418"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ad84f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ad85d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ad86b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ad8798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40ad9250" loc="50:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40ad9250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ad9428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ada158" loc="48:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ada158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ada330"/>
        <function-ref name="getPayload" scoped="" ref="0x40ada410"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ada4f0"/>
        <function-ref name="cancel" scoped="" ref="0x40ada5d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ada6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40ae9328" loc="57:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40ae9328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40ae9500"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40ae95e0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40ae96c0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40ae97a0"/>
        <function-ref name="getEtx" scoped="" ref="0x40ae9880"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40ae9960"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40ae9a40"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40ae9b20"/>
        <function-ref name="getParent" scoped="" ref="0x40ae9c00"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40ae9ce0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40ae9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40adab68" loc="49:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40adab68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40adad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40acabd0" loc="58:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40acabd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40acada8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40acae88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40acbe70" loc="55:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40acbe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40ad4070"/>
        <function-ref name="option" scoped="" ref="0x40ad4150"/>
        <function-ref name="setEtx" scoped="" ref="0x40ad4230"/>
        <function-ref name="setOrigin" scoped="" ref="0x40ad4310"/>
        <function-ref name="clearOption" scoped="" ref="0x40ad43f0"/>
        <function-ref name="getEtx" scoped="" ref="0x40ad44d0"/>
        <function-ref name="getOrigin" scoped="" ref="0x40ad45b0"/>
        <function-ref name="setType" scoped="" ref="0x40ad4690"/>
        <function-ref name="setOption" scoped="" ref="0x40ad4770"/>
        <function-ref name="matchPacket" scoped="" ref="0x40ad4850"/>
        <function-ref name="getThl" scoped="" ref="0x40ad4930"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40ad4a10"/>
        <function-ref name="matchInstance" scoped="" ref="0x40ad4af0"/>
        <function-ref name="getType" scoped="" ref="0x40ad4c50"/>
        <function-ref name="setThl" scoped="" ref="0x40ad4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40adb9e8" loc="47:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40adb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40adbbc0"/>
        <function-ref name="stop" scoped="" ref="0x40adbca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40ae7120" loc="63:/usr/src/tinyos/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40ae7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40ae72f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40b00b80" loc="92:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40b00b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40b00d58"/>
        <function-ref name="setRoot" scoped="" ref="0x40b00e38"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40b00f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40add578" loc="86:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40add578"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40add750"/>
        <function-ref name="setOrigin" scoped="" ref="0x40add830"/>
        <function-ref name="setType" scoped="" ref="0x40add910"/>
        <function-ref name="getOrigin" scoped="" ref="0x40add9f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40addad0"/>
        <function-ref name="getType" scoped="" ref="0x40addbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40afbd18" loc="90:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40afbd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40afbef0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40b00010"/>
        <function-ref name="txNoAck" scoped="" ref="0x40b000f0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40b001d0"/>
        <function-ref name="evicted" scoped="" ref="0x40b002b0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40b00390"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40b00470"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40b00550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40aff868" loc="97:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40aff868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40affa40"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40affb20"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40affc00"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40affce0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40affdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40adea08" loc="83:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40adea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40adebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40aded60" loc="85:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40aded60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40add010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40add0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40add1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40add2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40add390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40ade360" loc="82:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40ade360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ade538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40adf260" loc="80:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40adf260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40adf438"/>
        <function-ref name="getPayload" scoped="" ref="0x40adf518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40adf5f8"/>
        <function-ref name="cancel" scoped="" ref="0x40adf6d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40adf7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40adcd80" loc="89:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40adcd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40b01010"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40b010f0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40b011d0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40b012b0"/>
        <function-ref name="getEtx" scoped="" ref="0x40b01390"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40b01470"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40b01550"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40b01630"/>
        <function-ref name="getParent" scoped="" ref="0x40b01710"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40b017f0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40b018d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40adfc70" loc="81:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40adfc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40adfe48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40b00718" loc="91:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40b00718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40b008f0"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40b009d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40addd50" loc="87:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40addd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40addf28"/>
        <function-ref name="option" scoped="" ref="0x40adc018"/>
        <function-ref name="setEtx" scoped="" ref="0x40adc0f8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40adc1d8"/>
        <function-ref name="clearOption" scoped="" ref="0x40adc2b8"/>
        <function-ref name="getEtx" scoped="" ref="0x40adc398"/>
        <function-ref name="getOrigin" scoped="" ref="0x40adc478"/>
        <function-ref name="setType" scoped="" ref="0x40adc558"/>
        <function-ref name="setOption" scoped="" ref="0x40adc638"/>
        <function-ref name="matchPacket" scoped="" ref="0x40adc718"/>
        <function-ref name="getThl" scoped="" ref="0x40adc7f8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40adc8d8"/>
        <function-ref name="matchInstance" scoped="" ref="0x40adc9b8"/>
        <function-ref name="getType" scoped="" ref="0x40adcb18"/>
        <function-ref name="setThl" scoped="" ref="0x40adcbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ae6af0" loc="79:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ae6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ae6cc8"/>
        <function-ref name="stop" scoped="" ref="0x40ae6da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40aff438" loc="96:/usr/src/tinyos/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40aff438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40aff690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40af9630" loc="30:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40af9630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40af9808"/>
        <function-ref name="stopDone" scoped="" ref="0x40af98e8"/>
        <function-ref name="start" scoped="" ref="0x40af99c8"/>
        <function-ref name="stop" scoped="" ref="0x40af9aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40af1770" loc="35:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40af1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40af1948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40af9f08" loc="32:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40af9f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40af60f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40af61d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40af62b0"/>
        <function-ref name="cancel" scoped="" ref="0x40af6390"/>
        <function-ref name="sendDone" scoped="" ref="0x40af6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40af5010" loc="34:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40af5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40af51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40af1ac8" loc="37:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40af1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40af1ca0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40af1d80"/>
        <function-ref name="getPayload" scoped="" ref="0x40af1e60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40af4010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40af40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40b12e58" loc="41:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40b12e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40af0050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40af0130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40af0210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40af02f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40af68d8" loc="33:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40af68d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40af6ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40b112a8" loc="44:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b112a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b11da8"/>
        <function-ref name="clear" scoped="" ref="0x40b0b170"/>
        <function-ref name="isValid" scoped="" ref="0x40b119f8"/>
        <function-ref name="set" scoped="" ref="0x40b0b520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40af3010" loc="40:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40af3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40af31e8"/>
        <function-ref name="noAck" scoped="" ref="0x40af32c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40af33a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40b0d7a0" loc="42:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40b0d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40b0d978"/>
        <function-ref name="setRetries" scoped="" ref="0x40b0da58"/>
        <function-ref name="getRetries" scoped="" ref="0x40b0db38"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40b0dc18"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40b0dcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40af4288" loc="38:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40af4288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40af4460"/>
        <function-ref name="source" scoped="" ref="0x40af4540"/>
        <function-ref name="address" scoped="" ref="0x40af4620"/>
        <function-ref name="destination" scoped="" ref="0x40af4700"/>
        <function-ref name="setSource" scoped="" ref="0x40af47e0"/>
        <function-ref name="setDestination" scoped="" ref="0x40af48c0"/>
        <function-ref name="type" scoped="" ref="0x40af49a0"/>
        <function-ref name="setType" scoped="" ref="0x40af4a80"/>
        <function-ref name="isForMe" scoped="" ref="0x40af4b60"/>
        <function-ref name="setGroup" scoped="" ref="0x40af4c40"/>
        <function-ref name="localGroup" scoped="" ref="0x40af4d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40b0bc58" loc="45:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b0bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b077a0"/>
        <function-ref name="clear" scoped="" ref="0x40b07b50"/>
        <function-ref name="isValid" scoped="" ref="0x40b073f0"/>
        <function-ref name="set" scoped="" ref="0x40b07f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b05988" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b05988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b05b60"/>
        <function-ref name="stopDone" scoped="" ref="0x40b05c40"/>
        <function-ref name="start" scoped="" ref="0x40b05d20"/>
        <function-ref name="stop" scoped="" ref="0x40b05e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40b1b4d8" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40b1b4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b190b8"/>
        <function-ref name="get" scoped="" ref="0x40b1bde0"/>
        <function-ref name="isSet" scoped="" ref="0x40b1bb20"/>
        <function-ref name="set" scoped="" ref="0x40b19378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40b3aea8" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b3aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b399c0"/>
        <function-ref name="clear" scoped="" ref="0x40b39d70"/>
        <function-ref name="isValid" scoped="" ref="0x40b39610"/>
        <function-ref name="set" scoped="" ref="0x40b37150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40b27988" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40b27988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40b27b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b26b38" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b26b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b26d10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b26df0"/>
        <function-ref name="getPayload" scoped="" ref="0x40b26ed0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b25010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40b022a8" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b022a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b02480"/>
        <function-ref name="getPayload" scoped="" ref="0x40b02560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b02640"/>
        <function-ref name="cancel" scoped="" ref="0x40b02720"/>
        <function-ref name="sendDone" scoped="" ref="0x40b02800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40b27310" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40b27310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b274e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40b1c0f0" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40b1c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b1ccb8"/>
        <function-ref name="get" scoped="" ref="0x40b1c9f8"/>
        <function-ref name="isSet" scoped="" ref="0x40b1c738"/>
        <function-ref name="set" scoped="" ref="0x40b1b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40b23598" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40b23598"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40b23770"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40b23850"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40b23930"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40b23a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b02c68" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b02c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b02e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40b17478" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b17478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b3a010"/>
        <function-ref name="clear" scoped="" ref="0x40b3a3c0"/>
        <function-ref name="isValid" scoped="" ref="0x40b17bc8"/>
        <function-ref name="set" scoped="" ref="0x40b3a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40b158a0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b158a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b15ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40b1dce0" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40b1dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b218f0"/>
        <function-ref name="get" scoped="" ref="0x40b21630"/>
        <function-ref name="isSet" scoped="" ref="0x40b21370"/>
        <function-ref name="set" scoped="" ref="0x40b21bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40b23010" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b23010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40b231e8"/>
        <function-ref name="noAck" scoped="" ref="0x40b232c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40b233a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40b26100" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40b26100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b262d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40b23bb8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40b23bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40b23d90"/>
        <function-ref name="setRetries" scoped="" ref="0x40b23e70"/>
        <function-ref name="getRetries" scoped="" ref="0x40b22010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40b220f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40b221d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b25288" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b25288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b25460"/>
        <function-ref name="source" scoped="" ref="0x40b25540"/>
        <function-ref name="address" scoped="" ref="0x40b25620"/>
        <function-ref name="destination" scoped="" ref="0x40b25700"/>
        <function-ref name="setSource" scoped="" ref="0x40b257e0"/>
        <function-ref name="setDestination" scoped="" ref="0x40b258c0"/>
        <function-ref name="type" scoped="" ref="0x40b259a0"/>
        <function-ref name="setType" scoped="" ref="0x40b25a80"/>
        <function-ref name="isForMe" scoped="" ref="0x40b25b60"/>
        <function-ref name="setGroup" scoped="" ref="0x40b25c40"/>
        <function-ref name="localGroup" scoped="" ref="0x40b25d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40b1f660" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40b1f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40b1f8b8"/>
        <function-ref name="setChannel" scoped="" ref="0x40b1f998"/>
        <function-ref name="getChannel" scoped="" ref="0x40b1fa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40b16638" loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40b16638"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40b16810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40b267e0" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40b267e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b269b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b37b00" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b37b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b37cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x40b37db8"/>
        <function-ref name="start" scoped="" ref="0x40b37e98"/>
        <function-ref name="stop" scoped="" ref="0x40b34010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40b46f08" loc="81:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40b46f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b44af8"/>
        <function-ref name="get" scoped="" ref="0x40b44838"/>
        <function-ref name="isSet" scoped="" ref="0x40b44578"/>
        <function-ref name="set" scoped="" ref="0x40b44db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40b2f0c8" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40b2f0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40b2f2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x40b2f7d8" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x40b2f7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b2fa30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b2fb10"/>
        <function-ref name="request" scoped="" ref="0x40b2fbf0"/>
        <function-ref name="granted" scoped="" ref="0x40b2fcd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b2fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40b33b88" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40b33b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40b33d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40b34470" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b34470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b34648"/>
        <function-ref name="getPayload" scoped="" ref="0x40b34728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b34808"/>
        <function-ref name="cancel" scoped="" ref="0x40b348e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b349c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40b33510" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40b33510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b336e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40b4a9c0" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40b4a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40b4ab98"/>
        <function-ref name="address" scoped="" ref="0x40b4ac78"/>
        <function-ref name="destination" scoped="" ref="0x40b4ad58"/>
        <function-ref name="setSource" scoped="" ref="0x40b4ae38"/>
        <function-ref name="setDestination" scoped="" ref="0x40b4af18"/>
        <function-ref name="pan" scoped="" ref="0x40b29010"/>
        <function-ref name="setPan" scoped="" ref="0x40b290f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40b291d0"/>
        <function-ref name="localPan" scoped="" ref="0x40b292b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40b29538" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40b29538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b29710"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b297f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40b298d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b299b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b29a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40b47ae8" loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40b47ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b46780"/>
        <function-ref name="get" scoped="" ref="0x40b464c0"/>
        <function-ref name="isSet" scoped="" ref="0x40b46200"/>
        <function-ref name="set" scoped="" ref="0x40b46a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40b492e0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40b492e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40b494b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40b49598"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40b49678"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40b49758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40b31a70" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40b31a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b31c48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b31d28"/>
        <function-ref name="getPayload" scoped="" ref="0x40b31e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b31ee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b30010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b34e30" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b34e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b33050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40b42260" loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b42260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b42e60"/>
        <function-ref name="clear" scoped="" ref="0x40b40230"/>
        <function-ref name="isValid" scoped="" ref="0x40b42ab0"/>
        <function-ref name="set" scoped="" ref="0x40b405e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40b43678" loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b43678"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b43cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40b48730" loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40b48730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b47308"/>
        <function-ref name="get" scoped="" ref="0x40b47048"/>
        <function-ref name="isSet" scoped="" ref="0x40b48d78"/>
        <function-ref name="set" scoped="" ref="0x40b475c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40b29cb0" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40b29cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40b29e88"/>
        <function-ref name="noAck" scoped="" ref="0x40b49010"/>
        <function-ref name="wasAcked" scoped="" ref="0x40b490f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40b2a458" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40b2a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b2a630"/>
        <function-ref name="getPayload" scoped="" ref="0x40b2a710"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b2a7f0"/>
        <function-ref name="cancel" scoped="" ref="0x40b2a8d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b2a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40b322a8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40b322a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b32480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40b49900" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40b49900"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40b49ad8"/>
        <function-ref name="setRetries" scoped="" ref="0x40b49bb8"/>
        <function-ref name="getRetries" scoped="" ref="0x40b49c98"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40b49d78"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40b49e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40b48040" loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40b48040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40b48218"/>
        <function-ref name="setChannel" scoped="" ref="0x40b482f8"/>
        <function-ref name="getChannel" scoped="" ref="0x40b483d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b32cf8" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b32cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b32ed0"/>
        <function-ref name="source" scoped="" ref="0x40b31010"/>
        <function-ref name="address" scoped="" ref="0x40b310f0"/>
        <function-ref name="destination" scoped="" ref="0x40b311d0"/>
        <function-ref name="setSource" scoped="" ref="0x40b312b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40b31390"/>
        <function-ref name="type" scoped="" ref="0x40b31470"/>
        <function-ref name="setType" scoped="" ref="0x40b31550"/>
        <function-ref name="isForMe" scoped="" ref="0x40b31630"/>
        <function-ref name="setGroup" scoped="" ref="0x40b31710"/>
        <function-ref name="localGroup" scoped="" ref="0x40b317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40b40d18" loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b40d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b3f828"/>
        <function-ref name="clear" scoped="" ref="0x40b3fbd8"/>
        <function-ref name="isValid" scoped="" ref="0x40b3f478"/>
        <function-ref name="set" scoped="" ref="0x40b3e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40b2abe8" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40b2abe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b2adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40b43180" loc="82:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40b43180"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40b43358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40b32988" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40b32988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b32b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40b6d240" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40b6d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40b6d418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x40b57d20" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40b57d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x40b57ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x40b6e2d0" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40b6e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b6e4a8"/>
        <function-ref name="checkFrame" scoped="" ref="0x40b6e588"/>
        <function-ref name="source" scoped="" ref="0x40b6e668"/>
        <function-ref name="destination" scoped="" ref="0x40b6e748"/>
        <function-ref name="setSource" scoped="" ref="0x40b6e828"/>
        <function-ref name="setDestination" scoped="" ref="0x40b6e908"/>
        <function-ref name="setGroup" scoped="" ref="0x40b6e9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40b74838" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40b74838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40b74a10"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40b74af0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40b74bd0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x40b74cb0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x40b74d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40b822b0" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40b822b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b82488"/>
        <function-ref name="wait" scoped="" ref="0x40b82568"/>
        <function-ref name="cancel" scoped="" ref="0x40b82648"/>
        <function-ref name="isFree" scoped="" ref="0x40b82728"/>
        <function-ref name="getNow" scoped="" ref="0x40b82808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40b7eef0" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b7eef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b85ab0"/>
        <function-ref name="clear" scoped="" ref="0x40b85e60"/>
        <function-ref name="isValid" scoped="" ref="0x40b85700"/>
        <function-ref name="set" scoped="" ref="0x40b84230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40b57010" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40b57010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x40b571e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40b587e8" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40b587e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40b589c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40b58aa0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40b58b80"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40b58c60"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40b58d40"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40b58e20"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40b58f00"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40b60010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40b87d18" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b87d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40b87ef0"/>
        <function-ref name="getDSN" scoped="" ref="0x40b50010"/>
        <function-ref name="setFCF" scoped="" ref="0x40b500f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40b501d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40b502b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40b50390"/>
        <function-ref name="setDSN" scoped="" ref="0x40b50470"/>
        <function-ref name="createAckReply" scoped="" ref="0x40b50550"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40b50630"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40b50710"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40b507f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40b508d0"/>
        <function-ref name="localAddr" scoped="" ref="0x40b509b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40b50b10"/>
        <function-ref name="localPan" scoped="" ref="0x40b50bf0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40b50cd0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40b50db0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40b50e90"/>
        <function-ref name="setDestPan" scoped="" ref="0x40b72010"/>
        <function-ref name="isForMe" scoped="" ref="0x40b720f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40b721d0"/>
        <function-ref name="getFCF" scoped="" ref="0x40b722b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40b72390"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40b72470"/>
        <function-ref name="getFramePending" scoped="" ref="0x40b72550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40b5f010" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40b5f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40b5f1e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40b5f2c8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40b5f3a8"/>
        <function-ref name="getSender" scoped="" ref="0x40b5f488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x40b51e28" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40b51e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40b53050"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40b53130"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40b53210"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40b532f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x40b7e528" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x40b7e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b7e700"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b7e7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b7e8c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b7e9a0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b7ea80"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b7eb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x40b5d640" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40b5d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b5d818"/>
        <function-ref name="headerLength" scoped="" ref="0x40b5d8f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b5d9d8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40b5dab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40b9e108" loc="41:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40b9e108"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b9e2f0"/>
        <function-ref name="wait" scoped="" ref="0x40b9e3d0"/>
        <function-ref name="cancel" scoped="" ref="0x40b9e4b0"/>
        <function-ref name="isFree" scoped="" ref="0x40b9e590"/>
        <function-ref name="getNow" scoped="" ref="0x40b9e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b9e9c0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b9e9c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4051fb60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bd6e70"/>
        <function-ref name="fired" scoped="" ref="0x40bd6640"/>
        <function-ref name="startAt" scoped="" ref="0x40bd6b30"/>
        <function-ref name="isRunning" scoped="" ref="0x40bd68b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40bce110"/>
        <function-ref name="start" scoped="" ref="0x40bd6128"/>
        <function-ref name="stop" scoped="" ref="0x40bd63c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x414153d0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x414153d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x414155b8"/>
        <function-ref name="wait" scoped="" ref="0x41415698"/>
        <function-ref name="cancel" scoped="" ref="0x41415778"/>
        <function-ref name="isFree" scoped="" ref="0x41415858"/>
        <function-ref name="getNow" scoped="" ref="0x41415938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x41415bc8" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41415bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4051fb60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414120a8"/>
        <function-ref name="fired" scoped="" ref="0x41414858"/>
        <function-ref name="startAt" scoped="" ref="0x41414d48"/>
        <function-ref name="isRunning" scoped="" ref="0x41414ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41412320"/>
        <function-ref name="start" scoped="" ref="0x41414340"/>
        <function-ref name="stop" scoped="" ref="0x414145e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41412530" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41412530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41412708"/>
        <function-ref name="suspend" scoped="" ref="0x414127e8"/>
        <function-ref name="resume" scoped="" ref="0x414128c8"/>
        <function-ref name="run" scoped="" ref="0x414129a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40bd7a80" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40bd7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40bd7c58"/>
        <function-ref name="suspend" scoped="" ref="0x40bd7d38"/>
        <function-ref name="resume" scoped="" ref="0x40bd7e18"/>
        <function-ref name="run" scoped="" ref="0x40bd7ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c3bf20" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c3bf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c3a110"/>
        <function-ref name="cancel" scoped="" ref="0x40c3a1f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c3a2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c3a430" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c3a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c3a608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40c3cc28" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40c3cc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40c3ce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c3d5b0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c3d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c3d788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c3d868"/>
        <function-ref name="getPayload" scoped="" ref="0x40c3d948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c3da28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c3db08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40c3dce0" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40c3dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c3dec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40c3c010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c3c0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40c3c1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c3c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40c3c868" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40c3c868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c3ca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c3b788" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c3b788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c3b960"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c3ba40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c3bb20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c3bc00"/>
        <function-ref name="headerLength" scoped="" ref="0x40c3bce0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c3bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c3a768" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c3a768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c3a940"/>
        <function-ref name="checkFrame" scoped="" ref="0x40c3aa20"/>
        <function-ref name="source" scoped="" ref="0x40c3ab00"/>
        <function-ref name="destination" scoped="" ref="0x40c3abe0"/>
        <function-ref name="setSource" scoped="" ref="0x40c3acc0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c3ada0"/>
        <function-ref name="setGroup" scoped="" ref="0x40c3ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c3c488" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c3c488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c3c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40c3b030" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40c3b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c3b218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c3e940" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c3e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c3eb18"/>
        <function-ref name="source" scoped="" ref="0x40c3ebf8"/>
        <function-ref name="address" scoped="" ref="0x40c3ecd8"/>
        <function-ref name="destination" scoped="" ref="0x40c3edb8"/>
        <function-ref name="setSource" scoped="" ref="0x40c3ee98"/>
        <function-ref name="setDestination" scoped="" ref="0x40c3d010"/>
        <function-ref name="type" scoped="" ref="0x40c3d0f0"/>
        <function-ref name="setType" scoped="" ref="0x40c3d1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40c3d2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40c3d390"/>
        <function-ref name="localGroup" scoped="" ref="0x40c3d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40c3b410" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40c3b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c3b5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41401330" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41401330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41401508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41402d58" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41402d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41401010"/>
        <function-ref name="cancel" scoped="" ref="0x414010f0"/>
        <function-ref name="sendDone" scoped="" ref="0x414011d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x41403a68" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x41403a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x41403c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x414043f0" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x414043f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414045c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x414046a8"/>
        <function-ref name="getPayload" scoped="" ref="0x41404788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41404868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41404948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41404b20" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41404b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41404d08"/>
        <function-ref name="getPayload" scoped="" ref="0x41404de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41404ec8"/>
        <function-ref name="cancel" scoped="" ref="0x41403010"/>
        <function-ref name="sendDone" scoped="" ref="0x414030f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x414036a8" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x414036a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41403890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41405010" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41405010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414051e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x414052c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414053a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41405488"/>
        <function-ref name="headerLength" scoped="" ref="0x41405568"/>
        <function-ref name="metadataLength" scoped="" ref="0x41405648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41401668" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41401668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x414018c0"/>
        <function-ref name="checkFrame" scoped="" ref="0x414019a0"/>
        <function-ref name="source" scoped="" ref="0x41401a80"/>
        <function-ref name="destination" scoped="" ref="0x41401b60"/>
        <function-ref name="setSource" scoped="" ref="0x41401c40"/>
        <function-ref name="setDestination" scoped="" ref="0x41401d20"/>
        <function-ref name="setGroup" scoped="" ref="0x41401e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x41400010" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41400010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x414001e8"/>
        <function-ref name="changed" scoped="" ref="0x414002c8"/>
        <function-ref name="amGroup" scoped="" ref="0x414003a8"/>
        <function-ref name="setAddress" scoped="" ref="0x41400488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x414025c0" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x414025c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41402798"/>
        <function-ref name="payloadLength" scoped="" ref="0x41402878"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41402958"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41402a38"/>
        <function-ref name="headerLength" scoped="" ref="0x41402b18"/>
        <function-ref name="metadataLength" scoped="" ref="0x41402bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x414032c8" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x414032c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414034b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x41403e48" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x41403e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41402050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41405788" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41405788"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41405960"/>
        <function-ref name="source" scoped="" ref="0x41405a40"/>
        <function-ref name="address" scoped="" ref="0x41405b20"/>
        <function-ref name="destination" scoped="" ref="0x41405c00"/>
        <function-ref name="setSource" scoped="" ref="0x41405ce0"/>
        <function-ref name="setDestination" scoped="" ref="0x41405dc0"/>
        <function-ref name="type" scoped="" ref="0x41405ea0"/>
        <function-ref name="setType" scoped="" ref="0x41404010"/>
        <function-ref name="isForMe" scoped="" ref="0x414040f0"/>
        <function-ref name="setGroup" scoped="" ref="0x414041d0"/>
        <function-ref name="localGroup" scoped="" ref="0x414042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x41402248" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x41402248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41402430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40c22d60" loc="54:/usr/src/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40c22d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40c1f010"/>
        <function-ref name="changed" scoped="" ref="0x40c1f0f0"/>
        <function-ref name="amGroup" scoped="" ref="0x40c1f1d0"/>
        <function-ref name="setAddress" scoped="" ref="0x40c1f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c35a60" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c35a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c35c38"/>
        <function-ref name="cancel" scoped="" ref="0x40c35d18"/>
        <function-ref name="sendDone" scoped="" ref="0x40c35df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40c34010" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c34010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c341e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c342c8"/>
        <function-ref name="request" scoped="" ref="0x40c343a8"/>
        <function-ref name="granted" scoped="" ref="0x40c34488"/>
        <function-ref name="isOwner" scoped="" ref="0x40c34568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40c35538" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40c35538"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c35710"/>
        <function-ref name="cancel" scoped="" ref="0x40c357f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c358d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40c53b60" loc="86:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40c53b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40c53d48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c53e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c594c0" loc="89:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c594c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c596a8"/>
        <function-ref name="configure" scoped="" ref="0x40c59788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c53420" loc="85:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c53420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c53608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c536e8"/>
        <function-ref name="request" scoped="" ref="0x40c537c8"/>
        <function-ref name="granted" scoped="" ref="0x40c538a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c53988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40c59010" loc="87:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c59010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c591e8"/>
        <function-ref name="userId" scoped="" ref="0x40c592c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41420070" loc="44:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41420070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41420248"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x414203a8" loc="45:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x414203a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41420580"/>
        <function-ref name="isEmpty" scoped="" ref="0x41420660"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41420740"/>
        <function-ref name="dequeue" scoped="" ref="0x41420820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4141eb18" loc="52:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4141eb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4141ed00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4141ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4141d3f8" loc="56:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4141d3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4141d5e0"/>
        <function-ref name="configure" scoped="" ref="0x4141d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4141d820" loc="57:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4141d820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4141d9f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4141dad8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4141dbb8"/>
        <function-ref name="dequeue" scoped="" ref="0x4141dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4141e3d8" loc="51:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4141e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4141e5c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4141e6a0"/>
        <function-ref name="request" scoped="" ref="0x4141e780"/>
        <function-ref name="granted" scoped="" ref="0x4141e860"/>
        <function-ref name="isOwner" scoped="" ref="0x4141e940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4141ef20" loc="53:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4141ef20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4141d110"/>
        <function-ref name="userId" scoped="" ref="0x4141d1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4141de18" loc="69:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4141de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41466010"/>
        <function-ref name="runTask" scoped="" ref="0x414660f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c909e8" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c909e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c90bc0"/>
        <function-ref name="cancel" scoped="" ref="0x40c90ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c90d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c90ee0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c90ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8f0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40c92488" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40c92488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40c92660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c803b0" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c803b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c80588"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c80668"/>
        <function-ref name="getPayload" scoped="" ref="0x40c80748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c80828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c80908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40c90250" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c90250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c90428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c90508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c905e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c906c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40c907a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c90888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40c927d0" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40c927d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40c929a8"/>
        <function-ref name="getDSN" scoped="" ref="0x40c92a88"/>
        <function-ref name="setFCF" scoped="" ref="0x40c92b68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40c92c48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40c92d28"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40c92e08"/>
        <function-ref name="setDSN" scoped="" ref="0x40c92ee8"/>
        <function-ref name="createAckReply" scoped="" ref="0x40c91010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40c910f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40c911d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40c912b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40c91390"/>
        <function-ref name="localAddr" scoped="" ref="0x40c91470"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40c915d0"/>
        <function-ref name="localPan" scoped="" ref="0x40c916b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40c91790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40c91870"/>
        <function-ref name="setFramePending" scoped="" ref="0x40c91950"/>
        <function-ref name="setDestPan" scoped="" ref="0x40c91a30"/>
        <function-ref name="isForMe" scoped="" ref="0x40c91b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40c91bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x40c91cd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40c91db0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40c91e90"/>
        <function-ref name="getFramePending" scoped="" ref="0x40c90010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40c80a48" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40c80a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c80c20"/>
        <function-ref name="getPayload" scoped="" ref="0x40c80d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c80de0"/>
        <function-ref name="cancel" scoped="" ref="0x40c80ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c92010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40c92170" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40c92170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c92348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c99280" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c99280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c99458"/>
        <function-ref name="cancel" scoped="" ref="0x40c99538"/>
        <function-ref name="sendDone" scoped="" ref="0x40c99618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c99778" loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c99778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c99950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40c8ca58" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40c8ca58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c8cc30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c8cd10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c8cdf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c8ced0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c8b010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c8b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x40c8b748" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x40c8b748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8b920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c99ab0" loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c99ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c99c88"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c99d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c99e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c99f28"/>
        <function-ref name="headerLength" scoped="" ref="0x40cc4018"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cc40f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x40c8b250" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x40c8b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c8b428"/>
        <function-ref name="cancel" scoped="" ref="0x40c8b508"/>
        <function-ref name="sendDone" scoped="" ref="0x40c8b5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40c8c228" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40c8c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c8c400"/>
        <function-ref name="cancel" scoped="" ref="0x40c8c4e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c8c5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40c8c720" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40c8c720"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c8c8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40c8ba80" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40c8ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c8bc58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c8bd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c8be18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c8bef8"/>
        <function-ref name="headerLength" scoped="" ref="0x40c99010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c990f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40cf6170" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40cf6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40cf6348"/>
        <function-ref name="address" scoped="" ref="0x40cf6428"/>
        <function-ref name="destination" scoped="" ref="0x40cf6508"/>
        <function-ref name="setSource" scoped="" ref="0x40cf65e8"/>
        <function-ref name="setDestination" scoped="" ref="0x40cf66c8"/>
        <function-ref name="pan" scoped="" ref="0x40cf67a8"/>
        <function-ref name="setPan" scoped="" ref="0x40cf6888"/>
        <function-ref name="isForMe" scoped="" ref="0x40cf6968"/>
        <function-ref name="localPan" scoped="" ref="0x40cf6a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40cf6b88" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40cf6b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cf6d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cf6e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cf6f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cf5018"/>
        <function-ref name="headerLength" scoped="" ref="0x40cf50f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cf51d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40cf8658" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40cf8658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40cf8830"/>
        <function-ref name="getDSN" scoped="" ref="0x40cf8910"/>
        <function-ref name="setFCF" scoped="" ref="0x40cf89f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40cf8ad0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40cf8bb0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40cf8c90"/>
        <function-ref name="setDSN" scoped="" ref="0x40cf8d70"/>
        <function-ref name="createAckReply" scoped="" ref="0x40cf8e50"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40cf7010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40cf70f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40cf71d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40cf72b0"/>
        <function-ref name="localAddr" scoped="" ref="0x40cf7390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40cf74f0"/>
        <function-ref name="localPan" scoped="" ref="0x40cf75d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40cf76b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40cf7790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40cf7870"/>
        <function-ref name="setDestPan" scoped="" ref="0x40cf7950"/>
        <function-ref name="isForMe" scoped="" ref="0x40cf7a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40cf7b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40cf7bf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40cf7cd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40cf7db0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40cf7e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40cf5368" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40cf5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cf5540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cf5620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cf5700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cf57e0"/>
        <function-ref name="headerLength" scoped="" ref="0x40cf58c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cf59a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x41479950" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x41479950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x41479b28"/>
        <function-ref name="address" scoped="" ref="0x41479c08"/>
        <function-ref name="destination" scoped="" ref="0x41479ce8"/>
        <function-ref name="setSource" scoped="" ref="0x41479dc8"/>
        <function-ref name="setDestination" scoped="" ref="0x41479ea8"/>
        <function-ref name="pan" scoped="" ref="0x41478010"/>
        <function-ref name="setPan" scoped="" ref="0x414780f0"/>
        <function-ref name="isForMe" scoped="" ref="0x414781d0"/>
        <function-ref name="localPan" scoped="" ref="0x414782b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x414783f0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x414783f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414785c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x414786a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41478788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41478868"/>
        <function-ref name="headerLength" scoped="" ref="0x41478948"/>
        <function-ref name="metadataLength" scoped="" ref="0x41478a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x41480f20" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x41480f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4147a110"/>
        <function-ref name="getDSN" scoped="" ref="0x4147a1f0"/>
        <function-ref name="setFCF" scoped="" ref="0x4147a2d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4147a3b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4147a490"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4147a570"/>
        <function-ref name="setDSN" scoped="" ref="0x4147a650"/>
        <function-ref name="createAckReply" scoped="" ref="0x4147a730"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4147a810"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4147a8f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4147a9d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4147aab0"/>
        <function-ref name="localAddr" scoped="" ref="0x4147ab90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4147acf0"/>
        <function-ref name="localPan" scoped="" ref="0x4147add0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4147aeb0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x41479010"/>
        <function-ref name="setFramePending" scoped="" ref="0x414790f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x414791d0"/>
        <function-ref name="isForMe" scoped="" ref="0x414792b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x41479390"/>
        <function-ref name="getFCF" scoped="" ref="0x41479470"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x41479550"/>
        <function-ref name="getDestAddr" scoped="" ref="0x41479630"/>
        <function-ref name="getFramePending" scoped="" ref="0x41479710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x41478b98" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41478b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x41478d70"/>
        <function-ref name="changed" scoped="" ref="0x41478e50"/>
        <function-ref name="amGroup" scoped="" ref="0x41477010"/>
        <function-ref name="setAddress" scoped="" ref="0x414770f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41477250" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41477250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41477428"/>
        <function-ref name="payloadLength" scoped="" ref="0x41477508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414775e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414776c8"/>
        <function-ref name="headerLength" scoped="" ref="0x414777a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x41477888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cf2ca8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cf2ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cf2e80"/>
        <function-ref name="cancel" scoped="" ref="0x40d42010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d420f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d42250" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d42250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d42428"/>
        <function-ref name="header" scoped="" ref="0x40d42508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40cf2388" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cf2388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cf2560"/>
        <function-ref name="cancel" scoped="" ref="0x40cf2640"/>
        <function-ref name="sendDone" scoped="" ref="0x40cf2720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40d42668" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40d42668"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40d42840"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40d42920"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40d42a00"/>
        <function-ref name="getSender" scoped="" ref="0x40d42ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40cf2860" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40cf2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cf2a38"/>
        <function-ref name="header" scoped="" ref="0x40cf2b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41499b20" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41499b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41499cf8"/>
        <function-ref name="cancel" scoped="" ref="0x41499dd8"/>
        <function-ref name="sendDone" scoped="" ref="0x41499eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41498030" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41498030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41498208"/>
        <function-ref name="header" scoped="" ref="0x414982e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x41497150" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41497150"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41497328"/>
        <function-ref name="clearAll" scoped="" ref="0x41497408"/>
        <function-ref name="get" scoped="" ref="0x414974e8"/>
        <function-ref name="set" scoped="" ref="0x414975c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4149cea0" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4149cea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414990c0"/>
        <function-ref name="cancel" scoped="" ref="0x414991a0"/>
        <function-ref name="sendDone" scoped="" ref="0x41499280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x414989e0" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x414989e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x41498bb8"/>
        <function-ref name="insertNode" scoped="" ref="0x41498c98"/>
        <function-ref name="getNode" scoped="" ref="0x41498d78"/>
        <function-ref name="evicted" scoped="" ref="0x41498e58"/>
        <function-ref name="getIndex" scoped="" ref="0x41497010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x414993c0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x414993c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41499598"/>
        <function-ref name="header" scoped="" ref="0x41499678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414997b8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414997b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41499990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x41498428" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x41498428"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x41498600"/>
        <function-ref name="reportChannelError" scoped="" ref="0x414986e0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x414987c0"/>
        <function-ref name="getSender" scoped="" ref="0x414988a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40d32540" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40d32540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40d32718"/>
        <function-ref name="insertNode" scoped="" ref="0x40d327f8"/>
        <function-ref name="getNode" scoped="" ref="0x40d328d8"/>
        <function-ref name="evicted" scoped="" ref="0x40d329b8"/>
        <function-ref name="getIndex" scoped="" ref="0x40d32a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40d2c010" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40d2c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d2c1e8"/>
        <function-ref name="clearAll" scoped="" ref="0x40d2c2c8"/>
        <function-ref name="get" scoped="" ref="0x40d2c3a8"/>
        <function-ref name="set" scoped="" ref="0x40d2c488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40d2d510" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40d2d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40d2d6e8"/>
        <function-ref name="insertNode" scoped="" ref="0x40d2d7c8"/>
        <function-ref name="getNode" scoped="" ref="0x40d2d8a8"/>
        <function-ref name="evicted" scoped="" ref="0x40d2d988"/>
        <function-ref name="getIndex" scoped="" ref="0x40d2da68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d2d178" loc="41:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d2d178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d2d350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x41496578" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41496578"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41496750"/>
        <function-ref name="clearAll" scoped="" ref="0x41496830"/>
        <function-ref name="get" scoped="" ref="0x41496910"/>
        <function-ref name="set" scoped="" ref="0x414969f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d38440" loc="85:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d38440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d38618"/>
        <function-ref name="cancel" scoped="" ref="0x40d386f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d387d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d38938" loc="86:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d38938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d38b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x40d64010" loc="93:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40d64010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d641e8"/>
        <function-ref name="noAck" scoped="" ref="0x40d642c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d643a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d40d38" loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d40d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d40f10"/>
        <function-ref name="cancel" scoped="" ref="0x40d3f010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d3f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d3fc00" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d3fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d3fdd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d3feb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d38010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d380f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40d381d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d382b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d38c70" loc="87:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d38c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d38e48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d38f28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d37018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d370f8"/>
        <function-ref name="headerLength" scoped="" ref="0x40d371d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d372b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x40d37910" loc="92:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40d37910"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40d37ae8"/>
        <function-ref name="setRetries" scoped="" ref="0x40d37bc8"/>
        <function-ref name="getRetries" scoped="" ref="0x40d37ca8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40d37d88"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40d37e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d3f250" loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d3f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d3f428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40d373f8" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d373f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d375d0"/>
        <function-ref name="noAck" scoped="" ref="0x40d376b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d37790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40d3f568" loc="79:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40d3f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40d3f740"/>
        <function-ref name="setRetries" scoped="" ref="0x40d3f820"/>
        <function-ref name="getRetries" scoped="" ref="0x40d3f900"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40d3f9e0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40d3fac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d61b88" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d61b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d61d60"/>
        <function-ref name="stopDone" scoped="" ref="0x40d61e40"/>
        <function-ref name="start" scoped="" ref="0x40d61f20"/>
        <function-ref name="stop" scoped="" ref="0x40d60018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d53d30" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d53d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d53f08"/>
        <function-ref name="cancel" scoped="" ref="0x40d52010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d520f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d52250" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d52250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d52428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d60178" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d60178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d60350"/>
        <function-ref name="cancel" scoped="" ref="0x40d60430"/>
        <function-ref name="sendDone" scoped="" ref="0x40d60510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d60988" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d60988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d60b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d60c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d60d20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d60e00"/>
        <function-ref name="headerLength" scoped="" ref="0x40d60ee0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d53010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40d53150" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40d53150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40d53328"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40d53408"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40d534e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40d535c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40d53758" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40d53758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d53930"/>
        <function-ref name="stopDone" scoped="" ref="0x40d53a10"/>
        <function-ref name="start" scoped="" ref="0x40d53af0"/>
        <function-ref name="stop" scoped="" ref="0x40d53bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d60670" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d60670"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d60848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d52588" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d52588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d52760"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d52840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d52920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d52a00"/>
        <function-ref name="headerLength" scoped="" ref="0x40d52ae0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d52bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x414cd010" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x414cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x414cd1e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x414cd2c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x414cd3a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x414cd488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d4fd98" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d4fd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d4e010"/>
        <function-ref name="stopDone" scoped="" ref="0x40d4e0f0"/>
        <function-ref name="start" scoped="" ref="0x40d4e1d0"/>
        <function-ref name="stop" scoped="" ref="0x40d4e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40d9f180" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40d9f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d9f358"/>
        <function-ref name="turnOn" scoped="" ref="0x40d9f438"/>
        <function-ref name="setChannel" scoped="" ref="0x40d9f518"/>
        <function-ref name="done" scoped="" ref="0x40d9f5f8"/>
        <function-ref name="standby" scoped="" ref="0x40d9f6d8"/>
        <function-ref name="getChannel" scoped="" ref="0x40d9f7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d4e410" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d4e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4e5e8"/>
        <function-ref name="cancel" scoped="" ref="0x40d4e6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40d9fdd0" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40d9fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d9e010"/>
        <function-ref name="header" scoped="" ref="0x40d9e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d4e908" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d4e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d4eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40d9f8f8" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40d9f8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d9fad0"/>
        <function-ref name="ready" scoped="" ref="0x40d9fbb0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d9fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40d4ec20" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40d4ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40d4edf8"/>
        <function-ref name="setChannel" scoped="" ref="0x40d4eed8"/>
        <function-ref name="getChannel" scoped="" ref="0x40d9f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x414c9360" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x414c9360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x414c9538"/>
        <function-ref name="stopDone" scoped="" ref="0x414c9618"/>
        <function-ref name="start" scoped="" ref="0x414c96f8"/>
        <function-ref name="stop" scoped="" ref="0x414c97d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x414c9938" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x414c9938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414c9b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x414c8998" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x414c8998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x414c8b70"/>
        <function-ref name="turnOn" scoped="" ref="0x414c8c50"/>
        <function-ref name="setChannel" scoped="" ref="0x414c8d30"/>
        <function-ref name="done" scoped="" ref="0x414c8e10"/>
        <function-ref name="standby" scoped="" ref="0x414c8ef0"/>
        <function-ref name="getChannel" scoped="" ref="0x414c7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x414c9c70" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x414c9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414c9e48"/>
        <function-ref name="cancel" scoped="" ref="0x414c9f28"/>
        <function-ref name="sendDone" scoped="" ref="0x414c8018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x414c6468" loc="189:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x414c6468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414c6640"/>
        <function-ref name="runTask" scoped="" ref="0x414c6720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x414c7be0" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x414c7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414c7db8"/>
        <function-ref name="header" scoped="" ref="0x414c7e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x414c68a0" loc="144:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x414c68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414c6a78"/>
        <function-ref name="runTask" scoped="" ref="0x414c6b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x414c8178" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x414c8178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414c8350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x414c6030" loc="322:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x414c6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414c6208"/>
        <function-ref name="runTask" scoped="" ref="0x414c62e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x414c7708" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x414c7708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414c78e0"/>
        <function-ref name="ready" scoped="" ref="0x414c79c0"/>
        <function-ref name="sendDone" scoped="" ref="0x414c7aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x414c8490" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x414c8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x414c8668"/>
        <function-ref name="setChannel" scoped="" ref="0x414c8748"/>
        <function-ref name="getChannel" scoped="" ref="0x414c8828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x414c7150" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x414c7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x414c7328"/>
        <function-ref name="suspend" scoped="" ref="0x414c7408"/>
        <function-ref name="resume" scoped="" ref="0x414c74e8"/>
        <function-ref name="run" scoped="" ref="0x414c75c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d9be58" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d9be58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dda050"/>
        <function-ref name="ready" scoped="" ref="0x40dda130"/>
        <function-ref name="sendDone" scoped="" ref="0x40dda210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40dda370" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40dda370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dda548"/>
        <function-ref name="header" scoped="" ref="0x40dda628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40dda768" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40dda768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40dda940"/>
        <function-ref name="wait" scoped="" ref="0x40ddaa20"/>
        <function-ref name="cancel" scoped="" ref="0x40ddab00"/>
        <function-ref name="isFree" scoped="" ref="0x40ddabe0"/>
        <function-ref name="getNow" scoped="" ref="0x40ddacc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40ddae20" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40ddae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40dd5010"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40dd50f0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40dd51d0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40dd52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40d9ba10" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40d9ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d9bbe8"/>
        <function-ref name="header" scoped="" ref="0x40d9bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40d9b538" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40d9b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d9b710"/>
        <function-ref name="ready" scoped="" ref="0x40d9b7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d9b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x414f5b08" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x414f5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414f5ce0"/>
        <function-ref name="ready" scoped="" ref="0x414f5dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x414f5ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x414f3030" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x414f3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414f3208"/>
        <function-ref name="header" scoped="" ref="0x414f32e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x414f3428" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x414f3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x414f3600"/>
        <function-ref name="wait" scoped="" ref="0x414f36e0"/>
        <function-ref name="cancel" scoped="" ref="0x414f37c0"/>
        <function-ref name="isFree" scoped="" ref="0x414f38a0"/>
        <function-ref name="getNow" scoped="" ref="0x414f3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x414f3ac0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x414f3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x414f3c98"/>
        <function-ref name="rand32" scoped="" ref="0x414f3d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x414f3ed8" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x414f3ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x414f20c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x414f21a0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x414f2280"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x414f2360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x414f56c0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x414f56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414f5898"/>
        <function-ref name="header" scoped="" ref="0x414f5978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x414f51e8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x414f51e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414f53c0"/>
        <function-ref name="ready" scoped="" ref="0x414f54a0"/>
        <function-ref name="sendDone" scoped="" ref="0x414f5580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x414f24e0" loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x414f24e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414f26b8"/>
        <function-ref name="runTask" scoped="" ref="0x414f2798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40dd8948" loc="46:/usr/src/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40dd8948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40dd8b20"/>
        <function-ref name="rand32" scoped="" ref="0x40dd8c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40dd8088" loc="45:/usr/src/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40dd8088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dd86b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ddcdd8" loc="44:/usr/src/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ddcdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dd9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40dd4478" loc="48:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40dd4478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40dd4650"/>
        <function-ref name="rand32" scoped="" ref="0x40dd4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40dd7b10" loc="47:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40dd7b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dd41e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dd75f0" loc="46:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dd75f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dd77c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40dca060" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40dca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dca238"/>
        <function-ref name="ready" scoped="" ref="0x40dca318"/>
        <function-ref name="sendDone" scoped="" ref="0x40dca3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40dca558" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40dca558"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dca730"/>
        <function-ref name="header" scoped="" ref="0x40dca810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40dca950" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40dca950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40dcab28"/>
        <function-ref name="wait" scoped="" ref="0x40dcac08"/>
        <function-ref name="cancel" scoped="" ref="0x40dcace8"/>
        <function-ref name="isFree" scoped="" ref="0x40dcadc8"/>
        <function-ref name="getNow" scoped="" ref="0x40dcaea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40de1988" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40de1988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40de1b60"/>
        <function-ref name="get" scoped="" ref="0x40de1c40"/>
        <function-ref name="setValue" scoped="" ref="0x40de1d20"/>
        <function-ref name="set" scoped="" ref="0x40de1e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40de1030" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40de1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40de1208"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40de12e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40de13c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40de14a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40de1588"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40de1668"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40de1748"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40de1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40dcb720" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40dcb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dcb8f8"/>
        <function-ref name="header" scoped="" ref="0x40dcb9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40dcb248" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40dcb248"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dcb420"/>
        <function-ref name="ready" scoped="" ref="0x40dcb500"/>
        <function-ref name="sendDone" scoped="" ref="0x40dcb5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40dcbb18" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40dcbb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40dcbcf0"/>
        <function-ref name="noAck" scoped="" ref="0x40dcbdd0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40dcbeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ddde40" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ddde40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e0e050"/>
        <function-ref name="stopDone" scoped="" ref="0x40e0e130"/>
        <function-ref name="start" scoped="" ref="0x40e0e210"/>
        <function-ref name="stop" scoped="" ref="0x40e0e2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40e03cc0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40e03cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40e03e98"/>
        <function-ref name="request" scoped="" ref="0x40e02010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40dff330" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40dff330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dff508"/>
        <function-ref name="ready" scoped="" ref="0x40dff5e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40dff6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40dff828" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40dff828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dffa00"/>
        <function-ref name="header" scoped="" ref="0x40dffae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40e0ec20" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40e0ec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40e0edf8"/>
        <function-ref name="turnOn" scoped="" ref="0x40e0eed8"/>
        <function-ref name="setChannel" scoped="" ref="0x40e03010"/>
        <function-ref name="done" scoped="" ref="0x40e030f0"/>
        <function-ref name="standby" scoped="" ref="0x40e031d0"/>
        <function-ref name="getChannel" scoped="" ref="0x40e032b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e02150" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e02150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e02328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e02408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e024e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e025c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40e026a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e02788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40e00a80" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40e00a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40e00cd8"/>
        <function-ref name="turnOn" scoped="" ref="0x40e00db8"/>
        <function-ref name="setChannel" scoped="" ref="0x40e00e98"/>
        <function-ref name="done" scoped="" ref="0x40dff010"/>
        <function-ref name="standby" scoped="" ref="0x40dff0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40dff1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40e028e8" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40e028e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40e02ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40e038c8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40e038c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e03aa0"/>
        <function-ref name="header" scoped="" ref="0x40e03b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40e00748" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40e00748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e00920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40e02c50" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40e02c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e02e28"/>
        <function-ref name="stopDone" scoped="" ref="0x40e02f08"/>
        <function-ref name="start" scoped="" ref="0x40e00010"/>
        <function-ref name="stop" scoped="" ref="0x40e000f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40dfe090" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40dfe090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dfe268"/>
        <function-ref name="payloadLength" scoped="" ref="0x40dfe348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dfe428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40dfe508"/>
        <function-ref name="headerLength" scoped="" ref="0x40dfe5e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40dfe6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40e0e908" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40e0e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e0eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40dfe828" loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40dfe828"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40dfea00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40e00250" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40e00250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e00428"/>
        <function-ref name="cancel" scoped="" ref="0x40e00508"/>
        <function-ref name="sendDone" scoped="" ref="0x40e005e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40e033f0" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40e033f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e035c8"/>
        <function-ref name="ready" scoped="" ref="0x40e036a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e03788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40dffc40" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40dffc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40dffe18"/>
        <function-ref name="request" scoped="" ref="0x40dffef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40e0e430" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40e0e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e0e608"/>
        <function-ref name="cancel" scoped="" ref="0x40e0e6e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e0e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40e55e30" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40e55e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e53050"/>
        <function-ref name="get" scoped="" ref="0x40e53130"/>
        <function-ref name="setValue" scoped="" ref="0x40e53210"/>
        <function-ref name="set" scoped="" ref="0x40e532f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e565b0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e565b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e56788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e56868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e56948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e56a28"/>
        <function-ref name="headerLength" scoped="" ref="0x40e56b08"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e56be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e55698" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e55698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e55870"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e55950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e55a30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e55b10"/>
        <function-ref name="headerLength" scoped="" ref="0x40e55bf0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e55cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40e58ec8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40e58ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40e57a30"/>
        <function-ref name="clear" scoped="" ref="0x40e57de0"/>
        <function-ref name="isValid" scoped="" ref="0x40e57680"/>
        <function-ref name="set" scoped="" ref="0x40e561b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40e56e08" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40e56e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e55468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40dfa6f8" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40dfa6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40e58230"/>
        <function-ref name="clear" scoped="" ref="0x40e585e0"/>
        <function-ref name="isValid" scoped="" ref="0x40dfae48"/>
        <function-ref name="set" scoped="" ref="0x40e58990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x41515af8" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x41515af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41515cd0"/>
        <function-ref name="get" scoped="" ref="0x41515db0"/>
        <function-ref name="setValue" scoped="" ref="0x41515e90"/>
        <function-ref name="set" scoped="" ref="0x41514010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41515330" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41515330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41515508"/>
        <function-ref name="payloadLength" scoped="" ref="0x415155e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415156c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415157a8"/>
        <function-ref name="headerLength" scoped="" ref="0x41515888"/>
        <function-ref name="metadataLength" scoped="" ref="0x41515968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41512430" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41512430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41512608"/>
        <function-ref name="payloadLength" scoped="" ref="0x415126e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415127c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415128a8"/>
        <function-ref name="headerLength" scoped="" ref="0x41512988"/>
        <function-ref name="metadataLength" scoped="" ref="0x41512a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x41517ca8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x41517ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x415167c0"/>
        <function-ref name="clear" scoped="" ref="0x41516b70"/>
        <function-ref name="isValid" scoped="" ref="0x41516410"/>
        <function-ref name="set" scoped="" ref="0x41516f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x41514200" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x41514200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41514848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x41514b08" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x41514b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41512200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x415194f0" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x415194f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x41517010"/>
        <function-ref name="clear" scoped="" ref="0x415173c0"/>
        <function-ref name="isValid" scoped="" ref="0x41519c40"/>
        <function-ref name="set" scoped="" ref="0x41517770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40e328b0" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e328b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e32ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40e28bf8" loc="48:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e28bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e2e278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e2e5c8" loc="49:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e2e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e2ed18"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e2d288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e2d010"/>
        <function-ref name="overflow" scoped="" ref="0x40e2d500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e4f150" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e4f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e4f328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e4f408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e4f4e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e4f5c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40e4f6a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e4f788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e4f918" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e4f918"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e4faf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e4fbd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e4fcb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e4fd90"/>
        <function-ref name="headerLength" scoped="" ref="0x40e4fe70"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e70010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40e50af0" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40e50af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e50cd8"/>
        <function-ref name="get" scoped="" ref="0x40e50db8"/>
        <function-ref name="setValue" scoped="" ref="0x40e50e98"/>
        <function-ref name="set" scoped="" ref="0x40e4f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40e6f2b0" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40e6f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e6f488"/>
        <function-ref name="stopDone" scoped="" ref="0x40e6f568"/>
        <function-ref name="start" scoped="" ref="0x40e6f648"/>
        <function-ref name="stop" scoped="" ref="0x40e6f728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40e6d150" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40e6d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40e6d328"/>
        <function-ref name="request" scoped="" ref="0x40e6d408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e6b6a0" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e6b6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e6b878"/>
        <function-ref name="ready" scoped="" ref="0x40e6b958"/>
        <function-ref name="sendDone" scoped="" ref="0x40e6ba38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e6bb98" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e6bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e6bd70"/>
        <function-ref name="header" scoped="" ref="0x40e6be50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40e6e070" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40e6e070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40e6e248"/>
        <function-ref name="turnOn" scoped="" ref="0x40e6e328"/>
        <function-ref name="setChannel" scoped="" ref="0x40e6e408"/>
        <function-ref name="done" scoped="" ref="0x40e6e4e8"/>
        <function-ref name="standby" scoped="" ref="0x40e6e5c8"/>
        <function-ref name="getChannel" scoped="" ref="0x40e6e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e6d548" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e6d548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e6d720"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e6d800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e6d8e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e6d9c0"/>
        <function-ref name="headerLength" scoped="" ref="0x40e6daa0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e6db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40e6ce68" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40e6ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40e6b0e0"/>
        <function-ref name="turnOn" scoped="" ref="0x40e6b1c0"/>
        <function-ref name="setChannel" scoped="" ref="0x40e6b2a0"/>
        <function-ref name="done" scoped="" ref="0x40e6b380"/>
        <function-ref name="standby" scoped="" ref="0x40e6b460"/>
        <function-ref name="getChannel" scoped="" ref="0x40e6b540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40e6dce0" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40e6dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40e6deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40e6ecc0" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40e6ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e6ee98"/>
        <function-ref name="header" scoped="" ref="0x40e6d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40e6cb30" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40e6cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e6cd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40e6c060" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40e6c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e6c238"/>
        <function-ref name="stopDone" scoped="" ref="0x40e6c318"/>
        <function-ref name="start" scoped="" ref="0x40e6c3f8"/>
        <function-ref name="stop" scoped="" ref="0x40e6c4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e6a428" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e6a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e6a600"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e6a6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e6a7c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e6a8a0"/>
        <function-ref name="headerLength" scoped="" ref="0x40e6a980"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e6aa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40e6fd40" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40e6fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e6ff18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40e6abc0" loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40e6abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40e6ad98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40e6c638" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40e6c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e6c810"/>
        <function-ref name="cancel" scoped="" ref="0x40e6c8f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e6c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40e6e7e8" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40e6e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e6e9c0"/>
        <function-ref name="ready" scoped="" ref="0x40e6eaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e6eb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40e6a010" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40e6a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40e6a1e8"/>
        <function-ref name="request" scoped="" ref="0x40e6a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40e6f868" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40e6f868"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e6fa40"/>
        <function-ref name="cancel" scoped="" ref="0x40e6fb20"/>
        <function-ref name="sendDone" scoped="" ref="0x40e6fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40e667d0" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40e667d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e669a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40e66a88"/>
        <function-ref name="start" scoped="" ref="0x40e66b68"/>
        <function-ref name="stop" scoped="" ref="0x40e66c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40e64708" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40e64708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40e648e0"/>
        <function-ref name="request" scoped="" ref="0x40e649c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e62cc8" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e62cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e62ea0"/>
        <function-ref name="ready" scoped="" ref="0x40e61010"/>
        <function-ref name="sendDone" scoped="" ref="0x40e610f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e61250" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e61250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e61428"/>
        <function-ref name="header" scoped="" ref="0x40e61508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40e65628" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40e65628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40e65800"/>
        <function-ref name="turnOn" scoped="" ref="0x40e658e0"/>
        <function-ref name="setChannel" scoped="" ref="0x40e659c0"/>
        <function-ref name="done" scoped="" ref="0x40e65aa0"/>
        <function-ref name="standby" scoped="" ref="0x40e65b80"/>
        <function-ref name="getChannel" scoped="" ref="0x40e65c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e64b00" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e64b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e64cd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e64db8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e64e98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e63010"/>
        <function-ref name="headerLength" scoped="" ref="0x40e630f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e631d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40e624b0" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40e624b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40e62708"/>
        <function-ref name="turnOn" scoped="" ref="0x40e627e8"/>
        <function-ref name="setChannel" scoped="" ref="0x40e628c8"/>
        <function-ref name="done" scoped="" ref="0x40e629a8"/>
        <function-ref name="standby" scoped="" ref="0x40e62a88"/>
        <function-ref name="getChannel" scoped="" ref="0x40e62b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40e63330" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40e63330"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40e63508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40e64310" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40e64310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e644e8"/>
        <function-ref name="header" scoped="" ref="0x40e645c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40e62178" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40e62178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e62350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40e63698" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40e63698"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e63870"/>
        <function-ref name="stopDone" scoped="" ref="0x40e63950"/>
        <function-ref name="start" scoped="" ref="0x40e63a30"/>
        <function-ref name="stop" scoped="" ref="0x40e63b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e61a80" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e61a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e61c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e61d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e61e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e61ef8"/>
        <function-ref name="headerLength" scoped="" ref="0x40e5f010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e5f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40e65310" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40e65310"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e654e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40e5f250" loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40e5f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40e5f428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40e63c70" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40e63c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e63e48"/>
        <function-ref name="cancel" scoped="" ref="0x40e63f28"/>
        <function-ref name="sendDone" scoped="" ref="0x40e62018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40e65da0" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40e65da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e64010"/>
        <function-ref name="ready" scoped="" ref="0x40e640f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e641d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40e61668" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40e61668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40e61840"/>
        <function-ref name="request" scoped="" ref="0x40e61920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40e66d88" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40e66d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e65010"/>
        <function-ref name="cancel" scoped="" ref="0x40e650f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e651d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40e5a7e0" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40e5a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40e5a9b8"/>
        <function-ref name="request" scoped="" ref="0x40e5aa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40e8c980" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40e8c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e8b590"/>
        <function-ref name="get" scoped="" ref="0x40e8b2d0"/>
        <function-ref name="isSet" scoped="" ref="0x40e8b010"/>
        <function-ref name="set" scoped="" ref="0x40e8b850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40e80580" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40e80580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e80758"/>
        <function-ref name="get" scoped="" ref="0x40e80838"/>
        <function-ref name="setValue" scoped="" ref="0x40e80918"/>
        <function-ref name="set" scoped="" ref="0x40e809f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40e826f0" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40e826f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40e81230"/>
        <function-ref name="clear" scoped="" ref="0x40e815e0"/>
        <function-ref name="isValid" scoped="" ref="0x40e82e40"/>
        <function-ref name="set" scoped="" ref="0x40e81990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40e5d5b0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40e5d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40e5d788"/>
        <function-ref name="turnOn" scoped="" ref="0x40e5d868"/>
        <function-ref name="setChannel" scoped="" ref="0x40e5d948"/>
        <function-ref name="done" scoped="" ref="0x40e5da28"/>
        <function-ref name="standby" scoped="" ref="0x40e5db08"/>
        <function-ref name="getChannel" scoped="" ref="0x40e5dbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40e8d618" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40e8d618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e8c1f8"/>
        <function-ref name="get" scoped="" ref="0x40e8df20"/>
        <function-ref name="isSet" scoped="" ref="0x40e8dc60"/>
        <function-ref name="set" scoped="" ref="0x40e8c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e5ac48" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e5ac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e5ae20"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e5af00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e8d010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e8d0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40e8d1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e8d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40e84e20" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40e84e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e820c0"/>
        <function-ref name="headerLength" scoped="" ref="0x40e821a0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e82280"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40e82360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40e5a390" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40e5a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e5a568"/>
        <function-ref name="header" scoped="" ref="0x40e5a648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e85340" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e85340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4051fb60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e84840"/>
        <function-ref name="fired" scoped="" ref="0x40e84010"/>
        <function-ref name="startAt" scoped="" ref="0x40e84500"/>
        <function-ref name="isRunning" scoped="" ref="0x40e84288"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e84ab8"/>
        <function-ref name="start" scoped="" ref="0x40e85a90"/>
        <function-ref name="stop" scoped="" ref="0x40e85d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40e8bd80" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40e8bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e89960"/>
        <function-ref name="get" scoped="" ref="0x40e896a0"/>
        <function-ref name="isSet" scoped="" ref="0x40e893e0"/>
        <function-ref name="set" scoped="" ref="0x40e89c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40e868b8" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40e868b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e86f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40e5dd88" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40e5dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e5a010"/>
        <function-ref name="ready" scoped="" ref="0x40e5a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e5a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40e88158" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40e88158"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e88d20"/>
        <function-ref name="get" scoped="" ref="0x40e88a60"/>
        <function-ref name="isSet" scoped="" ref="0x40e887a0"/>
        <function-ref name="set" scoped="" ref="0x40e86010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40e80c40" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40e80c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e80e18"/>
        <function-ref name="get" scoped="" ref="0x40e80ef8"/>
        <function-ref name="setValue" scoped="" ref="0x40e7f010"/>
        <function-ref name="set" scoped="" ref="0x40e7f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40e81ec0" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40e81ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e800c0"/>
        <function-ref name="get" scoped="" ref="0x40e801a0"/>
        <function-ref name="setValue" scoped="" ref="0x40e80280"/>
        <function-ref name="set" scoped="" ref="0x40e80360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40e863c0" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40e863c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40e86598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40e78a08" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40e78a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40e78be0"/>
        <function-ref name="request" scoped="" ref="0x40e78cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40e76b98" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40e76b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e75780"/>
        <function-ref name="get" scoped="" ref="0x40e754c0"/>
        <function-ref name="isSet" scoped="" ref="0x40e75200"/>
        <function-ref name="set" scoped="" ref="0x40e75a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40ea30b0" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40ea30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40ea3800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40e794d8" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40e794d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e796b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40e9d3f0" loc="74:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40e9d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e9d5c8"/>
        <function-ref name="get" scoped="" ref="0x40e9d6a8"/>
        <function-ref name="setValue" scoped="" ref="0x40e9d788"/>
        <function-ref name="set" scoped="" ref="0x40e9d868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40e9c2c8" loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40e9c2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40e9cdc8"/>
        <function-ref name="clear" scoped="" ref="0x40e9a198"/>
        <function-ref name="isValid" scoped="" ref="0x40e9ca18"/>
        <function-ref name="set" scoped="" ref="0x40e9a548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40e79858" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40e79858"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40e79a30"/>
        <function-ref name="turnOn" scoped="" ref="0x40e79b10"/>
        <function-ref name="setChannel" scoped="" ref="0x40e79bf0"/>
        <function-ref name="done" scoped="" ref="0x40e79cd0"/>
        <function-ref name="standby" scoped="" ref="0x40e79db0"/>
        <function-ref name="getChannel" scoped="" ref="0x40e79e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40ea3b68" loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ea3b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="TRadio" ref="0x4051f8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ea2200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40e77838" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40e77838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e76410"/>
        <function-ref name="get" scoped="" ref="0x40e76150"/>
        <function-ref name="isSet" scoped="" ref="0x40e77e80"/>
        <function-ref name="set" scoped="" ref="0x40e766d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e78e70" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e78e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e77070"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e77150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e77230"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e77310"/>
        <function-ref name="headerLength" scoped="" ref="0x40e773f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40e9e640" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40e9e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e9e818"/>
        <function-ref name="headerLength" scoped="" ref="0x40e9e8f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e9e9d8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40e9eab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40e785b8" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40e785b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e78790"/>
        <function-ref name="header" scoped="" ref="0x40e78870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40ea4a40" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40ea4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40ea4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40ea7010" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40ea7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ea7bd8"/>
        <function-ref name="get" scoped="" ref="0x40ea7918"/>
        <function-ref name="isSet" scoped="" ref="0x40ea7658"/>
        <function-ref name="set" scoped="" ref="0x40ea7e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40e7be68" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40e7be68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e79050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40e78060" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40e78060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e78238"/>
        <function-ref name="ready" scoped="" ref="0x40e78318"/>
        <function-ref name="sendDone" scoped="" ref="0x40e783f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40ea63d8" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40ea63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ea4010"/>
        <function-ref name="get" scoped="" ref="0x40ea6ce0"/>
        <function-ref name="isSet" scoped="" ref="0x40ea6a20"/>
        <function-ref name="set" scoped="" ref="0x40ea42d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40e99010" loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40e99010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40e991e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x40ea2608" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40ea2608"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40e9e088"/>
        <function-ref name="test" scoped="" ref="0x40e9f408"/>
        <function-ref name="fired" scoped="" ref="0x40e9f190"/>
        <function-ref name="get" scoped="" ref="0x40ea2c50"/>
        <function-ref name="reset" scoped="" ref="0x40e9f680"/>
        <function-ref name="getMode" scoped="" ref="0x40e9e328"/>
        <function-ref name="isOn" scoped="" ref="0x40e9fde8"/>
        <function-ref name="set" scoped="" ref="0x40ea2ec8"/>
        <function-ref name="start" scoped="" ref="0x40e9f8f8"/>
        <function-ref name="stop" scoped="" ref="0x40e9fb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40e9dab0" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40e9dab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e9dc88"/>
        <function-ref name="get" scoped="" ref="0x40e9dd68"/>
        <function-ref name="setValue" scoped="" ref="0x40e9de48"/>
        <function-ref name="set" scoped="" ref="0x40e9df28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40e9ed30" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40e9ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e9ef08"/>
        <function-ref name="get" scoped="" ref="0x40e9d010"/>
        <function-ref name="setValue" scoped="" ref="0x40e9d0f0"/>
        <function-ref name="set" scoped="" ref="0x40e9d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40ea4680" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40ea4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40ea4858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40e9a988" loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40e9a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40e9ab60"/>
        <function-ref name="suspend" scoped="" ref="0x40e9ac40"/>
        <function-ref name="resume" scoped="" ref="0x40e9ad20"/>
        <function-ref name="run" scoped="" ref="0x40e9ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40efc340" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40efc340"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40efca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40efa950" loc="53:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40efa950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40ef90b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ef9430" loc="54:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ef9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ef9b80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f27088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ef9df8"/>
        <function-ref name="overflow" scoped="" ref="0x40f27300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40f235f8" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40f235f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f23d48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f22288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f22010"/>
        <function-ref name="overflow" scoped="" ref="0x40f22500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40f24320" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f24320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f24a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f23010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f24ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40f23288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40f1f110" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40f1f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f1f758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40f1e538" loc="48:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40f1e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f1eb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40f1eed0" loc="49:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f1eed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f1d680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f1db70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f1d8f8"/>
        <function-ref name="overflow" scoped="" ref="0x40f1dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e7d808" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e7d808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40efdd58"/>
        <function-ref name="fired" scoped="" ref="0x40efd528"/>
        <function-ref name="startAt" scoped="" ref="0x40efda18"/>
        <function-ref name="isRunning" scoped="" ref="0x40efd7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f1a010"/>
        <function-ref name="start" scoped="" ref="0x40efd010"/>
        <function-ref name="stop" scoped="" ref="0x40efd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x41528010" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x41528010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41527a68"/>
        <function-ref name="test" scoped="" ref="0x41528de8"/>
        <function-ref name="fired" scoped="" ref="0x41528b70"/>
        <function-ref name="force" scoped="" ref="0x41573010"/>
        <function-ref name="get" scoped="" ref="0x41528658"/>
        <function-ref name="reset" scoped="" ref="0x41527088"/>
        <function-ref name="getMode" scoped="" ref="0x41527d08"/>
        <function-ref name="isOn" scoped="" ref="0x415277f0"/>
        <function-ref name="set" scoped="" ref="0x415288d0"/>
        <function-ref name="start" scoped="" ref="0x41527300"/>
        <function-ref name="stop" scoped="" ref="0x41527578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4152d568" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4152d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4152cab8"/>
        <function-ref name="fired" scoped="" ref="0x4152c288"/>
        <function-ref name="startAt" scoped="" ref="0x4152c778"/>
        <function-ref name="isRunning" scoped="" ref="0x4152c500"/>
        <function-ref name="getAlarm" scoped="" ref="0x4152cd30"/>
        <function-ref name="start" scoped="" ref="0x4152dcb8"/>
        <function-ref name="stop" scoped="" ref="0x4152c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4152d130" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4152d130"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4152d308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4152a010" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4152a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41529a68"/>
        <function-ref name="test" scoped="" ref="0x4152ade8"/>
        <function-ref name="get" scoped="" ref="0x4152a658"/>
        <function-ref name="reset" scoped="" ref="0x41529088"/>
        <function-ref name="getMode" scoped="" ref="0x41529d08"/>
        <function-ref name="overflow" scoped="" ref="0x4152ab70"/>
        <function-ref name="isOn" scoped="" ref="0x415297f0"/>
        <function-ref name="set" scoped="" ref="0x4152a8d0"/>
        <function-ref name="start" scoped="" ref="0x41529300"/>
        <function-ref name="stop" scoped="" ref="0x41529578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41029740" loc="142:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41029740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41029918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x41028a10" loc="145:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x41028a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x41028be8"/>
        <function-ref name="setRoot" scoped="" ref="0x41028cc8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x41028da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ffcc38" loc="126:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ffcc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ffce10"/>
        <function-ref name="getPayload" scoped="" ref="0x40ffcef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ffb010"/>
        <function-ref name="cancel" scoped="" ref="0x40ffb0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ffb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x41024330" loc="156:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x41024330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x41024508"/>
        <function-ref name="logEventMsg" scoped="" ref="0x410245e8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x410246c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x410247a8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x41024888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40ffd078" loc="116:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40ffd078"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40ffd250"/>
        <function-ref name="setOrigin" scoped="" ref="0x40ffd330"/>
        <function-ref name="setType" scoped="" ref="0x40ffd410"/>
        <function-ref name="getOrigin" scoped="" ref="0x40ffd4f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40ffd5d0"/>
        <function-ref name="getType" scoped="" ref="0x40ffd6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40ff8b88" loc="129:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40ff8b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40ff8d60"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40ff8e40"/>
        <function-ref name="txNoAck" scoped="" ref="0x40ff8f20"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40ff7018"/>
        <function-ref name="evicted" scoped="" ref="0x40ff70f8"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40ff71d8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40ff72b8"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40ff7398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x4102a978" loc="140:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x4102a978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x41029010"/>
        <function-ref name="flush" scoped="" ref="0x41029510"/>
        <function-ref name="lookup" scoped="" ref="0x41029290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40ffe6a8" loc="114:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40ffe6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40ffe890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ffe9d0" loc="115:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ffe9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ffeba8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ffec88"/>
        <function-ref name="getPayload" scoped="" ref="0x40ffed68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ffee48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ffef28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40ffe2e8" loc="113:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40ffe2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ffe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41025f28" loc="149:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41025f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41024110"/>
        <function-ref name="rand32" scoped="" ref="0x410241f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fff7b8" loc="111:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fff7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fff9a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40fffa80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fffb60"/>
        <function-ref name="cancel" scoped="" ref="0x40fffc40"/>
        <function-ref name="sendDone" scoped="" ref="0x40fffd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x40ffb898" loc="128:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x40ffb898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ff84c8"/>
        <function-ref name="fired" scoped="" ref="0x40ffa768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ffae70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ffac18"/>
        <function-ref name="getdt" scoped="" ref="0x40ff8978"/>
        <function-ref name="gett0" scoped="" ref="0x40ff8720"/>
        <function-ref name="isRunning" scoped="" ref="0x40ffa9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ffa010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ff81a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ffa290"/>
        <function-ref name="stop" scoped="" ref="0x40ffa510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x410249e8" loc="162:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x410249e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41024bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x41024ca0"/>
        <function-ref name="start" scoped="" ref="0x41024d80"/>
        <function-ref name="stop" scoped="" ref="0x41024e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41023010" loc="234:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41023010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410231e8"/>
        <function-ref name="runTask" scoped="" ref="0x410232c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x40ff6228" loc="137:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x40ff6228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f5db40"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f5ddc8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40ff5010"/>
        <function-ref name="enqueue" scoped="" ref="0x40ff56f0"/>
        <function-ref name="element" scoped="" ref="0x40ff5a40"/>
        <function-ref name="maxSize" scoped="" ref="0x40ff6d00"/>
        <function-ref name="dequeue" scoped="" ref="0x40ff5380"/>
        <function-ref name="empty" scoped="" ref="0x40ff6850"/>
        <function-ref name="size" scoped="" ref="0x40ff6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x41029d90" loc="144:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x41029d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x41028010"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x410280f0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x410281d0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x410282b0"/>
        <function-ref name="getEtx" scoped="" ref="0x41028390"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x41028470"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x41028550"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x41028630"/>
        <function-ref name="getParent" scoped="" ref="0x41028710"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x410287f0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x410288d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ff7ab0" loc="131:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ff7ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ff7c88"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ff7d68"/>
        <function-ref name="getPayload" scoped="" ref="0x40ff7e48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ff7f28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ff6018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fff010" loc="109:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fff1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fffef8" loc="112:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fffef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ffe0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40ffc7f0" loc="118:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40ffc7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40ffc9c8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40ffcaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x40ff74d8" loc="130:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40ff74d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40ff76b0"/>
        <function-ref name="routeFound" scoped="" ref="0x40ff7790"/>
        <function-ref name="nextHop" scoped="" ref="0x40ff7870"/>
        <function-ref name="noRoute" scoped="" ref="0x40ff7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41025030" loc="148:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41025030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41025208"/>
        <function-ref name="led0Toggle" scoped="" ref="0x410252e8"/>
        <function-ref name="led1On" scoped="" ref="0x410253c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410254a8"/>
        <function-ref name="led3Off" scoped="" ref="0x41025588"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41025668"/>
        <function-ref name="get" scoped="" ref="0x41025748"/>
        <function-ref name="led1Off" scoped="" ref="0x41025828"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41025908"/>
        <function-ref name="led3On" scoped="" ref="0x410259e8"/>
        <function-ref name="led0On" scoped="" ref="0x41025ac8"/>
        <function-ref name="led2Off" scoped="" ref="0x41025ba8"/>
        <function-ref name="led2On" scoped="" ref="0x41025c88"/>
        <function-ref name="set" scoped="" ref="0x41025de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40ffb310" loc="127:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ffb310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ffb4e8"/>
        <function-ref name="noAck" scoped="" ref="0x40ffb5c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ffb6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40ffd7f0" loc="117:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40ffd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40ffd9c8"/>
        <function-ref name="option" scoped="" ref="0x40ffdaa8"/>
        <function-ref name="setEtx" scoped="" ref="0x40ffdb88"/>
        <function-ref name="setOrigin" scoped="" ref="0x40ffdc68"/>
        <function-ref name="clearOption" scoped="" ref="0x40ffdd48"/>
        <function-ref name="getEtx" scoped="" ref="0x40ffde28"/>
        <function-ref name="getOrigin" scoped="" ref="0x40ffdf08"/>
        <function-ref name="setType" scoped="" ref="0x40ffc010"/>
        <function-ref name="setOption" scoped="" ref="0x40ffc0f0"/>
        <function-ref name="matchPacket" scoped="" ref="0x40ffc1d0"/>
        <function-ref name="getThl" scoped="" ref="0x40ffc2b0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40ffc390"/>
        <function-ref name="matchInstance" scoped="" ref="0x40ffc470"/>
        <function-ref name="getType" scoped="" ref="0x40ffc5d0"/>
        <function-ref name="setThl" scoped="" ref="0x40ffc6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x40ff5e40" loc="138:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x40ff5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f5db40"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f5ddc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ff2010"/>
        <function-ref name="maxSize" scoped="" ref="0x40ff3968"/>
        <function-ref name="empty" scoped="" ref="0x40ff34b8"/>
        <function-ref name="put" scoped="" ref="0x40ff3bc0"/>
        <function-ref name="size" scoped="" ref="0x40ff3710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41026438" loc="147:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41026438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41026610"/>
        <function-ref name="source" scoped="" ref="0x410266f0"/>
        <function-ref name="address" scoped="" ref="0x410267d0"/>
        <function-ref name="destination" scoped="" ref="0x410268b0"/>
        <function-ref name="setSource" scoped="" ref="0x41026990"/>
        <function-ref name="setDestination" scoped="" ref="0x41026a70"/>
        <function-ref name="type" scoped="" ref="0x41026b50"/>
        <function-ref name="setType" scoped="" ref="0x41026c30"/>
        <function-ref name="isForMe" scoped="" ref="0x41026d10"/>
        <function-ref name="setGroup" scoped="" ref="0x41026df0"/>
        <function-ref name="localGroup" scoped="" ref="0x41026ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fff328" loc="110:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fff328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fff500"/>
        <function-ref name="stop" scoped="" ref="0x40fff5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x41029a78" loc="143:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x41029a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41029c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40ff2448" loc="139:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40ff2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4102a520"/>
        <function-ref name="maxSize" scoped="" ref="0x40ff2f20"/>
        <function-ref name="empty" scoped="" ref="0x40ff2a70"/>
        <function-ref name="put" scoped="" ref="0x4102a190"/>
        <function-ref name="size" scoped="" ref="0x40ff2cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x41026010" loc="146:/usr/src/tinyos/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x41026010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x410262f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4101e5b0" loc="42:/usr/src/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4101e5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4101d6a0"/>
        <function-ref name="maxSize" scoped="" ref="0x4101d0b8"/>
        <function-ref name="empty" scoped="" ref="0x4101ebd8"/>
        <function-ref name="put" scoped="" ref="0x4101d310"/>
        <function-ref name="size" scoped="" ref="0x4101ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x415a0f18" loc="56:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x415a0f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4159d010"/>
        <function-ref name="maxSize" scoped="" ref="0x4159fa08"/>
        <function-ref name="empty" scoped="" ref="0x4159f558"/>
        <function-ref name="put" scoped="" ref="0x4159fc60"/>
        <function-ref name="size" scoped="" ref="0x4159f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415a0b70" loc="55:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415a0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415a0d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x410419b8" loc="42:/usr/src/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x410419b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f5db40"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f5ddc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41040aa8"/>
        <function-ref name="maxSize" scoped="" ref="0x410404c0"/>
        <function-ref name="empty" scoped="" ref="0x41040010"/>
        <function-ref name="put" scoped="" ref="0x41040718"/>
        <function-ref name="size" scoped="" ref="0x41040268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x415e56f8" loc="56:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x415e56f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f5db40"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f5ddc8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415e4850"/>
        <function-ref name="maxSize" scoped="" ref="0x415e4268"/>
        <function-ref name="empty" scoped="" ref="0x415e5d20"/>
        <function-ref name="put" scoped="" ref="0x415e44c0"/>
        <function-ref name="size" scoped="" ref="0x415e4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415e5350" loc="55:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415e5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415e5528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x4102ed58" loc="43:/usr/src/tinyos/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4102ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40f5db40"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40f5ddc8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4103eac8"/>
        <function-ref name="enqueue" scoped="" ref="0x4103d1d0"/>
        <function-ref name="element" scoped="" ref="0x4103d520"/>
        <function-ref name="maxSize" scoped="" ref="0x4103e870"/>
        <function-ref name="dequeue" scoped="" ref="0x4103ee38"/>
        <function-ref name="empty" scoped="" ref="0x4103e3c0"/>
        <function-ref name="size" scoped="" ref="0x4103e618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x4102b7b8" loc="39:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x4102b7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x4102bde0"/>
        <function-ref name="flush" scoped="" ref="0x41064308"/>
        <function-ref name="lookup" scoped="" ref="0x41064088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x415d66b0" loc="46:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x415d66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x415d6cd8"/>
        <function-ref name="flush" scoped="" ref="0x415d4290"/>
        <function-ref name="lookup" scoped="" ref="0x415d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415d62e8" loc="45:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415d62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415d64c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x415d44d0" loc="49:/usr/src/tinyos/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x415d44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x415d46a8"/>
        <function-ref name="option" scoped="" ref="0x415d4788"/>
        <function-ref name="setEtx" scoped="" ref="0x415d4868"/>
        <function-ref name="setOrigin" scoped="" ref="0x415d4948"/>
        <function-ref name="clearOption" scoped="" ref="0x415d4a28"/>
        <function-ref name="getEtx" scoped="" ref="0x415d4b08"/>
        <function-ref name="getOrigin" scoped="" ref="0x415d4be8"/>
        <function-ref name="setType" scoped="" ref="0x415d4cc8"/>
        <function-ref name="setOption" scoped="" ref="0x415d4da8"/>
        <function-ref name="matchPacket" scoped="" ref="0x415d4e88"/>
        <function-ref name="getThl" scoped="" ref="0x415d3010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x415d30f0"/>
        <function-ref name="matchInstance" scoped="" ref="0x415d31d0"/>
        <function-ref name="getType" scoped="" ref="0x415d3330"/>
        <function-ref name="setThl" scoped="" ref="0x415d3410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x410491e8" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410491e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41048d58"/>
        <function-ref name="fired" scoped="" ref="0x41048010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41048718"/>
        <function-ref name="isOneShot" scoped="" ref="0x410484c0"/>
        <function-ref name="getdt" scoped="" ref="0x41082268"/>
        <function-ref name="gett0" scoped="" ref="0x41082010"/>
        <function-ref name="isRunning" scoped="" ref="0x41048268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41049810"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41048a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x41049a90"/>
        <function-ref name="stop" scoped="" ref="0x41049d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x410810a0" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410810a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41080b88"/>
        <function-ref name="fired" scoped="" ref="0x41081e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41080548"/>
        <function-ref name="isOneShot" scoped="" ref="0x410802f0"/>
        <function-ref name="getdt" scoped="" ref="0x4107e048"/>
        <function-ref name="gett0" scoped="" ref="0x41080de0"/>
        <function-ref name="isRunning" scoped="" ref="0x41080098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410816c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41080868"/>
        <function-ref name="startOneShot" scoped="" ref="0x41081948"/>
        <function-ref name="stop" scoped="" ref="0x41081bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41073dd8" loc="57:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41073dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41071010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x41076618" loc="47:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x41076618"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x410767f0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x410768d0"/>
        <function-ref name="txNoAck" scoped="" ref="0x410769b0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x41076a90"/>
        <function-ref name="evicted" scoped="" ref="0x41076b70"/>
        <function-ref name="clearDLQ" scoped="" ref="0x41076c50"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x41076d30"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x41076e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41075368" loc="49:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41075368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41075540"/>
        <function-ref name="payloadLength" scoped="" ref="0x41075620"/>
        <function-ref name="getPayload" scoped="" ref="0x41075700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410757e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410758c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x410741d0" loc="54:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410741d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410743a8"/>
        <function-ref name="getPayload" scoped="" ref="0x41074488"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41074568"/>
        <function-ref name="cancel" scoped="" ref="0x41074648"/>
        <function-ref name="sendDone" scoped="" ref="0x41074728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41078ae8" loc="45:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41078ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41078cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x41078da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41078e80"/>
        <function-ref name="cancel" scoped="" ref="0x41076010"/>
        <function-ref name="sendDone" scoped="" ref="0x410760f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41071560" loc="59:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41071560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x410717b8"/>
        <function-ref name="rand32" scoped="" ref="0x41071898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41073670" loc="56:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41073670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41073848"/>
        <function-ref name="payloadLength" scoped="" ref="0x41073928"/>
        <function-ref name="getPayload" scoped="" ref="0x41073a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41073ae8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41073bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41075010" loc="48:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41075010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410751e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x41074950" loc="55:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x41074950"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41074b28"/>
        <function-ref name="source" scoped="" ref="0x41074c08"/>
        <function-ref name="address" scoped="" ref="0x41074ce8"/>
        <function-ref name="destination" scoped="" ref="0x41074dc8"/>
        <function-ref name="setSource" scoped="" ref="0x41074ea8"/>
        <function-ref name="setDestination" scoped="" ref="0x41073010"/>
        <function-ref name="type" scoped="" ref="0x410730f0"/>
        <function-ref name="setType" scoped="" ref="0x410731d0"/>
        <function-ref name="isForMe" scoped="" ref="0x410732b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41073390"/>
        <function-ref name="localGroup" scoped="" ref="0x41073470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41076278" loc="46:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41076278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41076450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x41072dd0" loc="50:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x41072dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x41074010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41078660" loc="44:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41078660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41078838"/>
        <function-ref name="stop" scoped="" ref="0x41078918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x41071208" loc="58:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x41071208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x410713e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x410f8ed8" loc="49:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410f8ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410f70c0"/>
        <function-ref name="getPayload" scoped="" ref="0x410f71a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410f7280"/>
        <function-ref name="cancel" scoped="" ref="0x410f7360"/>
        <function-ref name="sendDone" scoped="" ref="0x410f7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x410f7580" loc="50:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410f7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410f7758"/>
        <function-ref name="payloadLength" scoped="" ref="0x410f7838"/>
        <function-ref name="getPayload" scoped="" ref="0x410f7918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410f79f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410f7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410f7c18" loc="51:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410f7c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410f7df0"/>
        <function-ref name="source" scoped="" ref="0x410f7ed0"/>
        <function-ref name="address" scoped="" ref="0x41128010"/>
        <function-ref name="destination" scoped="" ref="0x411280f0"/>
        <function-ref name="setSource" scoped="" ref="0x411281d0"/>
        <function-ref name="setDestination" scoped="" ref="0x411282b0"/>
        <function-ref name="type" scoped="" ref="0x41128390"/>
        <function-ref name="setType" scoped="" ref="0x41128470"/>
        <function-ref name="isForMe" scoped="" ref="0x41128550"/>
        <function-ref name="setGroup" scoped="" ref="0x41128630"/>
        <function-ref name="localGroup" scoped="" ref="0x41128710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41128870" loc="52:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41128870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41128a48"/>
        <function-ref name="noAck" scoped="" ref="0x41128b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x41128c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4160e6f0" loc="49:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4160e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4160e8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4160e9a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4160ea88"/>
        <function-ref name="cancel" scoped="" ref="0x4160eb68"/>
        <function-ref name="sendDone" scoped="" ref="0x4160ec48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4160ed88" loc="50:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4160ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4160d010"/>
        <function-ref name="payloadLength" scoped="" ref="0x4160d0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4160d1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4160d2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4160d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4160d4d0" loc="51:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4160d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4160d6a8"/>
        <function-ref name="source" scoped="" ref="0x4160d788"/>
        <function-ref name="address" scoped="" ref="0x4160d868"/>
        <function-ref name="destination" scoped="" ref="0x4160d948"/>
        <function-ref name="setSource" scoped="" ref="0x4160da28"/>
        <function-ref name="setDestination" scoped="" ref="0x4160db08"/>
        <function-ref name="type" scoped="" ref="0x4160dbe8"/>
        <function-ref name="setType" scoped="" ref="0x4160dcc8"/>
        <function-ref name="isForMe" scoped="" ref="0x4160dda8"/>
        <function-ref name="setGroup" scoped="" ref="0x4160de88"/>
        <function-ref name="localGroup" scoped="" ref="0x4160c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4160c170" loc="52:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4160c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4160c348"/>
        <function-ref name="noAck" scoped="" ref="0x4160c428"/>
        <function-ref name="wasAcked" scoped="" ref="0x4160c508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4160adb8" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4160adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41607010"/>
        <function-ref name="getPayload" scoped="" ref="0x416070f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416071d0"/>
        <function-ref name="cancel" scoped="" ref="0x416072b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41607390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41607500" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41607500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416076d8"/>
        <function-ref name="getPayload" scoped="" ref="0x416077b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41607898"/>
        <function-ref name="cancel" scoped="" ref="0x41607978"/>
        <function-ref name="sendDone" scoped="" ref="0x41607a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41607b98" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41607b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41607d70"/>
        <function-ref name="source" scoped="" ref="0x41607e50"/>
        <function-ref name="address" scoped="" ref="0x41606010"/>
        <function-ref name="destination" scoped="" ref="0x416060f0"/>
        <function-ref name="setSource" scoped="" ref="0x416061d0"/>
        <function-ref name="setDestination" scoped="" ref="0x416062b0"/>
        <function-ref name="type" scoped="" ref="0x41606390"/>
        <function-ref name="setType" scoped="" ref="0x41606470"/>
        <function-ref name="isForMe" scoped="" ref="0x41606550"/>
        <function-ref name="setGroup" scoped="" ref="0x41606630"/>
        <function-ref name="localGroup" scoped="" ref="0x41606710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410e0120" loc="43:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410e0120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e02f8"/>
        <function-ref name="getPayload" scoped="" ref="0x410e03d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410e04b8"/>
        <function-ref name="cancel" scoped="" ref="0x410e0598"/>
        <function-ref name="sendDone" scoped="" ref="0x410e0678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41132780" loc="48:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41132780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41132968"/>
        <function-ref name="getPayload" scoped="" ref="0x41132a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41132b28"/>
        <function-ref name="cancel" scoped="" ref="0x41132c08"/>
        <function-ref name="sendDone" scoped="" ref="0x41132ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41132010" loc="46:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41132010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411321f8"/>
        <function-ref name="getPayload" scoped="" ref="0x411322d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411323b8"/>
        <function-ref name="cancel" scoped="" ref="0x41132498"/>
        <function-ref name="sendDone" scoped="" ref="0x41132578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x41131a50" loc="50:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41131a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41131c28"/>
        <function-ref name="payloadLength" scoped="" ref="0x41131d08"/>
        <function-ref name="getPayload" scoped="" ref="0x41131de8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41131ec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41130010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x41130190" loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x41130190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41130368"/>
        <function-ref name="runTask" scoped="" ref="0x41130448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x411305c8" loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x411305c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411307a0"/>
        <function-ref name="runTask" scoped="" ref="0x41130880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41132e28" loc="49:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41132e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41131050"/>
        <function-ref name="source" scoped="" ref="0x41131130"/>
        <function-ref name="address" scoped="" ref="0x41131210"/>
        <function-ref name="destination" scoped="" ref="0x411312f0"/>
        <function-ref name="setSource" scoped="" ref="0x411313d0"/>
        <function-ref name="setDestination" scoped="" ref="0x411314b0"/>
        <function-ref name="type" scoped="" ref="0x41131590"/>
        <function-ref name="setType" scoped="" ref="0x41131670"/>
        <function-ref name="isForMe" scoped="" ref="0x41131750"/>
        <function-ref name="setGroup" scoped="" ref="0x41131830"/>
        <function-ref name="localGroup" scoped="" ref="0x41131910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411255d8" loc="46:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411255d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411257b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41125890"/>
        <function-ref name="getPayload" scoped="" ref="0x41125970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41125a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41125b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411252c0" loc="45:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411252c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41125498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41125c70" loc="47:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41125c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41125e48"/>
        <function-ref name="source" scoped="" ref="0x41125f28"/>
        <function-ref name="address" scoped="" ref="0x41121018"/>
        <function-ref name="destination" scoped="" ref="0x411210f8"/>
        <function-ref name="setSource" scoped="" ref="0x411211d8"/>
        <function-ref name="setDestination" scoped="" ref="0x411212b8"/>
        <function-ref name="type" scoped="" ref="0x41121398"/>
        <function-ref name="setType" scoped="" ref="0x41121478"/>
        <function-ref name="isForMe" scoped="" ref="0x41121558"/>
        <function-ref name="setGroup" scoped="" ref="0x41121638"/>
        <function-ref name="localGroup" scoped="" ref="0x41121718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4111e010" loc="47:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4111e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4111e1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4111e2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4111e3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4111e488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4111e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4111fca8" loc="46:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4111fca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4111fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4111e6a8" loc="48:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4111e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4111e880"/>
        <function-ref name="source" scoped="" ref="0x4111e960"/>
        <function-ref name="address" scoped="" ref="0x4111ea40"/>
        <function-ref name="destination" scoped="" ref="0x4111eb20"/>
        <function-ref name="setSource" scoped="" ref="0x4111ec00"/>
        <function-ref name="setDestination" scoped="" ref="0x4111ece0"/>
        <function-ref name="type" scoped="" ref="0x4111edc0"/>
        <function-ref name="setType" scoped="" ref="0x4111eea0"/>
        <function-ref name="isForMe" scoped="" ref="0x4111b010"/>
        <function-ref name="setGroup" scoped="" ref="0x4111b0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4111b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x411c7010" loc="110:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x411c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x411c71e8"/>
        <function-ref name="setRoot" scoped="" ref="0x411c72c8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x411c73a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x411bb468" loc="271:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x411bb468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411bb640"/>
        <function-ref name="runTask" scoped="" ref="0x411bb720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x411bc230" loc="125:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x411bc230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x411bc408"/>
        <function-ref name="logEventMsg" scoped="" ref="0x411bc4e8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x411bc5c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x411bc6a8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x411bc788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x411c4bd0" loc="119:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x411c4bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x411c4da8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x411c4e88"/>
        <function-ref name="txNoAck" scoped="" ref="0x411c3010"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x411c30f0"/>
        <function-ref name="evicted" scoped="" ref="0x411c31d0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x411c32b0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x411c3390"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x411c3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x411c5548" loc="113:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x411c5548"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x411c5720"/>
        <function-ref name="setEtx" scoped="" ref="0x411c5800"/>
        <function-ref name="clearOption" scoped="" ref="0x411c58e0"/>
        <function-ref name="getEtx" scoped="" ref="0x411c59c0"/>
        <function-ref name="setOption" scoped="" ref="0x411c5aa0"/>
        <function-ref name="setParent" scoped="" ref="0x411c5b80"/>
        <function-ref name="getParent" scoped="" ref="0x411c5c60"/>
        <function-ref name="getOption" scoped="" ref="0x411c5d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x411c2250" loc="121:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x411c2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411c2428"/>
        <function-ref name="stopDone" scoped="" ref="0x411c2508"/>
        <function-ref name="start" scoped="" ref="0x411c25e8"/>
        <function-ref name="stop" scoped="" ref="0x411c26c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x411bdd98" loc="124:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x411bdd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x411bc010"/>
        <function-ref name="rand32" scoped="" ref="0x411bc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x411c74e8" loc="111:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x411c74e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x411c76c0"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x411c77a0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x411c7880"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x411c7960"/>
        <function-ref name="getEtx" scoped="" ref="0x411c7a40"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x411c7b20"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x411c7c00"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x411c7ce0"/>
        <function-ref name="getParent" scoped="" ref="0x411c7dc0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x411c7ea0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x411c5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x411bb030" loc="390:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x411bb030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411bb208"/>
        <function-ref name="runTask" scoped="" ref="0x411bb2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411c5e80" loc="114:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411c5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411c4070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x411c4200" loc="117:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x411c4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411c43d8"/>
        <function-ref name="getPayload" scoped="" ref="0x411c44b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411c4598"/>
        <function-ref name="cancel" scoped="" ref="0x411c4678"/>
        <function-ref name="sendDone" scoped="" ref="0x411c4758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x411c28b8" loc="122:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x411c28b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411c03d8"/>
        <function-ref name="fired" scoped="" ref="0x411c1678"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411c1d80"/>
        <function-ref name="isOneShot" scoped="" ref="0x411c1b28"/>
        <function-ref name="getdt" scoped="" ref="0x411c0888"/>
        <function-ref name="gett0" scoped="" ref="0x411c0630"/>
        <function-ref name="isRunning" scoped="" ref="0x411c18d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411c2ee0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411c00b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x411c11a0"/>
        <function-ref name="stop" scoped="" ref="0x411c1420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x411c0b48" loc="123:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x411c0b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411bd6d8"/>
        <function-ref name="fired" scoped="" ref="0x411be970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411bd098"/>
        <function-ref name="isOneShot" scoped="" ref="0x411bee20"/>
        <function-ref name="getdt" scoped="" ref="0x411bdb88"/>
        <function-ref name="gett0" scoped="" ref="0x411bd930"/>
        <function-ref name="isRunning" scoped="" ref="0x411bebc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411be218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411bd3b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x411be498"/>
        <function-ref name="stop" scoped="" ref="0x411be718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x411bc8c8" loc="126:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x411bc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x411bcaa0"/>
        <function-ref name="setClientCongested" scoped="" ref="0x411bcb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x411bccc0" loc="128:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x411bccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x411bce98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x411c48b8" loc="118:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x411c48b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411c4a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x411c35b0" loc="120:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411c35b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411c3788"/>
        <function-ref name="source" scoped="" ref="0x411c3868"/>
        <function-ref name="address" scoped="" ref="0x411c3948"/>
        <function-ref name="destination" scoped="" ref="0x411c3a28"/>
        <function-ref name="setSource" scoped="" ref="0x411c3b08"/>
        <function-ref name="setDestination" scoped="" ref="0x411c3be8"/>
        <function-ref name="type" scoped="" ref="0x411c3cc8"/>
        <function-ref name="setType" scoped="" ref="0x411c3da8"/>
        <function-ref name="isForMe" scoped="" ref="0x411c3e88"/>
        <function-ref name="setGroup" scoped="" ref="0x411c2010"/>
        <function-ref name="localGroup" scoped="" ref="0x411c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x411c5150" loc="112:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x411c5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411c5328"/>
        <function-ref name="stop" scoped="" ref="0x411c5408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x411c89b8" loc="109:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x411c89b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x411c8b90"/>
        <function-ref name="routeFound" scoped="" ref="0x411c8c70"/>
        <function-ref name="nextHop" scoped="" ref="0x411c8d50"/>
        <function-ref name="noRoute" scoped="" ref="0x411c8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411f66a8" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411f66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411f4248"/>
        <function-ref name="fired" scoped="" ref="0x411f54e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x411f5bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x411f5998"/>
        <function-ref name="getdt" scoped="" ref="0x411f46f8"/>
        <function-ref name="gett0" scoped="" ref="0x411f44a0"/>
        <function-ref name="isRunning" scoped="" ref="0x411f5740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x411f6cd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411f5f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x411f5010"/>
        <function-ref name="stop" scoped="" ref="0x411f5290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411f1a58" loc="49:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411f1a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411f1c30"/>
        <function-ref name="getPayload" scoped="" ref="0x411f1d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411f1df0"/>
        <function-ref name="cancel" scoped="" ref="0x411f1ed0"/>
        <function-ref name="sendDone" scoped="" ref="0x411f0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411f0150" loc="50:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411f0150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411f0328"/>
        <function-ref name="payloadLength" scoped="" ref="0x411f0408"/>
        <function-ref name="getPayload" scoped="" ref="0x411f04e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411f05c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411f06a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411f07e8" loc="51:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411f07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411f09c0"/>
        <function-ref name="source" scoped="" ref="0x411f0aa0"/>
        <function-ref name="address" scoped="" ref="0x411f0b80"/>
        <function-ref name="destination" scoped="" ref="0x411f0c60"/>
        <function-ref name="setSource" scoped="" ref="0x411f0d40"/>
        <function-ref name="setDestination" scoped="" ref="0x411f0e20"/>
        <function-ref name="type" scoped="" ref="0x411f0f00"/>
        <function-ref name="setType" scoped="" ref="0x411ef010"/>
        <function-ref name="isForMe" scoped="" ref="0x411ef0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x411ef1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x411ef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411ef410" loc="52:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411ef410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411ef5e8"/>
        <function-ref name="noAck" scoped="" ref="0x411ef6c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x411ef7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4168f010" loc="49:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4168f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4168f1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4168f2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4168f3a8"/>
        <function-ref name="cancel" scoped="" ref="0x4168f488"/>
        <function-ref name="sendDone" scoped="" ref="0x4168f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4168f6a8" loc="50:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4168f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4168f880"/>
        <function-ref name="payloadLength" scoped="" ref="0x4168f960"/>
        <function-ref name="getPayload" scoped="" ref="0x4168fa40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4168fb20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4168fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4168fd40" loc="51:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4168fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4168ff18"/>
        <function-ref name="source" scoped="" ref="0x4168d010"/>
        <function-ref name="address" scoped="" ref="0x4168d0f0"/>
        <function-ref name="destination" scoped="" ref="0x4168d1d0"/>
        <function-ref name="setSource" scoped="" ref="0x4168d2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x4168d390"/>
        <function-ref name="type" scoped="" ref="0x4168d470"/>
        <function-ref name="setType" scoped="" ref="0x4168d550"/>
        <function-ref name="isForMe" scoped="" ref="0x4168d630"/>
        <function-ref name="setGroup" scoped="" ref="0x4168d710"/>
        <function-ref name="localGroup" scoped="" ref="0x4168d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4168d950" loc="52:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4168d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4168db28"/>
        <function-ref name="noAck" scoped="" ref="0x4168dc08"/>
        <function-ref name="wasAcked" scoped="" ref="0x4168dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41688728" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41688728"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41688900"/>
        <function-ref name="getPayload" scoped="" ref="0x416889e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41688ac0"/>
        <function-ref name="cancel" scoped="" ref="0x41688ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x41688c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41688df0" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41688df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41687010"/>
        <function-ref name="getPayload" scoped="" ref="0x416870f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416871d0"/>
        <function-ref name="cancel" scoped="" ref="0x416872b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41687390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416874d0" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416874d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416876a8"/>
        <function-ref name="source" scoped="" ref="0x41687788"/>
        <function-ref name="address" scoped="" ref="0x41687868"/>
        <function-ref name="destination" scoped="" ref="0x41687948"/>
        <function-ref name="setSource" scoped="" ref="0x41687a28"/>
        <function-ref name="setDestination" scoped="" ref="0x41687b08"/>
        <function-ref name="type" scoped="" ref="0x41687be8"/>
        <function-ref name="setType" scoped="" ref="0x41687cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41687da8"/>
        <function-ref name="setGroup" scoped="" ref="0x41687e88"/>
        <function-ref name="localGroup" scoped="" ref="0x41686010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411eed60" loc="46:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411eed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411ec010"/>
        <function-ref name="payloadLength" scoped="" ref="0x411ec0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x411ec1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411ec2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411ec390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411eea48" loc="45:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411eea48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411eec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411ec4d0" loc="47:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411ec4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411ec6a8"/>
        <function-ref name="source" scoped="" ref="0x411ec788"/>
        <function-ref name="address" scoped="" ref="0x411ec868"/>
        <function-ref name="destination" scoped="" ref="0x411ec948"/>
        <function-ref name="setSource" scoped="" ref="0x411eca28"/>
        <function-ref name="setDestination" scoped="" ref="0x411ecb08"/>
        <function-ref name="type" scoped="" ref="0x411ecbe8"/>
        <function-ref name="setType" scoped="" ref="0x411eccc8"/>
        <function-ref name="isForMe" scoped="" ref="0x411ecda8"/>
        <function-ref name="setGroup" scoped="" ref="0x411ece88"/>
        <function-ref name="localGroup" scoped="" ref="0x411eb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4121c7b8" loc="46:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4121c7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4121c990"/>
        <function-ref name="payloadLength" scoped="" ref="0x4121ca70"/>
        <function-ref name="getPayload" scoped="" ref="0x4121cb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4121cc30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4121cd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4121c120" loc="45:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4121c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4121c2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4121c3d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4121c4b8"/>
        <function-ref name="cancel" scoped="" ref="0x4121c598"/>
        <function-ref name="sendDone" scoped="" ref="0x4121c678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41678230" loc="38:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41678230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41678408"/>
        <function-ref name="payloadLength" scoped="" ref="0x416784e8"/>
        <function-ref name="getPayload" scoped="" ref="0x416785c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416786a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41678788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4167aae8" loc="37:/usr/src/tinyos/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4167aae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4167acc0"/>
        <function-ref name="getPayload" scoped="" ref="0x4167ada0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4167ae80"/>
        <function-ref name="cancel" scoped="" ref="0x41678010"/>
        <function-ref name="sendDone" scoped="" ref="0x416780f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x41675328" loc="46:/usr/src/tinyos/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x41675328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x41675500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411ff460" loc="49:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411ff460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411ff638"/>
        <function-ref name="getPayload" scoped="" ref="0x411ff718"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411ff7f8"/>
        <function-ref name="cancel" scoped="" ref="0x411ff8d8"/>
        <function-ref name="sendDone" scoped="" ref="0x411ff9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411ffaf8" loc="50:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411ffaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411ffcd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x411ffdb0"/>
        <function-ref name="getPayload" scoped="" ref="0x411ffe90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411fe010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411fe0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411fe230" loc="51:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411fe230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411fe408"/>
        <function-ref name="source" scoped="" ref="0x411fe4e8"/>
        <function-ref name="address" scoped="" ref="0x411fe5c8"/>
        <function-ref name="destination" scoped="" ref="0x411fe6a8"/>
        <function-ref name="setSource" scoped="" ref="0x411fe788"/>
        <function-ref name="setDestination" scoped="" ref="0x411fe868"/>
        <function-ref name="type" scoped="" ref="0x411fe948"/>
        <function-ref name="setType" scoped="" ref="0x411fea28"/>
        <function-ref name="isForMe" scoped="" ref="0x411feb08"/>
        <function-ref name="setGroup" scoped="" ref="0x411febe8"/>
        <function-ref name="localGroup" scoped="" ref="0x411fecc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411fee28" loc="52:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411fee28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411fd050"/>
        <function-ref name="noAck" scoped="" ref="0x411fd130"/>
        <function-ref name="wasAcked" scoped="" ref="0x411fd210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416715b8" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416715b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41671790"/>
        <function-ref name="getPayload" scoped="" ref="0x41671870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41671950"/>
        <function-ref name="cancel" scoped="" ref="0x41671a30"/>
        <function-ref name="sendDone" scoped="" ref="0x41671b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41671c80" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41671c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41671e58"/>
        <function-ref name="getPayload" scoped="" ref="0x41670010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416700f0"/>
        <function-ref name="cancel" scoped="" ref="0x416701d0"/>
        <function-ref name="sendDone" scoped="" ref="0x416702b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416703f0" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416703f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416705c8"/>
        <function-ref name="source" scoped="" ref="0x416706a8"/>
        <function-ref name="address" scoped="" ref="0x41670788"/>
        <function-ref name="destination" scoped="" ref="0x41670868"/>
        <function-ref name="setSource" scoped="" ref="0x41670948"/>
        <function-ref name="setDestination" scoped="" ref="0x41670a28"/>
        <function-ref name="type" scoped="" ref="0x41670b08"/>
        <function-ref name="setType" scoped="" ref="0x41670be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41670cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41670da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41670e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41207290" loc="44:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41207290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41207468"/>
        <function-ref name="getPayload" scoped="" ref="0x41207548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41207628"/>
        <function-ref name="cancel" scoped="" ref="0x41207708"/>
        <function-ref name="sendDone" scoped="" ref="0x412077e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41204218" loc="48:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41204218"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41204400"/>
        <function-ref name="getPayload" scoped="" ref="0x412044e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412045c0"/>
        <function-ref name="cancel" scoped="" ref="0x412046a0"/>
        <function-ref name="sendDone" scoped="" ref="0x41204780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x412069e8" loc="46:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x412069e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41206bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x41206cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41206d90"/>
        <function-ref name="cancel" scoped="" ref="0x41206e70"/>
        <function-ref name="sendDone" scoped="" ref="0x41204010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x412034d0" loc="50:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x412034d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412036a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41203788"/>
        <function-ref name="getPayload" scoped="" ref="0x41203868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41203948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41203a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x41203ba8" loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x41203ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41203d80"/>
        <function-ref name="runTask" scoped="" ref="0x41203e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x41202010" loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x41202010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412021e8"/>
        <function-ref name="runTask" scoped="" ref="0x412022c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x412048c0" loc="49:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412048c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41204a98"/>
        <function-ref name="source" scoped="" ref="0x41204b78"/>
        <function-ref name="address" scoped="" ref="0x41204c58"/>
        <function-ref name="destination" scoped="" ref="0x41204d38"/>
        <function-ref name="setSource" scoped="" ref="0x41204e18"/>
        <function-ref name="setDestination" scoped="" ref="0x41204ef8"/>
        <function-ref name="type" scoped="" ref="0x41203010"/>
        <function-ref name="setType" scoped="" ref="0x412030f0"/>
        <function-ref name="isForMe" scoped="" ref="0x412031d0"/>
        <function-ref name="setGroup" scoped="" ref="0x412032b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41203390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4123c278" loc="42:/usr/src/tinyos/tos/system/PoolC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4123c278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4123b3a0"/>
        <function-ref name="maxSize" scoped="" ref="0x4123cd50"/>
        <function-ref name="empty" scoped="" ref="0x4123c8a0"/>
        <function-ref name="put" scoped="" ref="0x4123b010"/>
        <function-ref name="size" scoped="" ref="0x4123caf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4169d9d0" loc="56:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4169d9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4169caa8"/>
        <function-ref name="maxSize" scoped="" ref="0x4169c4c0"/>
        <function-ref name="empty" scoped="" ref="0x4169c010"/>
        <function-ref name="put" scoped="" ref="0x4169c718"/>
        <function-ref name="size" scoped="" ref="0x4169c268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4169d628" loc="55:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4169d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4169d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x41239638" loc="43:/usr/src/tinyos/tos/system/QueueC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41239638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41238388"/>
        <function-ref name="enqueue" scoped="" ref="0x41238a68"/>
        <function-ref name="element" scoped="" ref="0x41238db8"/>
        <function-ref name="maxSize" scoped="" ref="0x41238130"/>
        <function-ref name="dequeue" scoped="" ref="0x412386f8"/>
        <function-ref name="empty" scoped="" ref="0x41239c60"/>
        <function-ref name="size" scoped="" ref="0x41239eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41236638" loc="42:/usr/src/tinyos/tos/system/PoolC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41236638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41234718"/>
        <function-ref name="maxSize" scoped="" ref="0x41234130"/>
        <function-ref name="empty" scoped="" ref="0x41236c60"/>
        <function-ref name="put" scoped="" ref="0x41234388"/>
        <function-ref name="size" scoped="" ref="0x41236eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416e2aa0" loc="56:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416e2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416e0b98"/>
        <function-ref name="maxSize" scoped="" ref="0x416e05b0"/>
        <function-ref name="empty" scoped="" ref="0x416e0100"/>
        <function-ref name="put" scoped="" ref="0x416e0808"/>
        <function-ref name="size" scoped="" ref="0x416e0358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416e26f8" loc="55:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416e26f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416e28d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x41233978" loc="43:/usr/src/tinyos/tos/system/QueueC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41233978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41232718"/>
        <function-ref name="enqueue" scoped="" ref="0x41232df8"/>
        <function-ref name="element" scoped="" ref="0x41230188"/>
        <function-ref name="maxSize" scoped="" ref="0x412324c0"/>
        <function-ref name="dequeue" scoped="" ref="0x41232a88"/>
        <function-ref name="empty" scoped="" ref="0x41232010"/>
        <function-ref name="size" scoped="" ref="0x41232268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4122f238" loc="49:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4122f238"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4122f410"/>
        <function-ref name="getPayload" scoped="" ref="0x4122f4f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4122f5d0"/>
        <function-ref name="cancel" scoped="" ref="0x4122f6b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4122f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4122f8d0" loc="50:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4122f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4122faa8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4122fb88"/>
        <function-ref name="getPayload" scoped="" ref="0x4122fc68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4122fd48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4122fe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4122e010" loc="51:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4122e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4122e1e8"/>
        <function-ref name="source" scoped="" ref="0x4122e2c8"/>
        <function-ref name="address" scoped="" ref="0x4122e3a8"/>
        <function-ref name="destination" scoped="" ref="0x4122e488"/>
        <function-ref name="setSource" scoped="" ref="0x4122e568"/>
        <function-ref name="setDestination" scoped="" ref="0x4122e648"/>
        <function-ref name="type" scoped="" ref="0x4122e728"/>
        <function-ref name="setType" scoped="" ref="0x4122e808"/>
        <function-ref name="isForMe" scoped="" ref="0x4122e8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x4122e9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x4122eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4122ec08" loc="52:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4122ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4122ede0"/>
        <function-ref name="noAck" scoped="" ref="0x4122eec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4122d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416d2858" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416d2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416d2a30"/>
        <function-ref name="getPayload" scoped="" ref="0x416d2b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416d2bf0"/>
        <function-ref name="cancel" scoped="" ref="0x416d2cd0"/>
        <function-ref name="sendDone" scoped="" ref="0x416d2db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416d2f20" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416d2f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416cf110"/>
        <function-ref name="getPayload" scoped="" ref="0x416cf1f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416cf2d0"/>
        <function-ref name="cancel" scoped="" ref="0x416cf3b0"/>
        <function-ref name="sendDone" scoped="" ref="0x416cf490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416cf5d0" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="MultihopOscilloscopeAppC.DebugSerialSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416cf5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416cf7a8"/>
        <function-ref name="source" scoped="" ref="0x416cf888"/>
        <function-ref name="address" scoped="" ref="0x416cf968"/>
        <function-ref name="destination" scoped="" ref="0x416cfa48"/>
        <function-ref name="setSource" scoped="" ref="0x416cfb28"/>
        <function-ref name="setDestination" scoped="" ref="0x416cfc08"/>
        <function-ref name="type" scoped="" ref="0x416cfce8"/>
        <function-ref name="setType" scoped="" ref="0x416cfdc8"/>
        <function-ref name="isForMe" scoped="" ref="0x416cfea8"/>
        <function-ref name="setGroup" scoped="" ref="0x416ce010"/>
        <function-ref name="localGroup" scoped="" ref="0x416ce0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionDebug" ref="0x4122deb0" loc="4:/usr/src/tinyos/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x4122deb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x4122a0c0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x4122a1a0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x4122a280"/>
        <function-ref name="logEventRoute" scoped="" ref="0x4122a360"/>
        <function-ref name="logEventDbg" scoped="" ref="0x4122a440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4122a5f0" loc="7:/usr/src/tinyos/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4122a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4122a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x41226c98" loc="10:/usr/src/tinyos/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x41226c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41226e70"/>
        <function-ref name="getPayload" scoped="" ref="0x41225010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412250f0"/>
        <function-ref name="cancel" scoped="" ref="0x412251d0"/>
        <function-ref name="sendDone" scoped="" ref="0x412252b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x41227108" loc="9:/usr/src/tinyos/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x41227108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41227e38"/>
        <function-ref name="enqueue" scoped="" ref="0x41226540"/>
        <function-ref name="element" scoped="" ref="0x41226890"/>
        <function-ref name="maxSize" scoped="" ref="0x41227be0"/>
        <function-ref name="dequeue" scoped="" ref="0x412261d0"/>
        <function-ref name="empty" scoped="" ref="0x41227730"/>
        <function-ref name="size" scoped="" ref="0x41227988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41221b78" loc="36:/usr/src/tinyos/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41221b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41221d50"/>
        <function-ref name="runTask" scoped="" ref="0x41221e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x4122aab8" loc="8:/usr/src/tinyos/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x4122aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
            <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41229b98"/>
        <function-ref name="maxSize" scoped="" ref="0x412295b0"/>
        <function-ref name="empty" scoped="" ref="0x41229100"/>
        <function-ref name="put" scoped="" ref="0x41229808"/>
        <function-ref name="size" scoped="" ref="0x41229358"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/usr/src/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404289d0" loc="62:/usr/src/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/usr/src/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/usr/src/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40421dd0" loc="60:/usr/src/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/usr/src/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4042db40" loc="60:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4042d9e8" loc="60:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x40424158" loc="31:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40424790" loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40424638" loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40424e58" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40424d00" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4042d440" loc="53:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4046c010" loc="44:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4046c3f8" loc="45:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4046d838" loc="42:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4046cbc8" loc="47:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4046dbf8" loc="43:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4046c7d0" loc="46:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4046d0f8" loc="40:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4046d488" loc="41:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404e8738" loc="113:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404e85e0" loc="113:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404e7730" loc="138:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404e75d8" loc="138:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404ebee8" loc="104:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404e8c48" loc="130:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40333888" loc="67:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40333da0" loc="75:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x404f3478" loc="68:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x404f3018" loc="61:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x404eabf0" loc="54:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x404ea688" loc="53:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x40507538" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40507158" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x405060c8" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x405064d8" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405078f0" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x40506e48" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40506cf0" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40507cc0" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x405052c0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x405068f8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/usr/src/tinyos/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40538378" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40539de8" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40538030" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40538210" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40535010" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40534bd0" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40534db0" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40534670" loc="123:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40536058" loc="96:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40538ec0" loc="96:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40536d48" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405369f0" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40536be8" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/usr/src/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40522ba0" loc="65:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40522a48" loc="65:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405485a0" loc="78:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40548448" loc="78:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40547558" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405471f8" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405473d8" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4053bbc0" loc="106:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4053b228" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40548ec0" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4053b0c8" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/usr/src/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40524eb0" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40524968" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40524b48" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40524d28" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
      <documentation loc="33:/usr/src/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40412438" loc="63:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="60:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40412880" loc="69:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="65:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40412d00" loc="74:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="71:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40411580" loc="85:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="81:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x40419b40" loc="113:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="110:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40419298" loc="102:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="98:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404184b8" loc="134:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="122:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40411138" loc="79:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="76:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40418010" loc="119:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="115:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x40419718" loc="108:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="105:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40412010" loc="58:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="55:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40411e28" loc="96:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="93:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40411a00" loc="91:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="88:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40418c30" loc="149:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="137:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40418ad8" loc="149:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x405563b8" loc="59:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40556260" loc="59:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40556eb0" loc="71:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40556d58" loc="71:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40555950" loc="85:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405557f8" loc="85:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4054b648" loc="177:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054b4f0" loc="177:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40543010" loc="88:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40544e70" loc="88:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40546ee0" loc="68:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405445c8" loc="78:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40544470" loc="78:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4054f8f8" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054f590" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4054f798" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40543bf8" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40543890" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40543a98" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4054d010" loc="147:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054eea0" loc="147:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4054db48" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054d818" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4054d9e8" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4054e4c0" loc="136:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054e368" loc="136:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4054c370" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054c010" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4054c210" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4054cbe8" loc="195:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/usr/src/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4055ee88" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055eb48" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4055ed28" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4055aa18" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055a6b8" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4055a898" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4055a158" loc="112:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4055bb38" loc="89:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055b9e0" loc="89:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40559820" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405594c8" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405596c0" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40592d28" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40592998" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40592bc8" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40595a80" loc="15:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40592388" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40592010" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40592228" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/usr/src/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x405a7e58" loc="95:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/usr/src/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405b23c0" loc="105:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/usr/src/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x405b1590" loc="54:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x405b1158" loc="49:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x405ad9b0" loc="56:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x405b6698" loc="72:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x405b5790" loc="94:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405b5638" loc="94:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x405b6bc0" loc="79:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x405b6168" loc="65:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405b6010" loc="65:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x405b5c98" loc="100:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x405b5138" loc="85:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x405ac798" loc="71:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x405acd60" loc="81:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x405ac188" loc="62:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x405ac030" loc="62:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x405ab4c0" loc="91:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405ab368" loc="91:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x405ae8a8" loc="62:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x405a9168" loc="69:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405a9010" loc="69:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x405a9800" loc="80:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x405a96a8" loc="80:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/usr/src/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40657940" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406575f0" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406577e0" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40665cf0" loc="79:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40665b98" loc="79:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40664530" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406641e0" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406643d0" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40665158" loc="65:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x406633c8" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40664e58" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40663068" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40663260" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x406656e0" loc="72:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406667f0" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406662a0" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40666490" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40666688" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/usr/src/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4067ba70" loc="46:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4067b918" loc="46:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40678378" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40678010" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40678218" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40675b80" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40675b80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40675ce8" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40675ce8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406721f0" loc="64:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40675ce8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40672c18" loc="76:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40672718" loc="71:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40685038" loc="82:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x4067c720" loc="44:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40680ec0" loc="42:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x4068fd08" loc="49:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4068fbb0" loc="49:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x4068f408" loc="47:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40680648" loc="40:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40680a88" loc="41:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x4067c320" loc="43:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x4067cb20" loc="45:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x4068f058" loc="46:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4067ced0" loc="46:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x4068f7d8" loc="48:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4040baf0" loc="62:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403e7470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40332ed0" loc="52:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403f8a98" loc="76:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40719d18" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40719d18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4072a490" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4072a338" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4072b010" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4072c230" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40719d18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4072b3c8" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4072a8a0" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4072cb58" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4072bf20" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4072c770" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40719d18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4072c618" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40719d18"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4072b790" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4072bb40" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4073e478" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073e478"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40739ae0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40739988" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4073a668" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4073a288" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4073e970" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073e478"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4073aa20" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40739ef0" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40739588" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4073eeb0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073e478"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4073ed58" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073e478"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4073ade8" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407391a8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40730ad0" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40730ad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40740188" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40740030" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40742cf8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40742918" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x40740960" loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40742010" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40730ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407410c8" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40740598" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40741c20" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40742550" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40730ad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x407423f8" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40730ad0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40741490" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40741840" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4032f010" loc="57:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4032f918" loc="72:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4032f450" loc="65:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/usr/src/tinyos/tos/lib/net/RootControl.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x407f2038" loc="43:/usr/src/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x407e0868" loc="41:/usr/src/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x407e0c60" loc="42:/usr/src/tinyos/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x407f5910" loc="50:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407f55b8" loc="50:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x407f57b0" loc="50:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x407f7d30" loc="44:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407f79c8" loc="44:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x407f7bd0" loc="44:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x407f6ac0" loc="47:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407f6738" loc="47:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x407f6960" loc="47:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x407f75c8" loc="43:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407f7470" loc="43:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x407f5168" loc="49:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407f5010" loc="49:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x407f6350" loc="46:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407f61f8" loc="46:/usr/src/tinyos/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/usr/src/tinyos/tos/interfaces/Pool.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x407f3a80" loc="50:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x407f3a80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40803770" loc="97:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="91:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x407f3a80"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x407eb980" loc="80:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="74:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x407f3f20" loc="61:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40803010" loc="89:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="82:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x407f3a80"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x407ebe30" loc="89:/usr/src/tinyos/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x407f3a80"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x407eb448" loc="72:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/usr/src/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x407fa458" loc="49:/usr/src/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x407fa458"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x407fa908" loc="55:/usr/src/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/usr/src/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40811170" loc="63:/usr/src/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x407fa458"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x407fad88" loc="63:/usr/src/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40811010" loc="63:/usr/src/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x407fa458"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/usr/src/tinyos/tos/interfaces/Queue.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x407f29e8" loc="43:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x407f29e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x407f1bd0" loc="73:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x407f29e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x407f0a98" loc="90:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="83:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x407f29e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x407f0940" loc="90:/usr/src/tinyos/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x407f29e8"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40037840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x40037840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x407ef3c8" loc="101:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="92:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x407f29e8"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x407ef270" loc="101:/usr/src/tinyos/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x407f17a0" loc="65:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x407f0288" loc="81:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="75:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x407f29e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x407f2e88" loc="50:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="45:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x407f12e8" loc="58:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/usr/src/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407ec7c0" loc="53:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407ec7c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x407fc038" loc="136:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407ffe10" loc="83:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x407fd010" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x407fec28" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x407fee10" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x407fe780" loc="98:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x407fc9b0" loc="151:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x407fc480" loc="144:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x407fe2c0" loc="92:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x407ece18" loc="64:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407eccc0" loc="64:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x407fd9f8" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x407fd6b0" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x407fd898" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x407ff590" loc="73:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407ff438" loc="73:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407ffa60" loc="78:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40845ca0" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40845ca0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40845e08" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40845e08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4083e0c8" loc="109:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40845e08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40840d98" loc="78:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4083fa68" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40845e08"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40845e08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4083f718" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40845e08"/></type-var>
          </variable>
          <variable name="dt" ref="0x4083f908" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40845e08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4083f210" loc="88:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4083e558" loc="116:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40845e08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40840458" loc="66:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40845e08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40840300" loc="66:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40845e08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40840938" loc="73:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusPowerManager" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
      <function event="" provided="0" name="powerOn" ref="0x409683d0" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; This event is called when the bus is powered on and the maximum &#10; specified startup time has elapsed.</short>
          <long>&#10; This event is called when the bus is powered on and the maximum &#10; specified startup time has elapsed. Implementations should&#10; initialize the chip or go into power down mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestPower" ref="0x409699c0" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Requests to power up this bus.</short>
          <long>&#10; Requests to power up this bus. The bus might be already powered&#10; up, in which case the powerOn event will not come.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="powerOff" ref="0x409688a8" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; This event is called when there are no outstanding power requests&#10; and the keepalive timeout value has expired.</short>
          <long>&#10; This event is called when there are no outstanding power requests&#10; and the keepalive timeout value has expired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x409694d8" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Sets the startup and keepalive timeout values in milliseconds.</short>
          <long>&#10; Sets the startup and keepalive timeout values in milliseconds.&#10; Only the largest numbers are remembered, as the bus might not&#10; be operational if one of the chips on it is not operational.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startup" ref="0x40969148" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="keepalive" ref="0x40969378" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="releasePower" ref="0x40969e40" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Releases the power up request.</short>
          <long>&#10; Releases the power up request. You must call this command exactly&#10; the same number of times as you have called requestPower. If other&#10; chips still want to keep the power (e.g. a measurement is in&#10; progress), then powerOff will not be called.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/usr/src/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4096ca58" loc="120:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4096c138" loc="97:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4096faf0" loc="88:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4096c5e8" loc="102:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4096b168" loc="128:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x409586c8" loc="59:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x409586c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40957390" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x4095cd48"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40958bf0" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x4095cd48"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40958df0" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40957010" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40957220" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40973908" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40973188" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40973388" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40973588" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40973798" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40956658" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x4095cd48"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40957eb0" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x4095cd48"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x409560d8" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x409562d8" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x409564e8" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40975840" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x409750c0" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x409752c0" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x409754c0" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x409756d0" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x409acc48" loc="53:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x409a82c8" loc="61:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x409c3588" loc="65:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x409c30c8" loc="59:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x409a7958" loc="56:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x409a63b0" loc="73:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x409a7428" loc="46:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x409a7e68" loc="65:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x409a6988" loc="81:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x409aac30" loc="90:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x409c4158" loc="98:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x409bde78" loc="79:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a9858"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409bdd20" loc="79:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a9858"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x409c0b08" loc="53:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x409bd1e0" loc="62:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a9858"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409bd088" loc="62:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409a9858"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x409bd790" loc="70:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x409a9858"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40a08a08" loc="62:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40a06500" loc="95:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a069e8" loc="105:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x40a19650" loc="46:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x40a36d48" loc="54:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x40a34138" loc="55:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x40a34a68" loc="60:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a34910" loc="60:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x40a36968" loc="52:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x40a320f8" loc="65:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40a2f410" loc="84:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40a32678" loc="67:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40a32520" loc="67:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40a2e1a8" loc="89:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40a361e0" loc="49:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x40a36088" loc="49:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x40a33cd8" loc="64:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40a33b80" loc="64:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40a32b50" loc="68:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x40a34e60" loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40a31478" loc="75:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x40a34540" loc="56:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40a2f010" loc="83:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a31de0" loc="83:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a2fd90" loc="88:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a2fc38" loc="88:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x40a31010" loc="72:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40a36570" loc="50:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x40a333a8" loc="62:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a33250" loc="62:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x40a31a38" loc="81:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a318e0" loc="81:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40a2f858" loc="85:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x40a33790" loc="63:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x40ae4010" loc="61:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40ae7e20" loc="61:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x40ae2010" loc="73:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40ae37e0" loc="73:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40ae39d0" loc="73:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x40ae3be8" loc="73:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x40ae3df0" loc="73:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x40ae47c0" loc="64:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40ae4470" loc="64:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x40ae4660" loc="64:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x40ae2c18" loc="79:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40ae2468" loc="79:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40ae2680" loc="79:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x40ae2898" loc="79:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x40ae2aa8" loc="79:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x40ae33a0" loc="67:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40ae4c00" loc="67:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x40ae4e00" loc="67:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x40ae3030" loc="67:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x40ae3230" loc="67:/usr/src/tinyos/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/usr/src/tinyos/tos/interfaces/Intercept.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x40ad5178" loc="31:/usr/src/tinyos/tos/interfaces/Intercept.nc">
        <documentation loc="16:/usr/src/tinyos/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ad9ba0" loc="31:/usr/src/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40ad9d80" loc="31:/usr/src/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ad5010" loc="31:/usr/src/tinyos/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x40aea5f8" loc="96:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40aea4a0" loc="96:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x40aedc78" loc="83:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x40aea010" loc="95:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x40aed210" loc="71:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40ad3c40" loc="64:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x40ad3ae8" loc="64:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x40aed760" loc="78:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x40aeb4c0" loc="88:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40aeb158" loc="88:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x40aeb360" loc="88:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x40ae91c0" loc="98:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40ae9068" loc="98:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40ad35b8" loc="53:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x40ad3460" loc="53:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x40aeabe8" loc="97:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40aeaa90" loc="97:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x40aebac8" loc="93:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40aeb970" loc="93:/usr/src/tinyos/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/usr/src/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x40aca4b8" loc="7:/usr/src/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x40acaa68" loc="14:/usr/src/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x40aca910" loc="14:/usr/src/tinyos/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x40acd060" loc="64:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40acece0" loc="64:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40aceed8" loc="64:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x40ad2b50" loc="52:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ad27d0" loc="52:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40ad29f0" loc="52:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40acf568" loc="58:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40acf218" loc="58:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40acf408" loc="58:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40ace2a0" loc="61:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40acff20" loc="61:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40ace140" loc="61:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40ad23b0" loc="49:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ad2010" loc="49:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40ad2250" loc="49:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40ad1e18" loc="57:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ad1cc0" loc="57:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40acfb20" loc="60:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40acf9c8" loc="60:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40acdd08" loc="67:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40acd9d0" loc="67:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40acdba8" loc="67:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40ad7b40" loc="46:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ad77a0" loc="46:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40ad79e0" loc="46:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x40acbd08" loc="70:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40acb998" loc="70:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40acbba8" loc="70:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x40ad1168" loc="54:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ad1010" loc="54:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40ace890" loc="63:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ace738" loc="63:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x40acb560" loc="69:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40acb1f0" loc="69:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40acb400" loc="69:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40acd5e8" loc="66:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40acd490" loc="66:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x40ad1888" loc="55:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ad1548" loc="55:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x40ad1728" loc="55:/usr/src/tinyos/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/usr/src/tinyos/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x40ae8c80" loc="46:/usr/src/tinyos/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x407e1c58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x40afdaa0" loc="62:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40afd948" loc="62:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x40afeef0" loc="55:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40afed98" loc="55:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x40afb088" loc="66:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40afdef8" loc="66:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x40afe918" loc="52:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40afe7c0" loc="52:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40afbbb0" loc="72:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40afba58" loc="72:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x40afb648" loc="69:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40afb4f0" loc="69:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x40afd500" loc="58:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40afd3a8" loc="58:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x40afe320" loc="49:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40afe1c8" loc="49:/usr/src/tinyos/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40af5e98" loc="59:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40af5b20" loc="59:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40af5d38" loc="59:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40b13de0" loc="65:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b13a48" loc="65:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40b13c80" loc="65:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40b12978" loc="71:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b12820" loc="71:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40b13570" loc="57:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40af3d78" loc="52:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40af3c20" loc="52:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40aef1d0" loc="35:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40aef1d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40aef338" loc="35:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40aef338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40b09538" loc="63:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40aef338"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b093e0" loc="63:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40b0a010" loc="70:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b09e78" loc="70:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40aef9c0" loc="49:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aef868" loc="49:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b0aad0" loc="78:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40aef338"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b0a760" loc="78:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40b0a970" loc="78:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40aef338"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40b0f970" loc="65:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b0f818" loc="65:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40af0d90" loc="46:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40af09f8" loc="46:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40af0c30" loc="46:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40b0f020" loc="59:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b0eeb0" loc="59:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x40b0e990" loc="53:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b0e5f8" loc="53:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40b0e830" loc="53:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40b0d2e0" loc="71:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b0d188" loc="71:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x40b1fec8" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40b1fec8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40b1d1c0" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b1d068" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b1eb80" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40b1fec8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b1ea28" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40b1e560" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b1e408" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b1d968" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40b1fec8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b1d5f0" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40b1d808" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40b1fec8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b15010" loc="53:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b15010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40b154f0" loc="61:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40b1f010" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40b22a68" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40b22910" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40b1f498" loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40b16010" loc="47:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b19df0" loc="47:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x40b4c168" loc="41:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052b178"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b4c010" loc="41:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40b2e510" loc="37:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052b178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40b2eb10" loc="39:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052b178"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b2e9b8" loc="39:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40b4b170" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052b178"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b4cd38" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40b4b010" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052b178"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40b4c938" loc="43:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052b178"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b4c598" loc="43:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40b4c7d8" loc="43:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052b178"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40b4bc90" loc="49:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052cec8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b4bb38" loc="49:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40b4a418" loc="51:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4052cec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b4a088" loc="51:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40b4a2b8" loc="51:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4052cec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40b4b6e0" loc="47:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b4b588" loc="47:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40b4a858" loc="53:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052cec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40b30d60" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052b178"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40b30800" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052b178"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40b30a18" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b30bf8" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40b2a190" loc="122:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b2bde0" loc="122:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b2a010" loc="122:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40b2b880" loc="110:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40b2c870" loc="83:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b2c718" loc="83:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40b2b288" loc="97:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b2cef8" loc="97:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40b2b128" loc="97:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40b6d090" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x40b57b58" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b57a00" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x40b6f240" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b6f0e8" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x40b6e010" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b6fe48" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40b714b8" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b71360" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40b52700" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b525a8" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40b71c50" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b718e8" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40b71af0" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40b52ec8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b52b60" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40b52d68" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40b6f9c8" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b6f668" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40b6f868" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x40b53b20" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40b4e138" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40b74640" loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b744e8" loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x40b4e7e8" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b4e690" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40b4eee0" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b4ed88" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40b83c30" loc="60:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40b833d0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4051fb60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40b83278" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4051fb60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40b83818" loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40b72d20" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40b820c8" loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4051fb60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x40b5fd60" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b5fc08" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x40b58628" loc="86:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40b58170" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b59d88" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40b58010" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40b5b168" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b5b010" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x40b5b830" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b5b6d8" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40b59190" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b5bdf0" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40b59030" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40b5c298" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40b5ca90" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b5c768" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40b5c930" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40b598a8" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b59750" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40b647a0" loc="131:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b64648" loc="131:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40b65970" loc="120:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b65818" loc="120:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x40b6c818" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b6c4c8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x40b6c6b8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x40b6abf8" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b6aaa0" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40b61c70" loc="156:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b61910" loc="156:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40b61b10" loc="156:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x40b6a560" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b6a408" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x40b64190" loc="125:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b65e28" loc="125:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40b64030" loc="125:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x40b69b98" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b69820" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40b69a38" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x40b61498" loc="151:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b61340" loc="151:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x40b6ce80" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b6cd28" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x40b68b80" loc="99:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b68a28" loc="99:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x40b684d0" loc="94:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b68158" loc="94:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40b68370" loc="94:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x40b873a8" loc="178:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052b178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40b882e0" loc="162:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b88188" loc="162:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40b88ed8" loc="173:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052cec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40b63e20" loc="146:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b63ac0" loc="146:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40b63cc0" loc="146:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x40b692e0" loc="81:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b69188" loc="81:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40b65360" loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b65010" loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x40b65200" loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40b63010" loc="136:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b64c38" loc="136:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40b64e28" loc="136:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40b87980" loc="185:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b87828" loc="185:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40b673b0" loc="105:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b67088" loc="105:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40b67250" loc="105:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x40b6c010" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b6de40" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40b889f0" loc="168:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b88898" loc="168:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40b63640" loc="141:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b634e8" loc="141:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x40b67a60" loc="110:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b67908" loc="110:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40b56840" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b564e0" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40b566e0" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40b56cd8" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40b60930" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b607d8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40b56010" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b60e20" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40b51010" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b54e38" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x40b548f8" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b547a0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x40b51508" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40b51bc0" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b51a68" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x40b7e2e0" loc="70:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b7e188" loc="70:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40b81860" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b81708" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40b80608" loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40b80170" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b81d58" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40b80010" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40b81168" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b81010" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40b80c88" loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b80b30" loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x40b5e688" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40b5e188" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b5e030" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40b5ed68" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b5ec10" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40b5d450" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b5d2f8" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40bbb538" loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40bbbb08" loc="72:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40bb9158" loc="79:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40bbb138" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x40bc7ee8" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bc7d90" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40beb010" loc="64:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bede08" loc="64:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40bed870" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bed518" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40bed710" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40bea010" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bebe30" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40bdf9a0" loc="50:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40bde258" loc="60:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40bdfe10" loc="55:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40bdf4b0" loc="45:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40bdf148" loc="45:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40bdf350" loc="45:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40d1b4f0" loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d1b378" loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40d1fce0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d1fb88" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40d102c8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40d10170" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40d10748" loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40d16810" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40d166b8" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40d16d58" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40d16c00" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40d14220" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40d140c8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40d14ed0" loc="71:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40d14d78" loc="71:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40d148f0" loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40d14798" loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40d135b8" loc="80:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40d13460" loc="80:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40d17b80" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40d17a28" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40d7bb08" loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40d784f0" loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40d78b38" loc="63:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40d789e0" loc="63:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40d77010" loc="69:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40d78070" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40d774c8" loc="74:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40d75540" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40d753e8" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40d741f0" loc="63:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40d75cb8" loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d75b60" loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/usr/src/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40dc11c8" loc="52:/usr/src/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40dc4cf8" loc="46:/usr/src/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/usr/src/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40dd9578" loc="53:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40dd9578"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40dd9bc8" loc="64:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40dd9578"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40dd9a70" loc="64:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40dd9578"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40df3870" loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40df3718" loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40df4540" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40df43e8" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40df4cd8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40df4998" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40df4b78" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40df32e0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40df3188" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40e08538" loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40e083e0" loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40e0bee0" loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40ea1520" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ea1520"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40ea1688" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ea1688"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40ea1ca0" loc="66:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ea1688"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40ea1b48" loc="66:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ea1688"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/usr/src/tinyos/tos/interfaces/Cache.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f773d0" loc="44:/usr/src/tinyos/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f773d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x40f77990" loc="51:/usr/src/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="45:/usr/src/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f773d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40f77838" loc="51:/usr/src/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f773d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40f74460" loc="65:/usr/src/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x40f74010" loc="59:/usr/src/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="53:/usr/src/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f773d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40f77e20" loc="59:/usr/src/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f773d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/usr/src/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x40f7d010" loc="49:/usr/src/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x40f7d3c8" loc="51:/usr/src/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40f80a48" loc="48:/usr/src/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/usr/src/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x40f7d760" loc="52:/usr/src/tinyos/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/usr/src/tinyos/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x41072c68" loc="51:/usr/src/tinyos/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41072498" loc="51:/usr/src/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x41072920" loc="51:/usr/src/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41072b00" loc="51:/usr/src/tinyos/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x4114a168" loc="51:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114a010" loc="51:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x41148280" loc="57:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41149ef8" loc="57:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x41148120" loc="57:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x4114c958" loc="48:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114c5d8" loc="48:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x4114c7f8" loc="48:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x41149960" loc="56:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41149808" loc="56:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x4114c010" loc="47:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114dc38" loc="47:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x4114de58" loc="47:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x41149218" loc="54:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114ae90" loc="54:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x411490b8" loc="54:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x4114a8d8" loc="53:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114a780" loc="53:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x4114d680" loc="46:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4114d300" loc="46:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x4114d520" loc="46:/usr/src/tinyos/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40aba480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
