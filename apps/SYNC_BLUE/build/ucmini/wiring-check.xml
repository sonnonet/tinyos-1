<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404252a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4047e8b0"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4047e8b0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4047d778"/></to>
    </wire>
    <wire loc="27:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x4042da30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40422bb0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40422bb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40810e88"/></to>
    </wire>
    <wire loc="28:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40457380"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ed7280"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ed7280"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x412418a8"/></to>
    </wire>
    <wire loc="29:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40460470"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f2d758"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40f2d758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4080bf10"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40467210"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d0d930"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d0d930"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40d098e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:OscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x404638e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40da65a8"/></to>
    </wire>
    <wire loc="40:/usr/src/tinyos/tos/platforms/ucmini/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40da65a8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x40da47e0"/></to>
    </wire>
    <wire loc="32:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40465488"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407c7a20"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407c7a20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407e2470"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411db8b0"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40db9ce0"/></to>
    </wire>
    <wire loc="113:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40c16178"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40afdb40"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x410ce820"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a55178"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410ae708"/></to>
    </wire>
    <wire loc="96:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41065d08"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x406e9458"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x406e6f18"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4069abc8"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405b5b58"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40532860"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4047db10"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403f9738"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407fa100"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4120f330"/></to>
    </wire>
    <wire loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407fa100"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40c17af0"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407fa100"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4047bcc8"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4047bcc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40480010"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x407fa508"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404825b8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4049cad0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x40482d38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407fe450"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404807c0"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x40482d38"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x40480400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40484be0"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40484be0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40487db0"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x40480b90"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40488208"/></to>
    </wire>
    <wire loc="40:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x40488208"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40488a48"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40487010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4119bcd0"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40487010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4117c698"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40487010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b63088"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40487010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4074c010"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40490628"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x40487010"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404909d8"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x404873c0"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x40490da0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x40491478"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40490260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4049c720"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Toggle" scoped="" ref="0x404aa010"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x404b0768"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x404b0768"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x404cac08"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x404b12f0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404c08e0"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404c08e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f4a70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x404b1cf8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40523438"/></to>
    </wire>
    <wire loc="145:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404cac08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fbaf8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404d52f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4050a5c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404cd830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fbaf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404d3ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f6440"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404d80a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40501c68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x404df830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4050a5c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404c14b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404dc190"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404cec08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40501c68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x404c50a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f02b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404cb750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fbaf8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404d0ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f6440"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x404b8210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404dc190"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404be750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f4a70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x404c4ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f02b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404c9670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fbaf8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404d7ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40501c68"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404e03d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4050a5c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404c8a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f6440"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x404b60a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404dc190"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404bc750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f4a70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404d5ee8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4050a5c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x404c7c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f02b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404cc2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fbaf8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404d18e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f6440"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404d8a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40501c68"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404c1ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404dc190"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404bf2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f4a70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404c5a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f02b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404ca210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fbaf8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404cf750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f6440"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x404b8c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404dc190"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404bd210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f4a70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404c38e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f02b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404d68e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40501c68"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404c2ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fbaf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404d34b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f6440"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404d9670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40501c68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404e0dc8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4050a5c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404b6a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404dc190"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404c7210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f4a70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404ce210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40501c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404c6670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f02b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404ccce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fbaf8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404d02f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f6440"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404d74b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40501c68"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404bb770"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404dc190"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404bfce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f4a70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404c44b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f02b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404d4900"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4050a5c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404c80a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f6440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404c22f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f02b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404b7670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404dc190"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404bdc88"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404f4a70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x40530708"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x40540758"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x40540758"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x4053c010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x40530dc8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40540d90"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40540d90"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x404bdc88"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405289c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405640e0"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405640e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405b5ef0"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x4052fab0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x40531388"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x4053c010"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x4053a9b8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40556eb8"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40542428"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405b5ef0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405cb4c0"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405649b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40561dc8"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4056b388"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405a74d0"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40563398"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4056e568"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057d308"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a7b68"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40572140"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4056e890"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405b5b58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405cb128"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405bcc50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4057d840"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x405a60c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405b2dd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x405a6778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405b27c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x405bc748"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x4072eb80"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x405b2dd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40674bc8"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405b27c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40674808"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x406733f8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x405bc748"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405cfcf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405bcc50"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x406723f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405bcc50"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4068c978"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405bcc50"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x406738e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405d32a8"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40673db8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x405c6ef8"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x405cf468"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40684ca8"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x405ded38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40683d98"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40683d98"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406a1b00"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4068c0f0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x406922b8"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406922b8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x406a2490"/></to>
    </wire>
    <wire loc="332:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x4060ace8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x405e0168"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x4060b578"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40607998"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x406713d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40671808"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406a10f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406a2010"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406a2010"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406c4330"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406a2490"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x406c4748"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x406a1b00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4069af00"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4069bcf0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40690818"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40690818"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40716320"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406c2530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4069bcf0"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x406c3010"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x406d7110"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x406d7110"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x406e98a8"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x406c3448"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x406d7620"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x406d7620"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x406e9dd8"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x406c3880"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x406d7b18"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x406d7b18"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x406e6350"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x406d5250"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x406e5dc8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x406d67a8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x406e5380"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x406d6cb8"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x406e58b0"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x406e4dc8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404825b8"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406e3578"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406e3578"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40e8e010"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40c37780"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40b92568"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407726f8"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406e49f8"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4072b5f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4072d328"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4072d328"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40740908"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4073fb40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4073cb68"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4073cb68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4074c448"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x407525f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4074e878"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4074e878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4076aa80"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4076b1d8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407756a8"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4075bf08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40766b98"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4075bf08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4077bf10"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4075bf08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40777320"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40772ae8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407c5a38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407c7a20"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407c5010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405b2dd0"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407c56f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405b27c8"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x405bc748"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x407c8a28"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x407db218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407fe450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407e2128"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407e1480"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x407e4c20"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407e4c20"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x404bc750"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407e1e68"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40800660"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40800660"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x404c7210"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407e0860"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x407ff060"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407ff060"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x404bc750"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x407df2e0"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x407ffa48"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x407ffa48"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x404c7210"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403f8010"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403f8c70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403324a0"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40810e88"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4082ad70"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40807d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40825e68"/></to>
    </wire>
    <wire loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40825e68"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4083fe10"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4080b550"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40826770"/></to>
    </wire>
    <wire loc="82:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40826770"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40841710"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4080a5c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x408257f0"/></to>
    </wire>
    <wire loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x408257f0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4083f798"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408080a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40823010"/></to>
    </wire>
    <wire loc="90:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40823010"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x4083dd28"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4081a130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40822978"/></to>
    </wire>
    <wire loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40822978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4084c7b8"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4080bf10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40825158"/></to>
    </wire>
    <wire loc="83:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40825158"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4083f100"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x408137c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40830750"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40830750"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4085a750"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408064d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408223f0"/></to>
    </wire>
    <wire loc="93:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408223f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4084c230"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40816a40"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40821010"/></to>
    </wire>
    <wire loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40821010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4084cdd8"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40808790"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40823700"/></to>
    </wire>
    <wire loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40823700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4083d010"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408111a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4082b130"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4082b130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40857288"/></to>
    </wire>
    <wire loc="208:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4082ad70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a74ba8"/></to>
    </wire>
    <wire loc="100:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x408338a0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x4085c390"/></to>
    </wire>
    <wire loc="297:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4085c390"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40c27618"/></to>
    </wire>
    <wire loc="259:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40857288"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b2d480"/></to>
    </wire>
    <wire loc="125:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4083fe10"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40953c28"/></to>
    </wire>
    <wire loc="127:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x4083dd28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409375b0"/></to>
    </wire>
    <wire loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40841710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40937ce0"/></to>
    </wire>
    <wire loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4083f798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40953868"/></to>
    </wire>
    <wire loc="99:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40834530"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40844010"/></to>
    </wire>
    <wire loc="295:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40844010"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40bff288"/></to>
    </wire>
    <wire loc="209:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4084c7b8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40a8b230"/></to>
    </wire>
    <wire loc="123:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4083f100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40953488"/></to>
    </wire>
    <wire loc="258:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4085a750"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40bdeca8"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4082dba0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4085bb78"/></to>
    </wire>
    <wire loc="299:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4085bb78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c22508"/></to>
    </wire>
    <wire loc="98:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4081f0e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40846c40"/></to>
    </wire>
    <wire loc="296:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40846c40"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c25d98"/></to>
    </wire>
    <wire loc="240:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4084c230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40aed010"/></to>
    </wire>
    <wire loc="87:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40824578"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x4083e538"/></to>
    </wire>
    <wire loc="129:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x4083e538"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40952030"/></to>
    </wire>
    <wire loc="188:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4084cdd8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40a5c568"/></to>
    </wire>
    <wire loc="126:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4083d010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40938990"/></to>
    </wire>
    <wire loc="96:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4081e950"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40846550"/></to>
    </wire>
    <wire loc="217:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40846550"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40a86df8"/></to>
    </wire>
    <wire loc="101:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4082e978"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4085b680"/></to>
    </wire>
    <wire loc="298:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4085b680"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c22010"/></to>
    </wire>
    <wire loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40824c58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x4083ec18"/></to>
    </wire>
    <wire loc="130:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x4083ec18"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40952410"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a74ba8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40a8b838"/></to>
    </wire>
    <wire loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40c27618"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40c3c8a0"/></to>
    </wire>
    <wire loc="161:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x4083b198"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x409a9488"/></to>
    </wire>
    <wire loc="149:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x4084d8f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4095e420"/></to>
    </wire>
    <wire loc="98:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4095e420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41062068"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40953c28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4101f868"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40937ce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41020960"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40953868"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4101f4a8"/></to>
    </wire>
    <wire loc="162:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40848e80"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40a37170"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40a37170"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x4109e6b0"/></to>
    </wire>
    <wire loc="163:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x4084f9f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409833b0"/></to>
    </wire>
    <wire loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40bff288"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40c14538"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40a8b230"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x410d6e98"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x409375b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41020230"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40953488"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4101f0c8"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40bdeca8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4113bca8"/></to>
    </wire>
    <wire loc="81:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c22508"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40cab110"/></to>
    </wire>
    <wire loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c25d98"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c380e0"/></to>
    </wire>
    <wire loc="159:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40850558"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40983a48"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40952030"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x4101fc48"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40a5c568"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40a78910"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40a86df8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x410cd3a8"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40938990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x410225f0"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b2d480"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4113c4f0"/></to>
    </wire>
    <wire loc="160:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40850ce8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x409a9170"/></to>
    </wire>
    <wire loc="96:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c22010"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c373c0"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40952410"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x4101e068"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4087b098"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a17658"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a17658"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x41069bc0"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40894670"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x408b53d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x4086f170"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40bdeca8"/></to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x40890798"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c008c8"/></to>
    </wire>
    <wire loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c008c8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c15b68"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x408b5c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40c20010"/></to>
    </wire>
    <wire loc="101:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40c20010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40cd21f8"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40951768"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40870610"/></to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40952f20"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x4094c538"/></to>
    </wire>
    <wire loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40951430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x409c2748"/></to>
    </wire>
    <wire loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40952788"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x409c2a80"/></to>
    </wire>
    <wire loc="138:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4094b010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4095e420"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4094ca60"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x409c2250"/></to>
    </wire>
    <wire loc="154:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x409a97d0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a17658"/></to>
    </wire>
    <wire loc="155:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409a79e8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x409a3228"/></to>
    </wire>
    <wire loc="156:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409a7ee0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x409a3720"/></to>
    </wire>
    <wire loc="157:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409a7250"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x409a3a58"/></to>
    </wire>
    <wire loc="170:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409c4280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a32388"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a32388"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410b1d88"/></to>
    </wire>
    <wire loc="171:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409c4778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a5c250"/></to>
    </wire>
    <wire loc="114:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a5c250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a79938"/></to>
    </wire>
    <wire loc="172:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409c4ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a37b88"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a37b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4109d150"/></to>
    </wire>
    <wire loc="177:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a35368"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a5cc00"/></to>
    </wire>
    <wire loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a5cc00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a79c70"/></to>
    </wire>
    <wire loc="182:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a5f668"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40860430"/></to>
    </wire>
    <wire loc="183:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a32ca8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a5dd38"/></to>
    </wire>
    <wire loc="113:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a5dd38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a79440"/></to>
    </wire>
    <wire loc="189:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a783f8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40aed010"/></to>
    </wire>
    <wire loc="190:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a79440"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a73250"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a73250"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a8be10"/></to>
    </wire>
    <wire loc="191:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a79938"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a73748"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a73748"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a8a330"/></to>
    </wire>
    <wire loc="192:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a79c70"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a73a60"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a73a60"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a8a668"/></to>
    </wire>
    <wire loc="204:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40a8b838"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a86010"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a86010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x410ce248"/></to>
    </wire>
    <wire loc="205:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a8be10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a865e8"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a865e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410ceb58"/></to>
    </wire>
    <wire loc="206:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a8a330"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a86ae0"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a86ae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x410cd090"/></to>
    </wire>
    <wire loc="207:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a8a668"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40bdb330"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40bdb330"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41138330"/></to>
    </wire>
    <wire loc="214:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ab5ab8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ad69b8"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ad69b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x410ea1e8"/></to>
    </wire>
    <wire loc="215:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ab4010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a32860"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a32860"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x410ae310"/></to>
    </wire>
    <wire loc="216:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40ab5340"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40bebde8"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40bebde8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40c11c40"/></to>
    </wire>
    <wire loc="221:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a5f250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ad6e90"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ad6e90"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x410ea6c0"/></to>
    </wire>
    <wire loc="230:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40afa330"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40877198"/></to>
    </wire>
    <wire loc="231:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ad52f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40aee6b8"/></to>
    </wire>
    <wire loc="232:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ad57e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40aeeb90"/></to>
    </wire>
    <wire loc="233:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40ad5be0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x408b53d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="238:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40b21e88"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40bd68d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="239:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40aede28"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x408b53d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="241:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b21530"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40865cf8"/></to>
    </wire>
    <wire loc="242:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40aed538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b117e8"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b117e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b336a0"/></to>
    </wire>
    <wire loc="243:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40aeda30"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b11cc0"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b11cc0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b33b98"/></to>
    </wire>
    <wire loc="248:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b32bc0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40863588"/></to>
    </wire>
    <wire loc="249:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b336a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40be95b0"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40be95b0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c104f0"/></to>
    </wire>
    <wire loc="250:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b33b98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40be9a88"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40be9a88"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c109e8"/></to>
    </wire>
    <wire loc="251:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40b32010"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40c00460"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40c00460"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40c15700"/></to>
    </wire>
    <wire loc="256:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40bdbb88"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c22508"/></to>
    </wire>
    <wire loc="257:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40bda430"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40bd6ea0"/></to>
    </wire>
    <wire loc="260:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40bdabc8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40bd68d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="265:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40bd56b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c008c8"/></to>
    </wire>
    <wire loc="275:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c0f9e8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40863588"/></to>
    </wire>
    <wire loc="276:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c104f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c0baa0"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40c0baa0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c079c8"/></to>
    </wire>
    <wire loc="277:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c109e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c00010"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40c00010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c152b0"/></to>
    </wire>
    <wire loc="278:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40c11c40"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40c0b328"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40c0b328"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40c071b0"/></to>
    </wire>
    <wire loc="287:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40c071b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40c03250"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40c03250"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40c164f8"/></to>
    </wire>
    <wire loc="288:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c079c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c03a28"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40c03a28"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40c16cd0"/></to>
    </wire>
    <wire loc="293:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c1fac0"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x4086ab40"/></to>
    </wire>
    <wire loc="294:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c1e3a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40bdeca8"/></to>
    </wire>
    <wire loc="301:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40c1cb60"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40bd68d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="302:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40c1b230"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40bd68d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="303:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40c1b8f0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40bd68d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x408b53d0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40ff5250"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40ff5a48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x408b5c88"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40ff3498"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x408d1e18"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4101dca0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40942010"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4101e3e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40952788"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4101eb78"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40952f20"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4101d090"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40951430"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4101d3c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40951768"/></to>
    </wire>
    <wire loc="99:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4095eb60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410627a8"/></to>
    </wire>
    <wire loc="100:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40986010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41062bb0"/></to>
    </wire>
    <wire loc="101:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41060088"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x409864c0"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x410604b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41063060"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x41060aa8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4109d8f8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40942010"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4109ded0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a35368"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x410ad9c0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40a39540"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40a39540"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40a55510"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410ac070"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410ab4c0"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410ab4c0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40a53010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x410aea70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a32ca8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x410ad010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a5f250"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x410ad408"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a5f668"/></to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40a77010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a783f8"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x410cd8b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40ab5340"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x410cc040"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x408d1e18"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x410cc5f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ab5ab8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x410ccad0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ab4010"/></to>
    </wire>
    <wire loc="189:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x410cb350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x410cb788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x410ccf08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x410eab08"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40ad52f0"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x410e9ed8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40afa330"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x410e9030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40ad57e8"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x410e9428"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40ad5be0"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x410e9ac0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40afbe98"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40afbe98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40af9948"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x410e74e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40afb5d8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40af9088"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ada330"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40afdb40"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b1b2b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40b34060"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40b35150"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40b32010"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40b11070"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40b34e68"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b35548"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b32428"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40b35ce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b32bc0"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40b1bd40"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40b34b30"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40b1b868"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40b34638"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41136430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40bda430"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x41137200"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40bdbb88"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x41137b08"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b4db18"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40b4db18"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b67940"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x41138af8"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x40bdabc8"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40be0360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b4ab18"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b4ab18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b6b108"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40b6a380"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b65128"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b65128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b634c0"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40b62658"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b5e828"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b5e828"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b7b8b0"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40b7d010"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40b955a8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b81c28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40b769c8"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b81c28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40b73e10"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40b81c28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40b971a0"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40b92958"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40beb040"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c12d90"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40be9e80"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40c10e00"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c12290"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c0f250"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40c12a28"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c0f9e8"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40bebad0"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40c11908"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40beb5f8"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40c11410"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c0c528"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c08378"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40c09408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40c06300"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c09800"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c06718"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40c08010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c06eb0"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40c09010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c07ec0"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40c0b010"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40c08e48"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40c0cae0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40c08950"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40cd21f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4117cad0"/></to>
    </wire>
    <wire loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c269e8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c3bc90"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40cab110"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40caa538"/></to>
    </wire>
    <wire loc="83:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c305c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c1fac0"/></to>
    </wire>
    <wire loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40c30cb8"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40c1cb60"/></to>
    </wire>
    <wire loc="89:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40c2f3f0"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40c1b230"/></to>
    </wire>
    <wire loc="92:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40c2fab0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40c1b8f0"/></to>
    </wire>
    <wire loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c2e2c8"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c1e3a0"/></to>
    </wire>
    <wire loc="98:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40c35ac8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40cab110"/></to>
    </wire>
    <wire loc="99:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40c34530"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40b7d010"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40c2d988"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x408d1e18"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40c35010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40cbd340"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40cbd340"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40cbb950"/></to>
    </wire>
    <wire loc="116:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40c2b010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40cba430"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40cb0320"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40cae5f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4073cb68"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40caaed0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b65128"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4117a558"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b5e828"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x41177550"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b81c28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40d098e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d75338"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40d4b398"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d31750"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40d31750"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x411a3ad8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40d7e688"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d340a0"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x4119f870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x411a5190"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x411a5190"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41199130"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x411a1630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b4ab18"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x41198b48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b5e828"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x41196b40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40b81c28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40d4ad08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40d7b948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x40da47e0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x40d9d388"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x40da1510"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x40d9b0b8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d99c38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dc9010"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40dc9010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40d098e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40d92c70"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40dc5500"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40dc5500"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40df0e60"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40dbfef8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dc1430"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40dc1430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40df0718"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40db95f8"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40dc1b80"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40dc1b80"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40ec46a0"/></to>
    </wire>
    <wire loc="153:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <from><interface-ref name="signalReadDone" scoped="" ref="0x40daa918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x40dd3e80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40ec46a0"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40ec0e00"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40df0718"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40de5260"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40df0e60"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40de5d98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40de5260"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e320a8"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40de5d98"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40e32898"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x40e44860"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ddf398"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ddf398"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411d8dc8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40e43010"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40e3d7a0"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x40e41eb8"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x40e9b660"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40e34d08"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40e3d2f8"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e0b468"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ddfee0"/></to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ddfee0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411d7970"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40e9b9b8"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40e967d8"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40e967d8"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40e92858"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x40e99030"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ed4520"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x40e98010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40ed4520"/></to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40ddfad8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x411d7568"/></to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40e0e5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411d6030"/></to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411d64f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40e0ea50"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x411d6918"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x411dbbe8"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x411d5e20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x40e8e418"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x404c2ce8"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x40e8ee18"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x404cd830"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40e8c7f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40ec0e00"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x41212010"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40ebf4f0"/></from>
      <to><interface-ref name="PortF1" scoped="" ref="0x404cec08"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x41210928"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40ebf4f0"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41212758"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4120e4c8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4120e4c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40d098e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x412418a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41238440"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ed7918"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4123e010"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4123e010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408080a0"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f2f010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4123e6a8"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4123e6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40808790"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40f2fc08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4123d330"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4123d330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408064d0"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41238b08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ef74c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41237230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40808790"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40ef74c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f393d8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40f39b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4080b550"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f38230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40808790"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f38e08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408080a0"/></to>
    </wire>
    <wire loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x40f37510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x40f37948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f2da70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408080a0"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f2c150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40808790"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="19:OscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/usr/src/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc" safe="">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/usr/src/tinyos/tos/system/NoPinC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/usr/src/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="41:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Jan Beutel&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc" safe="">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="RealMainP" loc="56:/usr/src/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/usr/src/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/usr/src/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="26:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ActiveMessageC" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="39(RFA1RadioC.RadioAlarmC.RadioAlarmP):/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/usr/src/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/usr/src/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/usr/src/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/usr/src/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/usr/src/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC.CounterMicro16C" loc="54(BusyWaitMicroC.CounterMicro16C):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.TimerMilliC" loc="44(OscilloscopeAppC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor" loc="35(OscilloscopeAppC.Sensor):/usr/src/tinyos/tos/platforms/ucmini/DemoSensorC.nc">
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Sht21C" loc="35:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <configuration/>
    </component>
    <component qname="Sht21P" loc="36:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <module/>
    </component>
    <component qname="Sht21C.TimerMilliC" loc="44(Sht21C.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSht21C" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <configuration/>
    </component>
    <component qname="HplSht21C.I2CBus" loc="43(HplSht21C.I2CBus):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/usr/src/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="I2CBusPowerManagerC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <configuration/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC" loc="35(I2CBusPowerManagerC.BusPowerManagerC):/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <instance number="0">
        <component-ref qname="BusPowerManagerC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP" loc="35(I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP):/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <instance number="0">
        <component-ref qname="BusPowerManagerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC" loc="44(I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="47(OscilloscopeAppC.AMSenderC):/usr/src/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC" loc="47(OscilloscopeAppC.AMSenderC.SenderC):/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="43(OscilloscopeAppC.AMReceiverC):/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x404dd558" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404dd780" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404dd9a8" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/usr/src/tinyos/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/usr/src/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407178e8" loc="55:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407178e8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40717d48" loc="56:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40717d48"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4072a010" loc="57:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4072a010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4072a480" loc="58:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4072a480"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4072a6e8" loc="59:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x4072ab70" loc="60:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x4072ab70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x407386f8" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407386f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40738b28" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40738b28"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40738d18" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4095d4c0" loc="83:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40954228" loc="42:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/usr/src/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b70780" loc="46:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b70780"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40cbc710" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40cbc710"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40cbcb40" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40cbcb40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40ccf970" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ccf970"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40ccfda0" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ccfda0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40ccc010" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x40ccc218" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/usr/src/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformAlarmC" loc="51:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40d2af00" loc="52:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40d2af00"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40d27380" loc="53:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40d27380"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40d275e8" loc="54:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40d275e8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40d27a58" loc="55:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40d27a58"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40d27cc0" loc="56:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40d36b90" loc="46:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40d36b90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40d77620" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40d77620"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40d77800" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/DemoSensorC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/usr/src/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40dde088" loc="89:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/usr/src/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40e09d10" loc="52:/usr/src/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusPowerManagerC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc" abstract="">
      <parameters>
        <constant name="highIsOn" ref="0x40ec1690" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
          <component-ref qname="BusPowerManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
        <constant name="initPin" ref="0x40ec1880" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
          <component-ref qname="BusPowerManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusPowerManagerP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc" abstract="">
      <parameters>
        <constant name="highIsOn" ref="0x40ebd340" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
          <component-ref qname="BusPowerManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
        <constant name="initPin" ref="0x40ebd530" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
          <component-ref qname="BusPowerManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/usr/src/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40da5ad0" loc="47:/usr/src/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/usr/src/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40f0a758" loc="47:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/usr/src/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40f032c8" loc="43:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/usr/src/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40ef69c8" loc="45:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/usr/src/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40f2a010" loc="43:/usr/src/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x404252a0" loc="22:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404252a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40425478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40457380" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40457380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40457558"/>
        <function-ref name="getPayload" scoped="" ref="0x40457638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40457718"/>
        <function-ref name="cancel" scoped="" ref="0x404577f8"/>
        <function-ref name="sendDone" scoped="" ref="0x404578d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x4042da30" loc="23:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x4042da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4042dc08"/>
        <function-ref name="stopDone" scoped="" ref="0x4042dce8"/>
        <function-ref name="start" scoped="" ref="0x4042ddc8"/>
        <function-ref name="stop" scoped="" ref="0x4042dea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x404638e0" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x404638e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40463f08"/>
        <function-ref name="readDone" scoped="" ref="0x40465180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40460470" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40460470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40460648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40465488" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40465488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40465660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40465740"/>
        <function-ref name="led1On" scoped="" ref="0x40465820"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40465900"/>
        <function-ref name="led3Off" scoped="" ref="0x404659e0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40465ac0"/>
        <function-ref name="get" scoped="" ref="0x40465ba0"/>
        <function-ref name="led1Off" scoped="" ref="0x40465c80"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40465d60"/>
        <function-ref name="led3On" scoped="" ref="0x40465e40"/>
        <function-ref name="led0On" scoped="" ref="0x40465f20"/>
        <function-ref name="led2Off" scoped="" ref="0x40462018"/>
        <function-ref name="led2On" scoped="" ref="0x404620f8"/>
        <function-ref name="set" scoped="" ref="0x40462258"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40467210" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40467210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4042cd58"/>
        <function-ref name="fired" scoped="" ref="0x4042c010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4042c718"/>
        <function-ref name="isOneShot" scoped="" ref="0x4042c4c0"/>
        <function-ref name="getdt" scoped="" ref="0x40466268"/>
        <function-ref name="gett0" scoped="" ref="0x40466010"/>
        <function-ref name="isRunning" scoped="" ref="0x4042c268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40467838"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4042ca38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40467ab8"/>
        <function-ref name="stop" scoped="" ref="0x40467d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4047b4f0" loc="58:/usr/src/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4047b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047b6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4047e8b0" loc="57:/usr/src/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4047e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4047ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4047bcc8" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4047bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047bea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404825b8" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404825b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40482790"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40482870"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40482950"/>
        <function-ref name="actualMicro" scoped="" ref="0x40482a30"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40482b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x40482d38" loc="43:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x40482d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40482f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40480010" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40480010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404801e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x40480b90" loc="45:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x40480b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40480d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404807c0" loc="44:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404807c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40480998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x40480400" loc="43:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x40480400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404805d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40484be0" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40484be0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40484db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404873c0" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404873c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40487598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40487010" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40487010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404871e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x40490da0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x40490da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40487db0" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40487db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40490010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404909d8" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404909d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40490bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40490260" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40490260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40490438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40490628" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40490628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40490800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4049c720" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4049c720"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049c8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4049cad0" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4049cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4049cca8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4049cd88"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4049ce68"/>
        <function-ref name="actualMicro" scoped="" ref="0x4049b010"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4049b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x40491478" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x40491478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40491650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40488208" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40488208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404883e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Toggle" ref="0x404aa010" loc="38:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Toggle" scoped="" ref="0x404aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aa1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404aa2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404aa3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa488"/>
        <function-ref name="get" scoped="" ref="0x404aa568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa648"/>
        <function-ref name="set" scoped="" ref="0x404aa728"/>
        <function-ref name="clr" scoped="" ref="0x404aa808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40488a48" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40488a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40488c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x404b12f0" loc="42:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x404b12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b14c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b15a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b1688"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1768"/>
        <function-ref name="get" scoped="" ref="0x404b1848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1928"/>
        <function-ref name="set" scoped="" ref="0x404b1a08"/>
        <function-ref name="clr" scoped="" ref="0x404b1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x404b1cf8" loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x404b1cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1ed0"/>
        <function-ref name="isInput" scoped="" ref="0x404b0010"/>
        <function-ref name="toggle" scoped="" ref="0x404b00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b01d0"/>
        <function-ref name="get" scoped="" ref="0x404b02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0390"/>
        <function-ref name="set" scoped="" ref="0x404b0470"/>
        <function-ref name="clr" scoped="" ref="0x404b0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x404b0768" loc="45:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x404b0768"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0940"/>
        <function-ref name="isInput" scoped="" ref="0x404b0a20"/>
        <function-ref name="toggle" scoped="" ref="0x404b0b00"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0be0"/>
        <function-ref name="get" scoped="" ref="0x404b0cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0da0"/>
        <function-ref name="set" scoped="" ref="0x404b0e80"/>
        <function-ref name="clr" scoped="" ref="0x404bb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404d52f0" loc="93:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404d52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d56c8"/>
        <function-ref name="isInput" scoped="" ref="0x404d57a8"/>
        <function-ref name="toggle" scoped="" ref="0x404d5888"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5968"/>
        <function-ref name="get" scoped="" ref="0x404d5a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5b28"/>
        <function-ref name="set" scoped="" ref="0x404d5c08"/>
        <function-ref name="clr" scoped="" ref="0x404d5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404cd830" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404cd830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cda08"/>
        <function-ref name="isInput" scoped="" ref="0x404cdae8"/>
        <function-ref name="toggle" scoped="" ref="0x404cdbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cdca8"/>
        <function-ref name="get" scoped="" ref="0x404cdd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cde68"/>
        <function-ref name="set" scoped="" ref="0x404cc010"/>
        <function-ref name="clr" scoped="" ref="0x404cc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404d3ea8" loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404d3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d10c0"/>
        <function-ref name="isInput" scoped="" ref="0x404d11a0"/>
        <function-ref name="toggle" scoped="" ref="0x404d1280"/>
        <function-ref name="isOutput" scoped="" ref="0x404d1360"/>
        <function-ref name="get" scoped="" ref="0x404d1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1520"/>
        <function-ref name="set" scoped="" ref="0x404d1600"/>
        <function-ref name="clr" scoped="" ref="0x404d16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404d80a0" loc="87:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404d80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d8278"/>
        <function-ref name="isInput" scoped="" ref="0x404d8358"/>
        <function-ref name="toggle" scoped="" ref="0x404d8438"/>
        <function-ref name="isOutput" scoped="" ref="0x404d8518"/>
        <function-ref name="get" scoped="" ref="0x404d85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d86d8"/>
        <function-ref name="set" scoped="" ref="0x404d87b8"/>
        <function-ref name="clr" scoped="" ref="0x404d8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x404df830" loc="98:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x404df830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dfa08"/>
        <function-ref name="isInput" scoped="" ref="0x404dfae8"/>
        <function-ref name="toggle" scoped="" ref="0x404dfbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404dfca8"/>
        <function-ref name="get" scoped="" ref="0x404dfd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dfe68"/>
        <function-ref name="set" scoped="" ref="0x404de010"/>
        <function-ref name="clr" scoped="" ref="0x404de0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404c14b0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404c14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1688"/>
        <function-ref name="isInput" scoped="" ref="0x404c1768"/>
        <function-ref name="toggle" scoped="" ref="0x404c1848"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1928"/>
        <function-ref name="get" scoped="" ref="0x404c1a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1ae8"/>
        <function-ref name="set" scoped="" ref="0x404c1bc8"/>
        <function-ref name="clr" scoped="" ref="0x404c1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404cec08" loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404cec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cede0"/>
        <function-ref name="isInput" scoped="" ref="0x404ceec0"/>
        <function-ref name="toggle" scoped="" ref="0x404d9010"/>
        <function-ref name="isOutput" scoped="" ref="0x404d90f0"/>
        <function-ref name="get" scoped="" ref="0x404d91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d92b0"/>
        <function-ref name="set" scoped="" ref="0x404d9390"/>
        <function-ref name="clr" scoped="" ref="0x404d9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404c08e0" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404c08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404c0b98"/>
        <function-ref name="toggle" scoped="" ref="0x404c0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0d58"/>
        <function-ref name="get" scoped="" ref="0x404c0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0f18"/>
        <function-ref name="set" scoped="" ref="0x404bf010"/>
        <function-ref name="clr" scoped="" ref="0x404bf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x404c50a0" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x404c50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c5278"/>
        <function-ref name="isInput" scoped="" ref="0x404c5358"/>
        <function-ref name="toggle" scoped="" ref="0x404c5438"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5518"/>
        <function-ref name="get" scoped="" ref="0x404c55f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c56d8"/>
        <function-ref name="set" scoped="" ref="0x404c57b8"/>
        <function-ref name="clr" scoped="" ref="0x404c5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404cb750" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404cb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cb928"/>
        <function-ref name="isInput" scoped="" ref="0x404cba08"/>
        <function-ref name="toggle" scoped="" ref="0x404cbae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cbbc8"/>
        <function-ref name="get" scoped="" ref="0x404cbca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cbd88"/>
        <function-ref name="set" scoped="" ref="0x404cbe68"/>
        <function-ref name="clr" scoped="" ref="0x404ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404d0ce8" loc="81:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404d0ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d0ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404cf010"/>
        <function-ref name="toggle" scoped="" ref="0x404cf0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf1d0"/>
        <function-ref name="get" scoped="" ref="0x404cf2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf390"/>
        <function-ref name="set" scoped="" ref="0x404cf470"/>
        <function-ref name="clr" scoped="" ref="0x404cf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x404b8210" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x404b8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b83e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b84c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8688"/>
        <function-ref name="get" scoped="" ref="0x404b8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8848"/>
        <function-ref name="set" scoped="" ref="0x404b8928"/>
        <function-ref name="clr" scoped="" ref="0x404b8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404be750" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404be750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be928"/>
        <function-ref name="isInput" scoped="" ref="0x404bea08"/>
        <function-ref name="toggle" scoped="" ref="0x404beae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bebc8"/>
        <function-ref name="get" scoped="" ref="0x404beca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bed88"/>
        <function-ref name="set" scoped="" ref="0x404bee68"/>
        <function-ref name="clr" scoped="" ref="0x404bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x404c4ea8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x404c4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c30c0"/>
        <function-ref name="isInput" scoped="" ref="0x404c31a0"/>
        <function-ref name="toggle" scoped="" ref="0x404c3280"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3360"/>
        <function-ref name="get" scoped="" ref="0x404c3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c3520"/>
        <function-ref name="set" scoped="" ref="0x404c3600"/>
        <function-ref name="clr" scoped="" ref="0x404c36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404c9670" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404c9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c9848"/>
        <function-ref name="isInput" scoped="" ref="0x404c9928"/>
        <function-ref name="toggle" scoped="" ref="0x404c9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404c9ae8"/>
        <function-ref name="get" scoped="" ref="0x404c9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c9ca8"/>
        <function-ref name="set" scoped="" ref="0x404c9d88"/>
        <function-ref name="clr" scoped="" ref="0x404c9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404d7ea8" loc="90:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404d7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d60c0"/>
        <function-ref name="isInput" scoped="" ref="0x404d61a0"/>
        <function-ref name="toggle" scoped="" ref="0x404d6280"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6360"/>
        <function-ref name="get" scoped="" ref="0x404d6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6520"/>
        <function-ref name="set" scoped="" ref="0x404d6600"/>
        <function-ref name="clr" scoped="" ref="0x404d66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404e03d0" loc="96:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404e03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e05a8"/>
        <function-ref name="isInput" scoped="" ref="0x404e0688"/>
        <function-ref name="toggle" scoped="" ref="0x404e0768"/>
        <function-ref name="isOutput" scoped="" ref="0x404e0848"/>
        <function-ref name="get" scoped="" ref="0x404e0928"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e0a08"/>
        <function-ref name="set" scoped="" ref="0x404e0ae8"/>
        <function-ref name="clr" scoped="" ref="0x404e0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404c8a98" loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404c8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c8c70"/>
        <function-ref name="isInput" scoped="" ref="0x404c8d50"/>
        <function-ref name="toggle" scoped="" ref="0x404c8e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8f10"/>
        <function-ref name="get" scoped="" ref="0x404d3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d30f0"/>
        <function-ref name="set" scoped="" ref="0x404d31d0"/>
        <function-ref name="clr" scoped="" ref="0x404d32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x404b60a0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x404b60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6278"/>
        <function-ref name="isInput" scoped="" ref="0x404b6358"/>
        <function-ref name="toggle" scoped="" ref="0x404b6438"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6518"/>
        <function-ref name="get" scoped="" ref="0x404b65f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b66d8"/>
        <function-ref name="set" scoped="" ref="0x404b67b8"/>
        <function-ref name="clr" scoped="" ref="0x404b6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404bc750" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404bc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc928"/>
        <function-ref name="isInput" scoped="" ref="0x404bca08"/>
        <function-ref name="toggle" scoped="" ref="0x404bcae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bcbc8"/>
        <function-ref name="get" scoped="" ref="0x404bcca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bcd88"/>
        <function-ref name="set" scoped="" ref="0x404bce68"/>
        <function-ref name="clr" scoped="" ref="0x404c7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404d5ee8" loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404d5ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d40e0"/>
        <function-ref name="isInput" scoped="" ref="0x404d41c0"/>
        <function-ref name="toggle" scoped="" ref="0x404d42a0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d4380"/>
        <function-ref name="get" scoped="" ref="0x404d4460"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d4540"/>
        <function-ref name="set" scoped="" ref="0x404d4620"/>
        <function-ref name="clr" scoped="" ref="0x404d4700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x404c7c08" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x404c7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7de0"/>
        <function-ref name="isInput" scoped="" ref="0x404c7ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404c6010"/>
        <function-ref name="isOutput" scoped="" ref="0x404c60f0"/>
        <function-ref name="get" scoped="" ref="0x404c61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c62b0"/>
        <function-ref name="set" scoped="" ref="0x404c6390"/>
        <function-ref name="clr" scoped="" ref="0x404c6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404cc2f0" loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404cc5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404cc688"/>
        <function-ref name="isOutput" scoped="" ref="0x404cc768"/>
        <function-ref name="get" scoped="" ref="0x404cc848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cc928"/>
        <function-ref name="set" scoped="" ref="0x404cca08"/>
        <function-ref name="clr" scoped="" ref="0x404ccae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404d18e0" loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404d18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404d1b98"/>
        <function-ref name="toggle" scoped="" ref="0x404d1c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404d1d58"/>
        <function-ref name="get" scoped="" ref="0x404d1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1f18"/>
        <function-ref name="set" scoped="" ref="0x404d0010"/>
        <function-ref name="clr" scoped="" ref="0x404d00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404d8a98" loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404d8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d8c70"/>
        <function-ref name="isInput" scoped="" ref="0x404d8d50"/>
        <function-ref name="toggle" scoped="" ref="0x404d8e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404d8f10"/>
        <function-ref name="get" scoped="" ref="0x404d7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d70f0"/>
        <function-ref name="set" scoped="" ref="0x404d71d0"/>
        <function-ref name="clr" scoped="" ref="0x404d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404c1ea8" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404c1ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c00c0"/>
        <function-ref name="isInput" scoped="" ref="0x404c01a0"/>
        <function-ref name="toggle" scoped="" ref="0x404c0280"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0360"/>
        <function-ref name="get" scoped="" ref="0x404c0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0520"/>
        <function-ref name="set" scoped="" ref="0x404c0600"/>
        <function-ref name="clr" scoped="" ref="0x404c06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404bf2f0" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404bf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bf4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404bf5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404bf688"/>
        <function-ref name="isOutput" scoped="" ref="0x404bf768"/>
        <function-ref name="get" scoped="" ref="0x404bf848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bf928"/>
        <function-ref name="set" scoped="" ref="0x404bfa08"/>
        <function-ref name="clr" scoped="" ref="0x404bfae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404c5a98" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404c5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c5c70"/>
        <function-ref name="isInput" scoped="" ref="0x404c5d50"/>
        <function-ref name="toggle" scoped="" ref="0x404c5e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5f10"/>
        <function-ref name="get" scoped="" ref="0x404c4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c40f0"/>
        <function-ref name="set" scoped="" ref="0x404c41d0"/>
        <function-ref name="clr" scoped="" ref="0x404c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404ca210" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404ca210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ca3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ca4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ca5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ca688"/>
        <function-ref name="get" scoped="" ref="0x404ca768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ca848"/>
        <function-ref name="set" scoped="" ref="0x404ca928"/>
        <function-ref name="clr" scoped="" ref="0x404caa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404cf750" loc="82:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404cf750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf928"/>
        <function-ref name="isInput" scoped="" ref="0x404cfa08"/>
        <function-ref name="toggle" scoped="" ref="0x404cfae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cfbc8"/>
        <function-ref name="get" scoped="" ref="0x404cfca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cfd88"/>
        <function-ref name="set" scoped="" ref="0x404cfe68"/>
        <function-ref name="clr" scoped="" ref="0x404ce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x404b8c08" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x404b8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8de0"/>
        <function-ref name="isInput" scoped="" ref="0x404b8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404b7010"/>
        <function-ref name="isOutput" scoped="" ref="0x404b70f0"/>
        <function-ref name="get" scoped="" ref="0x404b71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b72b0"/>
        <function-ref name="set" scoped="" ref="0x404b7390"/>
        <function-ref name="clr" scoped="" ref="0x404b7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404bd210" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404bd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd468"/>
        <function-ref name="isInput" scoped="" ref="0x404bd548"/>
        <function-ref name="toggle" scoped="" ref="0x404bd628"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd708"/>
        <function-ref name="get" scoped="" ref="0x404bd7e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd8c8"/>
        <function-ref name="set" scoped="" ref="0x404bd9a8"/>
        <function-ref name="clr" scoped="" ref="0x404bda88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404c38e0" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404c38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c3ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404c3b98"/>
        <function-ref name="toggle" scoped="" ref="0x404c3c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3d58"/>
        <function-ref name="get" scoped="" ref="0x404c3e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c3f18"/>
        <function-ref name="set" scoped="" ref="0x404c2010"/>
        <function-ref name="clr" scoped="" ref="0x404c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404d68e0" loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404d68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404d6b98"/>
        <function-ref name="toggle" scoped="" ref="0x404d6c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6d58"/>
        <function-ref name="get" scoped="" ref="0x404d6e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6f18"/>
        <function-ref name="set" scoped="" ref="0x404d5010"/>
        <function-ref name="clr" scoped="" ref="0x404d50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404c2ce8" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404c2ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd010"/>
        <function-ref name="isInput" scoped="" ref="0x404cd0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404cd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd2b0"/>
        <function-ref name="get" scoped="" ref="0x404cd390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cd470"/>
        <function-ref name="set" scoped="" ref="0x404cd550"/>
        <function-ref name="clr" scoped="" ref="0x404cd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404d34b0" loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404d34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d3688"/>
        <function-ref name="isInput" scoped="" ref="0x404d3768"/>
        <function-ref name="toggle" scoped="" ref="0x404d3848"/>
        <function-ref name="isOutput" scoped="" ref="0x404d3928"/>
        <function-ref name="get" scoped="" ref="0x404d3a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d3ae8"/>
        <function-ref name="set" scoped="" ref="0x404d3bc8"/>
        <function-ref name="clr" scoped="" ref="0x404d3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404d9670" loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404d9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d9848"/>
        <function-ref name="isInput" scoped="" ref="0x404d9928"/>
        <function-ref name="toggle" scoped="" ref="0x404d9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404d9ae8"/>
        <function-ref name="get" scoped="" ref="0x404d9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d9ca8"/>
        <function-ref name="set" scoped="" ref="0x404d9d88"/>
        <function-ref name="clr" scoped="" ref="0x404d9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404e0dc8" loc="97:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404e0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404df010"/>
        <function-ref name="isInput" scoped="" ref="0x404df0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404df1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404df2b0"/>
        <function-ref name="get" scoped="" ref="0x404df390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404df470"/>
        <function-ref name="set" scoped="" ref="0x404df550"/>
        <function-ref name="clr" scoped="" ref="0x404df630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404b6a98" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404b6a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6c70"/>
        <function-ref name="isInput" scoped="" ref="0x404b6d50"/>
        <function-ref name="toggle" scoped="" ref="0x404b6e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6f10"/>
        <function-ref name="get" scoped="" ref="0x404c1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c10f0"/>
        <function-ref name="set" scoped="" ref="0x404c11d0"/>
        <function-ref name="clr" scoped="" ref="0x404c12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404c7210" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404c7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c73e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c74c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c75a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7688"/>
        <function-ref name="get" scoped="" ref="0x404c7768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7848"/>
        <function-ref name="set" scoped="" ref="0x404c7928"/>
        <function-ref name="clr" scoped="" ref="0x404c7a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404ce210" loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404ce210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ce3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ce4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ce5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ce688"/>
        <function-ref name="get" scoped="" ref="0x404ce768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ce848"/>
        <function-ref name="set" scoped="" ref="0x404ce928"/>
        <function-ref name="clr" scoped="" ref="0x404cea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404c6670" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6848"/>
        <function-ref name="isInput" scoped="" ref="0x404c6928"/>
        <function-ref name="toggle" scoped="" ref="0x404c6a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6ae8"/>
        <function-ref name="get" scoped="" ref="0x404c6bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6ca8"/>
        <function-ref name="set" scoped="" ref="0x404c6d88"/>
        <function-ref name="clr" scoped="" ref="0x404c6e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404ccce8" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404ccce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ccec0"/>
        <function-ref name="isInput" scoped="" ref="0x404cb010"/>
        <function-ref name="toggle" scoped="" ref="0x404cb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404cb1d0"/>
        <function-ref name="get" scoped="" ref="0x404cb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb390"/>
        <function-ref name="set" scoped="" ref="0x404cb470"/>
        <function-ref name="clr" scoped="" ref="0x404cb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404d02f0" loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404d02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d04c8"/>
        <function-ref name="isInput" scoped="" ref="0x404d05a8"/>
        <function-ref name="toggle" scoped="" ref="0x404d0688"/>
        <function-ref name="isOutput" scoped="" ref="0x404d0768"/>
        <function-ref name="get" scoped="" ref="0x404d0848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d0928"/>
        <function-ref name="set" scoped="" ref="0x404d0a08"/>
        <function-ref name="clr" scoped="" ref="0x404d0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404d74b0" loc="89:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404d74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d7688"/>
        <function-ref name="isInput" scoped="" ref="0x404d7768"/>
        <function-ref name="toggle" scoped="" ref="0x404d7848"/>
        <function-ref name="isOutput" scoped="" ref="0x404d7928"/>
        <function-ref name="get" scoped="" ref="0x404d7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7ae8"/>
        <function-ref name="set" scoped="" ref="0x404d7bc8"/>
        <function-ref name="clr" scoped="" ref="0x404d7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404bb770" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404bb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bb948"/>
        <function-ref name="isInput" scoped="" ref="0x404bba28"/>
        <function-ref name="toggle" scoped="" ref="0x404bbb08"/>
        <function-ref name="isOutput" scoped="" ref="0x404bbbe8"/>
        <function-ref name="get" scoped="" ref="0x404bbcc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bbda8"/>
        <function-ref name="set" scoped="" ref="0x404bbe88"/>
        <function-ref name="clr" scoped="" ref="0x404b8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404bfce8" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404bfce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bfec0"/>
        <function-ref name="isInput" scoped="" ref="0x404be010"/>
        <function-ref name="toggle" scoped="" ref="0x404be0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404be1d0"/>
        <function-ref name="get" scoped="" ref="0x404be2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404be390"/>
        <function-ref name="set" scoped="" ref="0x404be470"/>
        <function-ref name="clr" scoped="" ref="0x404be550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404c44b0" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404c44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c4688"/>
        <function-ref name="isInput" scoped="" ref="0x404c4768"/>
        <function-ref name="toggle" scoped="" ref="0x404c4848"/>
        <function-ref name="isOutput" scoped="" ref="0x404c4928"/>
        <function-ref name="get" scoped="" ref="0x404c4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4ae8"/>
        <function-ref name="set" scoped="" ref="0x404c4bc8"/>
        <function-ref name="clr" scoped="" ref="0x404c4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404cac08" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404cac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cade0"/>
        <function-ref name="isInput" scoped="" ref="0x404caec0"/>
        <function-ref name="toggle" scoped="" ref="0x404c9010"/>
        <function-ref name="isOutput" scoped="" ref="0x404c90f0"/>
        <function-ref name="get" scoped="" ref="0x404c91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c92b0"/>
        <function-ref name="set" scoped="" ref="0x404c9390"/>
        <function-ref name="clr" scoped="" ref="0x404c9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404d4900" loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404d4900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4ad8"/>
        <function-ref name="isInput" scoped="" ref="0x404d4bb8"/>
        <function-ref name="toggle" scoped="" ref="0x404d4c98"/>
        <function-ref name="isOutput" scoped="" ref="0x404d4d78"/>
        <function-ref name="get" scoped="" ref="0x404d4e58"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e0010"/>
        <function-ref name="set" scoped="" ref="0x404e00f0"/>
        <function-ref name="clr" scoped="" ref="0x404e01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404c80a0" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404c80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c8278"/>
        <function-ref name="isInput" scoped="" ref="0x404c8358"/>
        <function-ref name="toggle" scoped="" ref="0x404c8438"/>
        <function-ref name="isOutput" scoped="" ref="0x404c8518"/>
        <function-ref name="get" scoped="" ref="0x404c85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c86d8"/>
        <function-ref name="set" scoped="" ref="0x404c87b8"/>
        <function-ref name="clr" scoped="" ref="0x404c8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404c22f0" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c24c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c25a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c2688"/>
        <function-ref name="isOutput" scoped="" ref="0x404c2768"/>
        <function-ref name="get" scoped="" ref="0x404c2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2928"/>
        <function-ref name="set" scoped="" ref="0x404c2a08"/>
        <function-ref name="clr" scoped="" ref="0x404c2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404b7670" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7848"/>
        <function-ref name="isInput" scoped="" ref="0x404b7928"/>
        <function-ref name="toggle" scoped="" ref="0x404b7a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7ae8"/>
        <function-ref name="get" scoped="" ref="0x404b7bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7ca8"/>
        <function-ref name="set" scoped="" ref="0x404b7d88"/>
        <function-ref name="clr" scoped="" ref="0x404b7e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404bdc88" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404bdc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bde60"/>
        <function-ref name="isInput" scoped="" ref="0x404bc010"/>
        <function-ref name="toggle" scoped="" ref="0x404bc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc1d0"/>
        <function-ref name="get" scoped="" ref="0x404bc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc390"/>
        <function-ref name="set" scoped="" ref="0x404bc470"/>
        <function-ref name="clr" scoped="" ref="0x404bc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404dc190" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404dc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc378"/>
        <function-ref name="isInput" scoped="" ref="0x404dc458"/>
        <function-ref name="toggle" scoped="" ref="0x404dc538"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc618"/>
        <function-ref name="get" scoped="" ref="0x404dc6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc7d8"/>
        <function-ref name="set" scoped="" ref="0x404dc8b8"/>
        <function-ref name="clr" scoped="" ref="0x404dc998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404f4a70" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404f4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f4c58"/>
        <function-ref name="isInput" scoped="" ref="0x404f4d38"/>
        <function-ref name="toggle" scoped="" ref="0x404f4e18"/>
        <function-ref name="isOutput" scoped="" ref="0x404f4ef8"/>
        <function-ref name="get" scoped="" ref="0x404f3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f30f0"/>
        <function-ref name="set" scoped="" ref="0x404f31d0"/>
        <function-ref name="clr" scoped="" ref="0x404f32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404f02b8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404f02b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f04a0"/>
        <function-ref name="isInput" scoped="" ref="0x404f0580"/>
        <function-ref name="toggle" scoped="" ref="0x404f0660"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0740"/>
        <function-ref name="get" scoped="" ref="0x404f0820"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0900"/>
        <function-ref name="set" scoped="" ref="0x404f09e0"/>
        <function-ref name="clr" scoped="" ref="0x404f0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404fbaf8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404fbaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fbce0"/>
        <function-ref name="isInput" scoped="" ref="0x404fbdc0"/>
        <function-ref name="toggle" scoped="" ref="0x404fbea0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9010"/>
        <function-ref name="get" scoped="" ref="0x404f90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f91d0"/>
        <function-ref name="set" scoped="" ref="0x404f92b0"/>
        <function-ref name="clr" scoped="" ref="0x404f9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404f6440" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404f6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f6628"/>
        <function-ref name="isInput" scoped="" ref="0x404f6708"/>
        <function-ref name="toggle" scoped="" ref="0x404f67e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f68c8"/>
        <function-ref name="get" scoped="" ref="0x404f69a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f6a88"/>
        <function-ref name="set" scoped="" ref="0x404f6b68"/>
        <function-ref name="clr" scoped="" ref="0x404f6c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40501c68" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40501c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501e50"/>
        <function-ref name="isInput" scoped="" ref="0x40500010"/>
        <function-ref name="toggle" scoped="" ref="0x405000f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405001d0"/>
        <function-ref name="get" scoped="" ref="0x405002b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500390"/>
        <function-ref name="set" scoped="" ref="0x40500470"/>
        <function-ref name="clr" scoped="" ref="0x40500550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4050a5c8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4050a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a7b0"/>
        <function-ref name="isInput" scoped="" ref="0x4050a890"/>
        <function-ref name="toggle" scoped="" ref="0x4050a970"/>
        <function-ref name="isOutput" scoped="" ref="0x4050aa50"/>
        <function-ref name="get" scoped="" ref="0x4050ab30"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050ac10"/>
        <function-ref name="set" scoped="" ref="0x4050acf0"/>
        <function-ref name="clr" scoped="" ref="0x4050add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40523438" loc="18:/usr/src/tinyos/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40523438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40523610"/>
        <function-ref name="isInput" scoped="" ref="0x405236f0"/>
        <function-ref name="toggle" scoped="" ref="0x405237d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405238b0"/>
        <function-ref name="get" scoped="" ref="0x40523990"/>
        <function-ref name="makeOutput" scoped="" ref="0x40523a70"/>
        <function-ref name="set" scoped="" ref="0x40523b50"/>
        <function-ref name="clr" scoped="" ref="0x40523c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x405289c0" loc="34:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405289c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40528b98"/>
        <function-ref name="stopDone" scoped="" ref="0x40528c78"/>
        <function-ref name="start" scoped="" ref="0x40528d58"/>
        <function-ref name="stop" scoped="" ref="0x40528e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40532860" loc="37:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40532860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40532a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x4052fab0" loc="57:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x4052fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4052fc88"/>
        <function-ref name="runTask" scoped="" ref="0x4052fd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x40531388" loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x40531388"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40531560"/>
        <function-ref name="runTask" scoped="" ref="0x40531640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x40530708" loc="35:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x40530708"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405308e0"/>
        <function-ref name="disable" scoped="" ref="0x405309c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40530aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40530b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x40530dc8" loc="36:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x40530dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40532010"/>
        <function-ref name="isInput" scoped="" ref="0x405320f0"/>
        <function-ref name="toggle" scoped="" ref="0x405321d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405322b0"/>
        <function-ref name="get" scoped="" ref="0x40532390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40532470"/>
        <function-ref name="set" scoped="" ref="0x40532550"/>
        <function-ref name="clr" scoped="" ref="0x40532630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x40540758" loc="35:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x40540758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40540930"/>
        <function-ref name="disable" scoped="" ref="0x40540a10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40540af0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40540bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40540d90" loc="36:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40540d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053f010"/>
        <function-ref name="isInput" scoped="" ref="0x4053f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4053f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4053f2b0"/>
        <function-ref name="get" scoped="" ref="0x4053f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053f470"/>
        <function-ref name="set" scoped="" ref="0x4053f550"/>
        <function-ref name="clr" scoped="" ref="0x4053f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x4053c010" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x4053c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4053c1e8"/>
        <function-ref name="disable" scoped="" ref="0x4053c2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4053c3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4053c488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x40542428" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40542428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40542600"/>
        <function-ref name="fired" scoped="" ref="0x405426e0"/>
        <function-ref name="disable" scoped="" ref="0x405427c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x405428a0"/>
        <function-ref name="reset" scoped="" ref="0x40542980"/>
        <function-ref name="setMask" scoped="" ref="0x40542a60"/>
        <function-ref name="enable" scoped="" ref="0x40542b40"/>
        <function-ref name="getPins" scoped="" ref="0x40542c20"/>
        <function-ref name="getMask" scoped="" ref="0x40542d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x40556eb8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40556eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4053a0c0"/>
        <function-ref name="fired" scoped="" ref="0x4053a1a0"/>
        <function-ref name="disable" scoped="" ref="0x4053a280"/>
        <function-ref name="isEnabled" scoped="" ref="0x4053a360"/>
        <function-ref name="reset" scoped="" ref="0x4053a440"/>
        <function-ref name="setMask" scoped="" ref="0x4053a520"/>
        <function-ref name="enable" scoped="" ref="0x4053a600"/>
        <function-ref name="getPins" scoped="" ref="0x4053a6e0"/>
        <function-ref name="getMask" scoped="" ref="0x4053a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x4053a9b8" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x4053a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4053aba0"/>
        <function-ref name="disable" scoped="" ref="0x4053ac80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4053ad60"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4053ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405640e0" loc="46:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405640e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405642b8"/>
        <function-ref name="stopDone" scoped="" ref="0x40564398"/>
        <function-ref name="start" scoped="" ref="0x40564478"/>
        <function-ref name="stop" scoped="" ref="0x40564558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405649b8" loc="47:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405649b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40564b90"/>
        <function-ref name="getPayload" scoped="" ref="0x40564c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40564d50"/>
        <function-ref name="cancel" scoped="" ref="0x40564e30"/>
        <function-ref name="sendDone" scoped="" ref="0x40564f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4056b388" loc="49:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4056b388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4056b560"/>
        <function-ref name="payloadLength" scoped="" ref="0x4056b640"/>
        <function-ref name="getPayload" scoped="" ref="0x4056b720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4056b800"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4056b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40563398" loc="48:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40563398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40563570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4057d840" loc="53:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4057d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4057da18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4057daf8"/>
        <function-ref name="led1On" scoped="" ref="0x4057dbd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4057dcb8"/>
        <function-ref name="led3Off" scoped="" ref="0x4057dd98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4057de78"/>
        <function-ref name="get" scoped="" ref="0x40562010"/>
        <function-ref name="led1Off" scoped="" ref="0x405620f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405621d0"/>
        <function-ref name="led3On" scoped="" ref="0x405622b0"/>
        <function-ref name="led0On" scoped="" ref="0x40562390"/>
        <function-ref name="led2Off" scoped="" ref="0x40562470"/>
        <function-ref name="led2On" scoped="" ref="0x40562550"/>
        <function-ref name="set" scoped="" ref="0x405626b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4057d308" loc="51:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4057d308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4057d4e0"/>
        <function-ref name="noAck" scoped="" ref="0x4057d5c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4057d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40572140" loc="50:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40572140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40572318"/>
        <function-ref name="source" scoped="" ref="0x405723f8"/>
        <function-ref name="address" scoped="" ref="0x405724d8"/>
        <function-ref name="destination" scoped="" ref="0x405725b8"/>
        <function-ref name="setSource" scoped="" ref="0x40572698"/>
        <function-ref name="setDestination" scoped="" ref="0x40572778"/>
        <function-ref name="type" scoped="" ref="0x40572858"/>
        <function-ref name="setType" scoped="" ref="0x40572938"/>
        <function-ref name="isForMe" scoped="" ref="0x40572a18"/>
        <function-ref name="setGroup" scoped="" ref="0x40572af8"/>
        <function-ref name="localGroup" scoped="" ref="0x40572bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x405a60c0" loc="54:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x405a60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405a6298"/>
        <function-ref name="getPayload" scoped="" ref="0x405a6378"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405a6458"/>
        <function-ref name="cancel" scoped="" ref="0x405a6538"/>
        <function-ref name="sendDone" scoped="" ref="0x405a6618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x405a6778" loc="55:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x405a6778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405a6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40561dc8" loc="47:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40561dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4056e010"/>
        <function-ref name="getPayload" scoped="" ref="0x4056e0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4056e1d0"/>
        <function-ref name="cancel" scoped="" ref="0x4056e2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4056e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405a74d0" loc="50:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405a74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a76a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405a7788"/>
        <function-ref name="getPayload" scoped="" ref="0x405a7868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405a7948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405a7a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4056e568" loc="48:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4056e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4056e750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405a7b68" loc="51:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a7b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405a7d40"/>
        <function-ref name="noAck" scoped="" ref="0x405a7e20"/>
        <function-ref name="wasAcked" scoped="" ref="0x405a7f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4056e890" loc="49:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4056e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4056ea68"/>
        <function-ref name="source" scoped="" ref="0x4056eb48"/>
        <function-ref name="address" scoped="" ref="0x4056ec28"/>
        <function-ref name="destination" scoped="" ref="0x4056ed08"/>
        <function-ref name="setSource" scoped="" ref="0x4056ede8"/>
        <function-ref name="setDestination" scoped="" ref="0x4056eec8"/>
        <function-ref name="type" scoped="" ref="0x405a7010"/>
        <function-ref name="setType" scoped="" ref="0x405a70f0"/>
        <function-ref name="isForMe" scoped="" ref="0x405a71d0"/>
        <function-ref name="setGroup" scoped="" ref="0x405a72b0"/>
        <function-ref name="localGroup" scoped="" ref="0x405a7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405b5ef0" loc="50:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405b5ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405b20e0"/>
        <function-ref name="stopDone" scoped="" ref="0x405b21c0"/>
        <function-ref name="start" scoped="" ref="0x405b22a0"/>
        <function-ref name="stop" scoped="" ref="0x405b2380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405b2dd0" loc="52:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405b2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40448eb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405b1010"/>
        <function-ref name="getPayload" scoped="" ref="0x405b10f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405b11d0"/>
        <function-ref name="cancel" scoped="" ref="0x405b12b0"/>
        <function-ref name="sendDone" scoped="" ref="0x405b1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405b5b58" loc="49:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405b5b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405b5d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405b27c8" loc="51:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405b27c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40448eb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405b29a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405bcc50" loc="56:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405bcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405bce28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405bcf08"/>
        <function-ref name="led1On" scoped="" ref="0x405b0010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405b00f0"/>
        <function-ref name="led3Off" scoped="" ref="0x405b01d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405b02b0"/>
        <function-ref name="get" scoped="" ref="0x405b0390"/>
        <function-ref name="led1Off" scoped="" ref="0x405b0470"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405b0550"/>
        <function-ref name="led3On" scoped="" ref="0x405b0630"/>
        <function-ref name="led0On" scoped="" ref="0x405b0710"/>
        <function-ref name="led2Off" scoped="" ref="0x405b07f0"/>
        <function-ref name="led2On" scoped="" ref="0x405b08d0"/>
        <function-ref name="set" scoped="" ref="0x405b0a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x405bc748" loc="55:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x405bc748"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40448eb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x405bc920"/>
        <function-ref name="offset" scoped="" ref="0x405bca00"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x405bcae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405cb4c0" loc="66:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405cb4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405cb698"/>
        <function-ref name="stopDone" scoped="" ref="0x405cb778"/>
        <function-ref name="start" scoped="" ref="0x405cb858"/>
        <function-ref name="stop" scoped="" ref="0x405cb938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x4060ace8" loc="332:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x4060ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4060aec0"/>
        <function-ref name="runTask" scoped="" ref="0x40609010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x405ded38" loc="74:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x405ded38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405def10"/>
        <function-ref name="stop" scoped="" ref="0x405d5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x405e0168" loc="191:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x405e0168"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e0340"/>
        <function-ref name="runTask" scoped="" ref="0x405e0420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405cb128" loc="65:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405cb128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405cb300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x405d5d10" loc="75:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x405d5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x405d5ee8"/>
        <function-ref name="flush" scoped="" ref="0x405ce010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x4060b578" loc="322:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x4060b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4060b750"/>
        <function-ref name="runTask" scoped="" ref="0x4060b830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x405cf468" loc="72:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x405cf468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x405cf640"/>
        <function-ref name="resetSend" scoped="" ref="0x405cf720"/>
        <function-ref name="dataReceived" scoped="" ref="0x405cf800"/>
        <function-ref name="resetReceive" scoped="" ref="0x405cf8e0"/>
        <function-ref name="putData" scoped="" ref="0x405cf9c0"/>
        <function-ref name="putDone" scoped="" ref="0x405cfaa0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x405cfb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405cfcf0" loc="73:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405cfcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405cfec8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405c8010"/>
        <function-ref name="led1On" scoped="" ref="0x405c80f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405c81d0"/>
        <function-ref name="led3Off" scoped="" ref="0x405c82b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405c8390"/>
        <function-ref name="get" scoped="" ref="0x405c8470"/>
        <function-ref name="led1Off" scoped="" ref="0x405c8550"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405c8630"/>
        <function-ref name="led3On" scoped="" ref="0x405c8710"/>
        <function-ref name="led0On" scoped="" ref="0x405c87f0"/>
        <function-ref name="led2Off" scoped="" ref="0x405c88d0"/>
        <function-ref name="led2On" scoped="" ref="0x405c89b0"/>
        <function-ref name="set" scoped="" ref="0x405c8b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40607998" loc="341:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40607998"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40607b70"/>
        <function-ref name="runTask" scoped="" ref="0x40607c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x405c6ef8" loc="67:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x405c6ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x405c90e0"/>
        <function-ref name="nextByte" scoped="" ref="0x405c91c0"/>
        <function-ref name="startSend" scoped="" ref="0x405c92a0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x405c9380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x405d32a8" loc="68:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405d32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x405d3480"/>
        <function-ref name="byteReceived" scoped="" ref="0x405d3560"/>
        <function-ref name="endPacket" scoped="" ref="0x405d3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x406713d0" loc="275:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x406713d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406715a8"/>
        <function-ref name="runTask" scoped="" ref="0x40671688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40674bc8" loc="51:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40674bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40448eb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40674db0"/>
        <function-ref name="getPayload" scoped="" ref="0x40674e90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40673010"/>
        <function-ref name="cancel" scoped="" ref="0x406730f0"/>
        <function-ref name="sendDone" scoped="" ref="0x406731d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40671808" loc="158:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40671808"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406719e0"/>
        <function-ref name="runTask" scoped="" ref="0x40671ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40674808" loc="50:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40674808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40448eb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406749f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x406733f8" loc="54:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x406733f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40448eb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x406735e0"/>
        <function-ref name="offset" scoped="" ref="0x406736c0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x406737a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406723f0" loc="57:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406723f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x406725c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406726a8"/>
        <function-ref name="led1On" scoped="" ref="0x40672788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40672868"/>
        <function-ref name="led3Off" scoped="" ref="0x40672948"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40672a28"/>
        <function-ref name="get" scoped="" ref="0x40672b08"/>
        <function-ref name="led1Off" scoped="" ref="0x40672be8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40672cc8"/>
        <function-ref name="led3On" scoped="" ref="0x40672da8"/>
        <function-ref name="led0On" scoped="" ref="0x40672e88"/>
        <function-ref name="led2Off" scoped="" ref="0x40671010"/>
        <function-ref name="led2On" scoped="" ref="0x406710f0"/>
        <function-ref name="set" scoped="" ref="0x40671250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40673db8" loc="56:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40673db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40672010"/>
        <function-ref name="nextByte" scoped="" ref="0x406720f0"/>
        <function-ref name="startSend" scoped="" ref="0x406721d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x406722b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x406738e0" loc="55:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x406738e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40673ab8"/>
        <function-ref name="byteReceived" scoped="" ref="0x40673b98"/>
        <function-ref name="endPacket" scoped="" ref="0x40673c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x4068c0f0" loc="50:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4068c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4068c2c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x4068c3a8"/>
        <function-ref name="receive" scoped="" ref="0x4068c488"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4068c568"/>
        <function-ref name="receiveDone" scoped="" ref="0x4068c648"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4068c728"/>
        <function-ref name="sendDone" scoped="" ref="0x4068c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40684ca8" loc="48:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40684ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40684e80"/>
        <function-ref name="resetSend" scoped="" ref="0x40681010"/>
        <function-ref name="dataReceived" scoped="" ref="0x406810f0"/>
        <function-ref name="resetReceive" scoped="" ref="0x406811d0"/>
        <function-ref name="putData" scoped="" ref="0x406812b0"/>
        <function-ref name="putDone" scoped="" ref="0x40681390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40681470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4068c978" loc="51:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4068c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4068cb50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4068cc30"/>
        <function-ref name="led1On" scoped="" ref="0x4068cd10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4068cdf0"/>
        <function-ref name="led3Off" scoped="" ref="0x4068ced0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40680010"/>
        <function-ref name="get" scoped="" ref="0x406800f0"/>
        <function-ref name="led1Off" scoped="" ref="0x406801d0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x406802b0"/>
        <function-ref name="led3On" scoped="" ref="0x40680390"/>
        <function-ref name="led0On" scoped="" ref="0x40680470"/>
        <function-ref name="led2Off" scoped="" ref="0x40680550"/>
        <function-ref name="led2On" scoped="" ref="0x40680630"/>
        <function-ref name="set" scoped="" ref="0x40680790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406a10f0" loc="42:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406a10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406a12c8"/>
        <function-ref name="receive" scoped="" ref="0x406a13a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x406922b8" loc="41:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406922b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40692490"/>
        <function-ref name="receivedByte" scoped="" ref="0x40692570"/>
        <function-ref name="receive" scoped="" ref="0x40692650"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40692730"/>
        <function-ref name="receiveDone" scoped="" ref="0x40692810"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406928f0"/>
        <function-ref name="sendDone" scoped="" ref="0x406929d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40683d98" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40683d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40692010"/>
        <function-ref name="stop" scoped="" ref="0x406920f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406a2010" loc="41:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406a21e8"/>
        <function-ref name="receive" scoped="" ref="0x406a22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x406a2490" loc="42:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406a2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406a2668"/>
        <function-ref name="receivedByte" scoped="" ref="0x406a2748"/>
        <function-ref name="receive" scoped="" ref="0x406a2828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406a2908"/>
        <function-ref name="receiveDone" scoped="" ref="0x406a29e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406a2ac8"/>
        <function-ref name="sendDone" scoped="" ref="0x406a2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4069bcf0" loc="43:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4069bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406a0478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406a0968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406a06f0"/>
        <function-ref name="overflow" scoped="" ref="0x406a0be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406a1b00" loc="40:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406a1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406a1cd8"/>
        <function-ref name="stop" scoped="" ref="0x406a1db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406c4330" loc="50:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406c4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406c4508"/>
        <function-ref name="receive" scoped="" ref="0x406c45e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x406c3010" loc="53:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x406c3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c31e8"/>
        <function-ref name="stop" scoped="" ref="0x406c32c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4069abc8" loc="48:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4069abc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4069ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x406c4748" loc="51:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406c4748"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406c4920"/>
        <function-ref name="receivedByte" scoped="" ref="0x406c4a00"/>
        <function-ref name="receive" scoped="" ref="0x406c4ae0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406c4bc0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406c4ca0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406c4d80"/>
        <function-ref name="sendDone" scoped="" ref="0x406c4e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406c2530" loc="56:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406c2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406c2c80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406c11a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406c2ef8"/>
        <function-ref name="overflow" scoped="" ref="0x406c1418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x406c3880" loc="55:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x406c3880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406c3a58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406c3b38"/>
        <function-ref name="rxDone" scoped="" ref="0x406c3c18"/>
        <function-ref name="txDone" scoped="" ref="0x406c3cf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406c3dd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406c3eb8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406c2010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406c20f0"/>
        <function-ref name="tx" scoped="" ref="0x406c21d0"/>
        <function-ref name="rx" scoped="" ref="0x406c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4069af00" loc="49:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4069af00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c40f0"/>
        <function-ref name="stop" scoped="" ref="0x406c41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x406c3448" loc="54:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x406c3448"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c3620"/>
        <function-ref name="stop" scoped="" ref="0x406c3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406d7b18" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406d7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406d7cf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406d7dd0"/>
        <function-ref name="rxDone" scoped="" ref="0x406d7eb0"/>
        <function-ref name="txDone" scoped="" ref="0x406d6010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406d60f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406d61d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406d62b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406d6390"/>
        <function-ref name="tx" scoped="" ref="0x406d6470"/>
        <function-ref name="rx" scoped="" ref="0x406d6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x406d5250" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x406d5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406d5428"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406d5508"/>
        <function-ref name="rxDone" scoped="" ref="0x406d55e8"/>
        <function-ref name="txDone" scoped="" ref="0x406d56c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406d57a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406d5888"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406d5968"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406d5a48"/>
        <function-ref name="tx" scoped="" ref="0x406d5b28"/>
        <function-ref name="rx" scoped="" ref="0x406d5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406d7620" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406d7620"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406d77f8"/>
        <function-ref name="stop" scoped="" ref="0x406d78d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406d67a8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406d67a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406d6980"/>
        <function-ref name="stop" scoped="" ref="0x406d6a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x406d6cb8" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x406d6cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406d6e90"/>
        <function-ref name="stop" scoped="" ref="0x406d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406d7110" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406d7110"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406d72e8"/>
        <function-ref name="stop" scoped="" ref="0x406d73c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x406e9458" loc="114:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x406e9458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406e9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406e6350" loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406e6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406e6528"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406e6608"/>
        <function-ref name="rxDone" scoped="" ref="0x406e66e8"/>
        <function-ref name="txDone" scoped="" ref="0x406e67c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406e68a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406e6988"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406e6a68"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406e6b48"/>
        <function-ref name="tx" scoped="" ref="0x406e6c28"/>
        <function-ref name="rx" scoped="" ref="0x406e6d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406e49f8" loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406e49f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406e4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x406e6f18" loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x406e6f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406e5108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x406e5dc8" loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x406e5dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406e4010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406e40f0"/>
        <function-ref name="rxDone" scoped="" ref="0x406e41d0"/>
        <function-ref name="txDone" scoped="" ref="0x406e42b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406e4390"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406e4470"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406e4550"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406e4630"/>
        <function-ref name="tx" scoped="" ref="0x406e4710"/>
        <function-ref name="rx" scoped="" ref="0x406e47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406e9dd8" loc="116:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406e9dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406e6010"/>
        <function-ref name="stop" scoped="" ref="0x406e60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406e5380" loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406e5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406e5558"/>
        <function-ref name="stop" scoped="" ref="0x406e5638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x406e58b0" loc="121:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x406e58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406e5a88"/>
        <function-ref name="stop" scoped="" ref="0x406e5b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x406e4dc8" loc="126:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x406e4dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x406e3010"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x406e30f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x406e31d0"/>
        <function-ref name="actualMicro" scoped="" ref="0x406e32b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x406e3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x406e3578" loc="127:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x406e3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x406e3750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406e98a8" loc="115:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406e98a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406e9a80"/>
        <function-ref name="stop" scoped="" ref="0x406e9b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4040be50" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4040e050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4040d218" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4040d218"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403283d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403283d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4040d3f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4040d4d0"/>
        <function-ref name="led1On" scoped="" ref="0x4040d5b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4040d690"/>
        <function-ref name="led3Off" scoped="" ref="0x4040d770"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4040d850"/>
        <function-ref name="get" scoped="" ref="0x4040d930"/>
        <function-ref name="led1Off" scoped="" ref="0x4040da10"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4040daf0"/>
        <function-ref name="led3On" scoped="" ref="0x4040dbd0"/>
        <function-ref name="led0On" scoped="" ref="0x4040dcb0"/>
        <function-ref name="led2Off" scoped="" ref="0x4040dd90"/>
        <function-ref name="led2On" scoped="" ref="0x4040de70"/>
        <function-ref name="set" scoped="" ref="0x40414010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403324a0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403324a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40332678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4040c1a8" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4040c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40690818" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40690818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40718010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40718500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40718288"/>
        <function-ref name="overflow" scoped="" ref="0x40718778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4072b5f8" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4072b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4072bd48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40730288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40730010"/>
        <function-ref name="overflow" scoped="" ref="0x40730500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40716320" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40716320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40716a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4072b010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40716ce8"/>
        <function-ref name="overflow" scoped="" ref="0x4072b288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4072d328" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4072d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4072da78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4072c010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4072dcf0"/>
        <function-ref name="overflow" scoped="" ref="0x4072c288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4073fb40" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4073fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4073e308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4073e7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4073e580"/>
        <function-ref name="overflow" scoped="" ref="0x4073ea70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40740908" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40740908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4073f068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4073f558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4073f2e0"/>
        <function-ref name="overflow" scoped="" ref="0x4073f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4073cb68" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4073cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40739308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407397f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40739580"/>
        <function-ref name="overflow" scoped="" ref="0x40739a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4074c010" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4074c010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4074c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4074c448" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4074c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4074cb98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407520a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4074ce10"/>
        <function-ref name="overflow" scoped="" ref="0x40752320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x407525f0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x407525f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40750068"/>
        <function-ref name="test" scoped="" ref="0x407513e8"/>
        <function-ref name="get" scoped="" ref="0x40752c38"/>
        <function-ref name="reset" scoped="" ref="0x40751660"/>
        <function-ref name="getMode" scoped="" ref="0x40750308"/>
        <function-ref name="overflow" scoped="" ref="0x40751170"/>
        <function-ref name="isOn" scoped="" ref="0x40751dc8"/>
        <function-ref name="set" scoped="" ref="0x40752eb0"/>
        <function-ref name="start" scoped="" ref="0x407518d8"/>
        <function-ref name="stop" scoped="" ref="0x40751b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4076b1d8" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4076b1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40758c68"/>
        <function-ref name="test" scoped="" ref="0x40758010"/>
        <function-ref name="fired" scoped="" ref="0x4076bd38"/>
        <function-ref name="get" scoped="" ref="0x4076b820"/>
        <function-ref name="reset" scoped="" ref="0x40758288"/>
        <function-ref name="getMode" scoped="" ref="0x40758f08"/>
        <function-ref name="isOn" scoped="" ref="0x407589f0"/>
        <function-ref name="set" scoped="" ref="0x4076ba98"/>
        <function-ref name="start" scoped="" ref="0x40758500"/>
        <function-ref name="stop" scoped="" ref="0x40758778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4074e878" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4074e878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407612e0"/>
        <function-ref name="test" scoped="" ref="0x40762668"/>
        <function-ref name="get" scoped="" ref="0x4074eec0"/>
        <function-ref name="reset" scoped="" ref="0x407628e0"/>
        <function-ref name="getMode" scoped="" ref="0x40761580"/>
        <function-ref name="overflow" scoped="" ref="0x407623f0"/>
        <function-ref name="isOn" scoped="" ref="0x40761068"/>
        <function-ref name="set" scoped="" ref="0x40762150"/>
        <function-ref name="start" scoped="" ref="0x40762b58"/>
        <function-ref name="stop" scoped="" ref="0x40762dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4075bf08" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4075bf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4075f9f0"/>
        <function-ref name="test" scoped="" ref="0x40760d08"/>
        <function-ref name="fired" scoped="" ref="0x40760a90"/>
        <function-ref name="force" scoped="" ref="0x4075ff08"/>
        <function-ref name="get" scoped="" ref="0x40760578"/>
        <function-ref name="reset" scoped="" ref="0x4075f010"/>
        <function-ref name="getMode" scoped="" ref="0x4075fc90"/>
        <function-ref name="isOn" scoped="" ref="0x4075f778"/>
        <function-ref name="set" scoped="" ref="0x407607f0"/>
        <function-ref name="start" scoped="" ref="0x4075f288"/>
        <function-ref name="stop" scoped="" ref="0x4075f500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40766b98" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40766b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4077b600"/>
        <function-ref name="test" scoped="" ref="0x40765990"/>
        <function-ref name="fired" scoped="" ref="0x40765718"/>
        <function-ref name="force" scoped="" ref="0x4077bb18"/>
        <function-ref name="get" scoped="" ref="0x40765200"/>
        <function-ref name="reset" scoped="" ref="0x40765c08"/>
        <function-ref name="getMode" scoped="" ref="0x4077b8a0"/>
        <function-ref name="isOn" scoped="" ref="0x4077b388"/>
        <function-ref name="set" scoped="" ref="0x40765478"/>
        <function-ref name="start" scoped="" ref="0x40765e80"/>
        <function-ref name="stop" scoped="" ref="0x4077b110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407756a8" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407756a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407721a0"/>
        <function-ref name="test" scoped="" ref="0x40774528"/>
        <function-ref name="fired" scoped="" ref="0x407742b0"/>
        <function-ref name="get" scoped="" ref="0x40775cf0"/>
        <function-ref name="reset" scoped="" ref="0x407747a0"/>
        <function-ref name="getMode" scoped="" ref="0x40772440"/>
        <function-ref name="isOn" scoped="" ref="0x40774f08"/>
        <function-ref name="set" scoped="" ref="0x40774010"/>
        <function-ref name="start" scoped="" ref="0x40774a18"/>
        <function-ref name="stop" scoped="" ref="0x40774c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407726f8" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407726f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407728d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4077bf10" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4077bf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407799f0"/>
        <function-ref name="test" scoped="" ref="0x4077ad08"/>
        <function-ref name="fired" scoped="" ref="0x4077aa90"/>
        <function-ref name="force" scoped="" ref="0x40779f08"/>
        <function-ref name="get" scoped="" ref="0x4077a578"/>
        <function-ref name="reset" scoped="" ref="0x40779010"/>
        <function-ref name="getMode" scoped="" ref="0x40779c90"/>
        <function-ref name="isOn" scoped="" ref="0x40779778"/>
        <function-ref name="set" scoped="" ref="0x4077a7f0"/>
        <function-ref name="start" scoped="" ref="0x40779288"/>
        <function-ref name="stop" scoped="" ref="0x40779500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40772ae8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40772ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40772cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40777320" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40777320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40776d68"/>
        <function-ref name="test" scoped="" ref="0x40776110"/>
        <function-ref name="fired" scoped="" ref="0x40777e80"/>
        <function-ref name="force" scoped="" ref="0x407752c0"/>
        <function-ref name="get" scoped="" ref="0x40777968"/>
        <function-ref name="reset" scoped="" ref="0x40776388"/>
        <function-ref name="getMode" scoped="" ref="0x40775048"/>
        <function-ref name="isOn" scoped="" ref="0x40776af0"/>
        <function-ref name="set" scoped="" ref="0x40777be0"/>
        <function-ref name="start" scoped="" ref="0x40776600"/>
        <function-ref name="stop" scoped="" ref="0x40776878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4076aa80" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4076aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40766500"/>
        <function-ref name="test" scoped="" ref="0x40767888"/>
        <function-ref name="get" scoped="" ref="0x407670f8"/>
        <function-ref name="reset" scoped="" ref="0x40767b00"/>
        <function-ref name="getMode" scoped="" ref="0x407667a0"/>
        <function-ref name="overflow" scoped="" ref="0x40767610"/>
        <function-ref name="isOn" scoped="" ref="0x40766288"/>
        <function-ref name="set" scoped="" ref="0x40767370"/>
        <function-ref name="start" scoped="" ref="0x40767d78"/>
        <function-ref name="stop" scoped="" ref="0x40766010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x4072eb80" loc="47:/usr/src/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x4072eb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4072ed58"/>
        <function-ref name="offset" scoped="" ref="0x4072ee38"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4072ef18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x407c5010" loc="43:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407c51e8"/>
        <function-ref name="getPayload" scoped="" ref="0x407c52c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407c53a8"/>
        <function-ref name="cancel" scoped="" ref="0x407c5488"/>
        <function-ref name="sendDone" scoped="" ref="0x407c5568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x407c56f0" loc="44:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407c56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407c58c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407c5a38" loc="45:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407c5a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407c5c10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407c5cf0"/>
        <function-ref name="led1On" scoped="" ref="0x407c5dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407c5eb0"/>
        <function-ref name="led3Off" scoped="" ref="0x407c4010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407c40f0"/>
        <function-ref name="get" scoped="" ref="0x407c41d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407c42b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407c4390"/>
        <function-ref name="led3On" scoped="" ref="0x407c4470"/>
        <function-ref name="led0On" scoped="" ref="0x407c4550"/>
        <function-ref name="led2Off" scoped="" ref="0x407c4630"/>
        <function-ref name="led2On" scoped="" ref="0x407c4710"/>
        <function-ref name="set" scoped="" ref="0x407c4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x407db218" loc="54:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x407db218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407db3f0"/>
        <function-ref name="runTask" scoped="" ref="0x407db4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x407c8a28" loc="38:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x407c8a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x407c8c00"/>
        <function-ref name="offset" scoped="" ref="0x407c8ce0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x407c8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407c7a20" loc="42:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407c7a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407c7bf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407c7cd8"/>
        <function-ref name="led1On" scoped="" ref="0x407c7db8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407c7e98"/>
        <function-ref name="led3Off" scoped="" ref="0x407e5010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407e50f0"/>
        <function-ref name="get" scoped="" ref="0x407e51d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407e52b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407e5390"/>
        <function-ref name="led3On" scoped="" ref="0x407e5470"/>
        <function-ref name="led0On" scoped="" ref="0x407e5550"/>
        <function-ref name="led2Off" scoped="" ref="0x407e5630"/>
        <function-ref name="led2On" scoped="" ref="0x407e5710"/>
        <function-ref name="set" scoped="" ref="0x407e5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x407e1480" loc="50:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407e1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e1658"/>
        <function-ref name="isInput" scoped="" ref="0x407e1738"/>
        <function-ref name="toggle" scoped="" ref="0x407e1818"/>
        <function-ref name="isOutput" scoped="" ref="0x407e18f8"/>
        <function-ref name="get" scoped="" ref="0x407e19d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e1ab8"/>
        <function-ref name="set" scoped="" ref="0x407e1b98"/>
        <function-ref name="clr" scoped="" ref="0x407e1c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x407df2e0" loc="53:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x407df2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407df4b8"/>
        <function-ref name="isInput" scoped="" ref="0x407df598"/>
        <function-ref name="toggle" scoped="" ref="0x407df678"/>
        <function-ref name="isOutput" scoped="" ref="0x407df758"/>
        <function-ref name="get" scoped="" ref="0x407df838"/>
        <function-ref name="makeOutput" scoped="" ref="0x407df918"/>
        <function-ref name="set" scoped="" ref="0x407df9f8"/>
        <function-ref name="clr" scoped="" ref="0x407dfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407e2128" loc="46:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407e2128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407e2300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x407e1e68" loc="51:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x407e1e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e0050"/>
        <function-ref name="isInput" scoped="" ref="0x407e0130"/>
        <function-ref name="toggle" scoped="" ref="0x407e0210"/>
        <function-ref name="isOutput" scoped="" ref="0x407e02f0"/>
        <function-ref name="get" scoped="" ref="0x407e03d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e04b0"/>
        <function-ref name="set" scoped="" ref="0x407e0590"/>
        <function-ref name="clr" scoped="" ref="0x407e0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407e2470" loc="47:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407e2470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407e2648"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407e2728"/>
        <function-ref name="led1On" scoped="" ref="0x407e2808"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407e28e8"/>
        <function-ref name="led3Off" scoped="" ref="0x407e29c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407e2aa8"/>
        <function-ref name="get" scoped="" ref="0x407e2b88"/>
        <function-ref name="led1Off" scoped="" ref="0x407e2c68"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407e2d48"/>
        <function-ref name="led3On" scoped="" ref="0x407e2e28"/>
        <function-ref name="led0On" scoped="" ref="0x407e2f08"/>
        <function-ref name="led2Off" scoped="" ref="0x407e1010"/>
        <function-ref name="led2On" scoped="" ref="0x407e10f0"/>
        <function-ref name="set" scoped="" ref="0x407e1250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x407e0860" loc="52:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x407e0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e0a38"/>
        <function-ref name="isInput" scoped="" ref="0x407e0b18"/>
        <function-ref name="toggle" scoped="" ref="0x407e0bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x407e0cd8"/>
        <function-ref name="get" scoped="" ref="0x407e0db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e0e98"/>
        <function-ref name="set" scoped="" ref="0x407df010"/>
        <function-ref name="clr" scoped="" ref="0x407df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x407e4c20" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407e4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e4df8"/>
        <function-ref name="isInput" scoped="" ref="0x407e4ed8"/>
        <function-ref name="toggle" scoped="" ref="0x40800010"/>
        <function-ref name="isOutput" scoped="" ref="0x408000f0"/>
        <function-ref name="get" scoped="" ref="0x408001d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408002b0"/>
        <function-ref name="set" scoped="" ref="0x40800390"/>
        <function-ref name="clr" scoped="" ref="0x40800470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x407ffa48" loc="42:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x407ffa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ffc20"/>
        <function-ref name="isInput" scoped="" ref="0x407ffd00"/>
        <function-ref name="toggle" scoped="" ref="0x407ffde0"/>
        <function-ref name="isOutput" scoped="" ref="0x407ffec0"/>
        <function-ref name="get" scoped="" ref="0x407fe010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407fe0f0"/>
        <function-ref name="set" scoped="" ref="0x407fe1d0"/>
        <function-ref name="clr" scoped="" ref="0x407fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40800660" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40800660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40800838"/>
        <function-ref name="isInput" scoped="" ref="0x40800918"/>
        <function-ref name="toggle" scoped="" ref="0x408009f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40800ad8"/>
        <function-ref name="get" scoped="" ref="0x40800bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40800c98"/>
        <function-ref name="set" scoped="" ref="0x40800d78"/>
        <function-ref name="clr" scoped="" ref="0x40800e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x407fe450" loc="45:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407fe450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407fe628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x407ff060" loc="41:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x407ff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ff238"/>
        <function-ref name="isInput" scoped="" ref="0x407ff318"/>
        <function-ref name="toggle" scoped="" ref="0x407ff3f8"/>
        <function-ref name="isOutput" scoped="" ref="0x407ff4d8"/>
        <function-ref name="get" scoped="" ref="0x407ff5b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ff698"/>
        <function-ref name="set" scoped="" ref="0x407ff778"/>
        <function-ref name="clr" scoped="" ref="0x407ff858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x407fa508" loc="60:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x407fa508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407fa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4047d778" loc="57:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4047d778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4047d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x407fa100" loc="59:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x407fa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407fa2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4047db10" loc="58:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4047db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047dce8"/>
        <function-ref name="taskLoop" scoped="" ref="0x4047ddc8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4047dea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4038a330" loc="48:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4038a508"/>
        <function-ref name="runTask" scoped="" ref="0x4038a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4032fb58" loc="47:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4032fd30"/>
        <function-ref name="taskLoop" scoped="" ref="0x4032fe10"/>
        <function-ref name="runNextTask" scoped="" ref="0x4032fef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403f8010" loc="56:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403f81e8"/>
        <function-ref name="runTask" scoped="" ref="0x403f82c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403f8c70" loc="57:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403f8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403f8e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403f9738" loc="55:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403f9738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f9910"/>
        <function-ref name="taskLoop" scoped="" ref="0x403f99f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403f9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40422bb0" loc="30:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40422bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40422d88"/>
        <function-ref name="stopDone" scoped="" ref="0x40422e68"/>
        <function-ref name="start" scoped="" ref="0x4080b010"/>
        <function-ref name="stop" scoped="" ref="0x4080b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40807d20" loc="35:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40807d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40807ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4080b550" loc="32:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4080b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4080b728"/>
        <function-ref name="getPayload" scoped="" ref="0x4080b808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4080b8e8"/>
        <function-ref name="cancel" scoped="" ref="0x4080b9c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4080baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4080a5c8" loc="34:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4080a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4080a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408080a0" loc="37:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40808278"/>
        <function-ref name="payloadLength" scoped="" ref="0x40808358"/>
        <function-ref name="getPayload" scoped="" ref="0x40808438"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40808518"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408085f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4081a130" loc="41:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4081a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4081a308"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4081a3e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4081a4c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4081a5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4080bf10" loc="33:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4080bf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4080a108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x408137c0" loc="44:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x408137c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408172d8"/>
        <function-ref name="clear" scoped="" ref="0x40817688"/>
        <function-ref name="isValid" scoped="" ref="0x40813f10"/>
        <function-ref name="set" scoped="" ref="0x40817a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408064d0" loc="40:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408064d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408066a8"/>
        <function-ref name="noAck" scoped="" ref="0x40806788"/>
        <function-ref name="wasAcked" scoped="" ref="0x40806868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40816a40" loc="42:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40816a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40816c18"/>
        <function-ref name="setRetries" scoped="" ref="0x40816cf8"/>
        <function-ref name="getRetries" scoped="" ref="0x40816dd8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40816eb8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40805010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40808790" loc="38:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40808790"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40808968"/>
        <function-ref name="source" scoped="" ref="0x40808a48"/>
        <function-ref name="address" scoped="" ref="0x40808b28"/>
        <function-ref name="destination" scoped="" ref="0x40808c08"/>
        <function-ref name="setSource" scoped="" ref="0x40808ce8"/>
        <function-ref name="setDestination" scoped="" ref="0x40808dc8"/>
        <function-ref name="type" scoped="" ref="0x40808ea8"/>
        <function-ref name="setType" scoped="" ref="0x40806010"/>
        <function-ref name="isForMe" scoped="" ref="0x408060f0"/>
        <function-ref name="setGroup" scoped="" ref="0x408061d0"/>
        <function-ref name="localGroup" scoped="" ref="0x408062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408111a0" loc="45:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408111a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40811ca0"/>
        <function-ref name="clear" scoped="" ref="0x40810068"/>
        <function-ref name="isValid" scoped="" ref="0x408118f0"/>
        <function-ref name="set" scoped="" ref="0x40810418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40810e88" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40810e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40826070"/>
        <function-ref name="stopDone" scoped="" ref="0x40826150"/>
        <function-ref name="start" scoped="" ref="0x40826230"/>
        <function-ref name="stop" scoped="" ref="0x40826310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x408338a0" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x408338a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408324a0"/>
        <function-ref name="get" scoped="" ref="0x408321e0"/>
        <function-ref name="isSet" scoped="" ref="0x40833ee8"/>
        <function-ref name="set" scoped="" ref="0x40832760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4082b130" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4082b130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4082bc30"/>
        <function-ref name="clear" scoped="" ref="0x4082a010"/>
        <function-ref name="isValid" scoped="" ref="0x4082b880"/>
        <function-ref name="set" scoped="" ref="0x4082a3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40825e68" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40825e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40824050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40823010" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40823010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408231e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408232c8"/>
        <function-ref name="getPayload" scoped="" ref="0x408233a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40823488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40823568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40826770" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40826770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40826948"/>
        <function-ref name="getPayload" scoped="" ref="0x40826a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40826b08"/>
        <function-ref name="cancel" scoped="" ref="0x40826be8"/>
        <function-ref name="sendDone" scoped="" ref="0x40826cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x408257f0" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x408257f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408259c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40834530" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40834530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40833118"/>
        <function-ref name="get" scoped="" ref="0x40834e38"/>
        <function-ref name="isSet" scoped="" ref="0x40834b78"/>
        <function-ref name="set" scoped="" ref="0x408333d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40822978" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40822978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40822b50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40822c30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40822d10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40822df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40825158" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40825158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40825330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40830750" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40830750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4082f280"/>
        <function-ref name="clear" scoped="" ref="0x4082f630"/>
        <function-ref name="isValid" scoped="" ref="0x40830ea0"/>
        <function-ref name="set" scoped="" ref="0x4082f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4082dba0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4082dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40830200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4081f0e0" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4081f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081fca8"/>
        <function-ref name="get" scoped="" ref="0x4081f9e8"/>
        <function-ref name="isSet" scoped="" ref="0x4081f728"/>
        <function-ref name="set" scoped="" ref="0x40834010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408223f0" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408223f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408225c8"/>
        <function-ref name="noAck" scoped="" ref="0x408226a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40822788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40824578" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40824578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40824750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40821010" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40821010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x408211e8"/>
        <function-ref name="setRetries" scoped="" ref="0x408212c8"/>
        <function-ref name="getRetries" scoped="" ref="0x408213a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40821488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40821568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40823700" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40823700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408238d8"/>
        <function-ref name="source" scoped="" ref="0x408239b8"/>
        <function-ref name="address" scoped="" ref="0x40823a98"/>
        <function-ref name="destination" scoped="" ref="0x40823b78"/>
        <function-ref name="setSource" scoped="" ref="0x40823c58"/>
        <function-ref name="setDestination" scoped="" ref="0x40823d38"/>
        <function-ref name="type" scoped="" ref="0x40823e18"/>
        <function-ref name="setType" scoped="" ref="0x40823ef8"/>
        <function-ref name="isForMe" scoped="" ref="0x40822010"/>
        <function-ref name="setGroup" scoped="" ref="0x408220f0"/>
        <function-ref name="localGroup" scoped="" ref="0x408221d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4081e950" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4081e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4081eba8"/>
        <function-ref name="setChannel" scoped="" ref="0x4081ec88"/>
        <function-ref name="getChannel" scoped="" ref="0x4081ed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4082e978" loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4082e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4082eb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40824c58" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40824c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40824e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4082ad70" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4082ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40841010"/>
        <function-ref name="stopDone" scoped="" ref="0x408410f0"/>
        <function-ref name="start" scoped="" ref="0x408411d0"/>
        <function-ref name="stop" scoped="" ref="0x408412b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4085c390" loc="81:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4085c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4085b010"/>
        <function-ref name="get" scoped="" ref="0x4085cc98"/>
        <function-ref name="isSet" scoped="" ref="0x4085c9d8"/>
        <function-ref name="set" scoped="" ref="0x4085b2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x4083b198" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x4083b198"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4083b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x4084d8f8" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x4084d8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4084db50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4084dc30"/>
        <function-ref name="request" scoped="" ref="0x4084dd10"/>
        <function-ref name="granted" scoped="" ref="0x4084ddf0"/>
        <function-ref name="isOwner" scoped="" ref="0x4084ded0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4083fe10" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4083fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4083e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40841710" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40841710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408418e8"/>
        <function-ref name="getPayload" scoped="" ref="0x408419c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40841aa8"/>
        <function-ref name="cancel" scoped="" ref="0x40841b88"/>
        <function-ref name="sendDone" scoped="" ref="0x40841c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4083f798" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4083f798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083f970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40848e80" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40848e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x4084f070"/>
        <function-ref name="address" scoped="" ref="0x4084f150"/>
        <function-ref name="destination" scoped="" ref="0x4084f230"/>
        <function-ref name="setSource" scoped="" ref="0x4084f310"/>
        <function-ref name="setDestination" scoped="" ref="0x4084f3f0"/>
        <function-ref name="pan" scoped="" ref="0x4084f4d0"/>
        <function-ref name="setPan" scoped="" ref="0x4084f5b0"/>
        <function-ref name="isForMe" scoped="" ref="0x4084f690"/>
        <function-ref name="localPan" scoped="" ref="0x4084f770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x4084f9f8" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x4084f9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4084fbd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4084fcb0"/>
        <function-ref name="getPayload" scoped="" ref="0x4084fd90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4084fe70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4084c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40844010" loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40844010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40844bd8"/>
        <function-ref name="get" scoped="" ref="0x40844918"/>
        <function-ref name="isSet" scoped="" ref="0x40844658"/>
        <function-ref name="set" scoped="" ref="0x40844e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4084c7b8" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4084c7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4084c990"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4084ca70"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4084cb50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4084cc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x4083dd28" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x4083dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4083df00"/>
        <function-ref name="payloadLength" scoped="" ref="0x4083c010"/>
        <function-ref name="getPayload" scoped="" ref="0x4083c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4083c1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4083c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4083f100" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4083f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083f2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4085a750" loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4085a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408583c0"/>
        <function-ref name="clear" scoped="" ref="0x40858770"/>
        <function-ref name="isValid" scoped="" ref="0x40858010"/>
        <function-ref name="set" scoped="" ref="0x40858b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4085bb78" loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4085bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4085a200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40846c40" loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40846c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40845818"/>
        <function-ref name="get" scoped="" ref="0x40845558"/>
        <function-ref name="isSet" scoped="" ref="0x40845298"/>
        <function-ref name="set" scoped="" ref="0x40845ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4084c230" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4084c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4084c408"/>
        <function-ref name="noAck" scoped="" ref="0x4084c4e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4084c5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40850558" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40850558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40850730"/>
        <function-ref name="getPayload" scoped="" ref="0x40850810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408508f0"/>
        <function-ref name="cancel" scoped="" ref="0x408509d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40850ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x4083e538" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x4083e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4084cdd8" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4084cdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40846010"/>
        <function-ref name="setRetries" scoped="" ref="0x408460f0"/>
        <function-ref name="getRetries" scoped="" ref="0x408461d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x408462b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40846390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40846550" loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40846550"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40846728"/>
        <function-ref name="setChannel" scoped="" ref="0x40846808"/>
        <function-ref name="getChannel" scoped="" ref="0x408468e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4083d010" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4083d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4083d1e8"/>
        <function-ref name="source" scoped="" ref="0x4083d2c8"/>
        <function-ref name="address" scoped="" ref="0x4083d3a8"/>
        <function-ref name="destination" scoped="" ref="0x4083d488"/>
        <function-ref name="setSource" scoped="" ref="0x4083d568"/>
        <function-ref name="setDestination" scoped="" ref="0x4083d648"/>
        <function-ref name="type" scoped="" ref="0x4083d728"/>
        <function-ref name="setType" scoped="" ref="0x4083d808"/>
        <function-ref name="isForMe" scoped="" ref="0x4083d8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x4083d9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x4083daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40857288" loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40857288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40857d88"/>
        <function-ref name="clear" scoped="" ref="0x40856150"/>
        <function-ref name="isValid" scoped="" ref="0x408579d8"/>
        <function-ref name="set" scoped="" ref="0x40856500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40850ce8" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40850ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40850ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4085b680" loc="82:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4085b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4085b858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x4083ec18" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x4083ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4083edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40863588" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40863588"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40863760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x4085e0c8" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4085e0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x4085e2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x40870610" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40870610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408707e8"/>
        <function-ref name="checkFrame" scoped="" ref="0x408708c8"/>
        <function-ref name="source" scoped="" ref="0x408709a8"/>
        <function-ref name="destination" scoped="" ref="0x40870a88"/>
        <function-ref name="setSource" scoped="" ref="0x40870b68"/>
        <function-ref name="setDestination" scoped="" ref="0x40870c48"/>
        <function-ref name="setGroup" scoped="" ref="0x40870d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40875b48" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40875b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40875d20"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40875e00"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40875ee0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x40869010"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x408690f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40894670" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40894670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40894848"/>
        <function-ref name="wait" scoped="" ref="0x40894928"/>
        <function-ref name="cancel" scoped="" ref="0x40894a08"/>
        <function-ref name="isFree" scoped="" ref="0x40894ae8"/>
        <function-ref name="getNow" scoped="" ref="0x40894bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x4086f170" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x4086f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4086fcf0"/>
        <function-ref name="clear" scoped="" ref="0x4087a0b8"/>
        <function-ref name="isValid" scoped="" ref="0x4086f940"/>
        <function-ref name="set" scoped="" ref="0x4087a468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x4085f3a0" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x4085f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x4085f578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40865cf8" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40865cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40865ed0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x4086b010"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4086b0f0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4086b1d0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4086b2b0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4086b390"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4086b470"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4086b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x4087b098" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4087b098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4087b270"/>
        <function-ref name="getDSN" scoped="" ref="0x4087b350"/>
        <function-ref name="setFCF" scoped="" ref="0x4087b430"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4087b510"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4087b5f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4087b6d0"/>
        <function-ref name="setDSN" scoped="" ref="0x4087b7b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x4087b890"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4087b970"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4087ba50"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4087bb30"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4087bc10"/>
        <function-ref name="localAddr" scoped="" ref="0x4087bcf0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4087be50"/>
        <function-ref name="localPan" scoped="" ref="0x40874010"/>
        <function-ref name="setDestAddr" scoped="" ref="0x408740f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x408741d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x408742b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40874390"/>
        <function-ref name="isForMe" scoped="" ref="0x40874470"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40874550"/>
        <function-ref name="getFCF" scoped="" ref="0x40874630"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40874710"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408747f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x408748d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40860430" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40860430"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40860608"/>
        <function-ref name="reportChannelError" scoped="" ref="0x408606e8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x408607c8"/>
        <function-ref name="getSender" scoped="" ref="0x408608a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x40877198" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40877198"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40877370"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40877450"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40877530"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40877610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x40890798" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x40890798"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40890970"/>
        <function-ref name="payloadLength" scoped="" ref="0x40890a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40890b30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40890c10"/>
        <function-ref name="headerLength" scoped="" ref="0x40890cf0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40890dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x4086ab40" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x4086ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4086ad18"/>
        <function-ref name="headerLength" scoped="" ref="0x4086adf8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4086aed8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40851010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x408b53d0" loc="41:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x408b53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408b55b8"/>
        <function-ref name="wait" scoped="" ref="0x408b5698"/>
        <function-ref name="cancel" scoped="" ref="0x408b5778"/>
        <function-ref name="isFree" scoped="" ref="0x408b5858"/>
        <function-ref name="getNow" scoped="" ref="0x408b5938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x408b5c88" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408b5c88"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40439b38"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408cf150"/>
        <function-ref name="fired" scoped="" ref="0x408b4908"/>
        <function-ref name="startAt" scoped="" ref="0x408b4df8"/>
        <function-ref name="isRunning" scoped="" ref="0x408b4b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x408cf3c8"/>
        <function-ref name="start" scoped="" ref="0x408b43f0"/>
        <function-ref name="stop" scoped="" ref="0x408b4690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40ff5250" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40ff5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ff5438"/>
        <function-ref name="wait" scoped="" ref="0x40ff5518"/>
        <function-ref name="cancel" scoped="" ref="0x40ff55f8"/>
        <function-ref name="isFree" scoped="" ref="0x40ff56d8"/>
        <function-ref name="getNow" scoped="" ref="0x40ff57b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40ff5a48" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ff5a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40439b38"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ff3010"/>
        <function-ref name="fired" scoped="" ref="0x40ff4718"/>
        <function-ref name="startAt" scoped="" ref="0x40ff4c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40ff4990"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ff3288"/>
        <function-ref name="start" scoped="" ref="0x40ff4200"/>
        <function-ref name="stop" scoped="" ref="0x40ff44a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40ff3498" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40ff3498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40ff3670"/>
        <function-ref name="suspend" scoped="" ref="0x40ff3750"/>
        <function-ref name="resume" scoped="" ref="0x40ff3830"/>
        <function-ref name="run" scoped="" ref="0x40ff3910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x408d1e18" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x408d1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x408ce010"/>
        <function-ref name="suspend" scoped="" ref="0x408ce0f0"/>
        <function-ref name="resume" scoped="" ref="0x408ce1d0"/>
        <function-ref name="run" scoped="" ref="0x408ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40952f20" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40952f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40951110"/>
        <function-ref name="cancel" scoped="" ref="0x409511f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409512d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40951430" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40951430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40951608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40953c28" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40953c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40953e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x409375b0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x409375b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40937788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40937868"/>
        <function-ref name="getPayload" scoped="" ref="0x40937948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40937a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40937b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40937ce0" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40937ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40937ec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40953010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409530f0"/>
        <function-ref name="cancel" scoped="" ref="0x409531d0"/>
        <function-ref name="sendDone" scoped="" ref="0x409532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40953868" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40953868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40953a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40952788" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40952788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40952960"/>
        <function-ref name="payloadLength" scoped="" ref="0x40952a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40952b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40952c00"/>
        <function-ref name="headerLength" scoped="" ref="0x40952ce0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40952dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40951768" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40951768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40951940"/>
        <function-ref name="checkFrame" scoped="" ref="0x40951a20"/>
        <function-ref name="source" scoped="" ref="0x40951b00"/>
        <function-ref name="destination" scoped="" ref="0x40951be0"/>
        <function-ref name="setSource" scoped="" ref="0x40951cc0"/>
        <function-ref name="setDestination" scoped="" ref="0x40951da0"/>
        <function-ref name="setGroup" scoped="" ref="0x40951e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40953488" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40953488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40953670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40952030" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40952030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40952218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40938990" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40938990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40938b68"/>
        <function-ref name="source" scoped="" ref="0x40938c48"/>
        <function-ref name="address" scoped="" ref="0x40938d28"/>
        <function-ref name="destination" scoped="" ref="0x40938e08"/>
        <function-ref name="setSource" scoped="" ref="0x40938ee8"/>
        <function-ref name="setDestination" scoped="" ref="0x40937010"/>
        <function-ref name="type" scoped="" ref="0x409370f0"/>
        <function-ref name="setType" scoped="" ref="0x409371d0"/>
        <function-ref name="isForMe" scoped="" ref="0x409372b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40937390"/>
        <function-ref name="localGroup" scoped="" ref="0x40937470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40952410" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40952410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409525f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4101d090" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4101d090"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4101d268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4101eb78" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4101eb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4101ed50"/>
        <function-ref name="cancel" scoped="" ref="0x4101ee30"/>
        <function-ref name="sendDone" scoped="" ref="0x4101ef10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4101f868" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4101f868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4101fa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41020230" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41020230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41020408"/>
        <function-ref name="payloadLength" scoped="" ref="0x410204e8"/>
        <function-ref name="getPayload" scoped="" ref="0x410205c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410206a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41020788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41020960" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41020960"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41020b48"/>
        <function-ref name="getPayload" scoped="" ref="0x41020c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41020d08"/>
        <function-ref name="cancel" scoped="" ref="0x41020de8"/>
        <function-ref name="sendDone" scoped="" ref="0x41020ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4101f4a8" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4101f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4101f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41028e60" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41028e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41022050"/>
        <function-ref name="payloadLength" scoped="" ref="0x41022130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41022210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410222f0"/>
        <function-ref name="headerLength" scoped="" ref="0x410223d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x410224b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4101d3c8" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4101d3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4101d620"/>
        <function-ref name="checkFrame" scoped="" ref="0x4101d700"/>
        <function-ref name="source" scoped="" ref="0x4101d7e0"/>
        <function-ref name="destination" scoped="" ref="0x4101d8c0"/>
        <function-ref name="setSource" scoped="" ref="0x4101d9a0"/>
        <function-ref name="setDestination" scoped="" ref="0x4101da80"/>
        <function-ref name="setGroup" scoped="" ref="0x4101db60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4101dca0" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4101dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4101de78"/>
        <function-ref name="changed" scoped="" ref="0x4101c010"/>
        <function-ref name="amGroup" scoped="" ref="0x4101c0f0"/>
        <function-ref name="setAddress" scoped="" ref="0x4101c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4101e3e0" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4101e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4101e5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4101e698"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4101e778"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4101e858"/>
        <function-ref name="headerLength" scoped="" ref="0x4101e938"/>
        <function-ref name="metadataLength" scoped="" ref="0x4101ea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4101f0c8" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4101f0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4101f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x4101fc48" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x4101fc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4101fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410225f0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410225f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410227c8"/>
        <function-ref name="source" scoped="" ref="0x410228a8"/>
        <function-ref name="address" scoped="" ref="0x41022988"/>
        <function-ref name="destination" scoped="" ref="0x41022a68"/>
        <function-ref name="setSource" scoped="" ref="0x41022b48"/>
        <function-ref name="setDestination" scoped="" ref="0x41022c28"/>
        <function-ref name="type" scoped="" ref="0x41022d08"/>
        <function-ref name="setType" scoped="" ref="0x41022de8"/>
        <function-ref name="isForMe" scoped="" ref="0x41022ec8"/>
        <function-ref name="setGroup" scoped="" ref="0x41020010"/>
        <function-ref name="localGroup" scoped="" ref="0x410200f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x4101e068" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x4101e068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4101e250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40942010" loc="54:/usr/src/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40942010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x409421e8"/>
        <function-ref name="changed" scoped="" ref="0x409422c8"/>
        <function-ref name="amGroup" scoped="" ref="0x409423a8"/>
        <function-ref name="setAddress" scoped="" ref="0x40942488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4094ca60" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4094ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4094cc38"/>
        <function-ref name="cancel" scoped="" ref="0x4094cd18"/>
        <function-ref name="sendDone" scoped="" ref="0x4094cdf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4094b010" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4094b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4094b1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4094b2c8"/>
        <function-ref name="request" scoped="" ref="0x4094b3a8"/>
        <function-ref name="granted" scoped="" ref="0x4094b488"/>
        <function-ref name="isOwner" scoped="" ref="0x4094b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4094c538" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4094c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4094c710"/>
        <function-ref name="cancel" scoped="" ref="0x4094c7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4094c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4095eb60" loc="86:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4095eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4095ed48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4095ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409864c0" loc="89:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409864c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409866a8"/>
        <function-ref name="configure" scoped="" ref="0x40986788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4095e420" loc="85:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4095e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4095e608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4095e6e8"/>
        <function-ref name="request" scoped="" ref="0x4095e7c8"/>
        <function-ref name="granted" scoped="" ref="0x4095e8a8"/>
        <function-ref name="isOwner" scoped="" ref="0x4095e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40986010" loc="87:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40986010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x409861e8"/>
        <function-ref name="userId" scoped="" ref="0x409862c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41065d08" loc="44:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41065d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41065ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41063060" loc="45:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41063060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41063238"/>
        <function-ref name="isEmpty" scoped="" ref="0x41063318"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410633f8"/>
        <function-ref name="dequeue" scoped="" ref="0x410634d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410627a8" loc="52:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410627a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41062990"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41062a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41060088" loc="56:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41060088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41060270"/>
        <function-ref name="configure" scoped="" ref="0x41060350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x410604b0" loc="57:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410604b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41060688"/>
        <function-ref name="isEmpty" scoped="" ref="0x41060768"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41060848"/>
        <function-ref name="dequeue" scoped="" ref="0x41060928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41062068" loc="51:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41062068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41062250"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41062330"/>
        <function-ref name="request" scoped="" ref="0x41062410"/>
        <function-ref name="granted" scoped="" ref="0x410624f0"/>
        <function-ref name="isOwner" scoped="" ref="0x410625d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41062bb0" loc="53:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41062bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41062d88"/>
        <function-ref name="userId" scoped="" ref="0x41062e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41060aa8" loc="69:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41060aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41060c80"/>
        <function-ref name="runTask" scoped="" ref="0x41060d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409a79e8" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409a79e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a7bc0"/>
        <function-ref name="cancel" scoped="" ref="0x409a7ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x409a7d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409a7ee0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409a7ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a60e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x409a9488" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x409a9488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x409a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x409833b0" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x409833b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40983588"/>
        <function-ref name="payloadLength" scoped="" ref="0x40983668"/>
        <function-ref name="getPayload" scoped="" ref="0x40983748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40983828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40983908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x409a7250" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409a7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409a7428"/>
        <function-ref name="payloadLength" scoped="" ref="0x409a7508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409a75e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409a76c8"/>
        <function-ref name="headerLength" scoped="" ref="0x409a77a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409a7888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x409a97d0" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x409a97d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x409a99a8"/>
        <function-ref name="getDSN" scoped="" ref="0x409a9a88"/>
        <function-ref name="setFCF" scoped="" ref="0x409a9b68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x409a9c48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x409a9d28"/>
        <function-ref name="createDataFrame" scoped="" ref="0x409a9e08"/>
        <function-ref name="setDSN" scoped="" ref="0x409a9ee8"/>
        <function-ref name="createAckReply" scoped="" ref="0x409a8010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x409a80f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x409a81d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x409a82b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x409a8390"/>
        <function-ref name="localAddr" scoped="" ref="0x409a8470"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409a85d0"/>
        <function-ref name="localPan" scoped="" ref="0x409a86b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x409a8790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x409a8870"/>
        <function-ref name="setFramePending" scoped="" ref="0x409a8950"/>
        <function-ref name="setDestPan" scoped="" ref="0x409a8a30"/>
        <function-ref name="isForMe" scoped="" ref="0x409a8b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409a8bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x409a8cd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409a8db0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x409a8e90"/>
        <function-ref name="getFramePending" scoped="" ref="0x409a7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40983a48" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40983a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40983c20"/>
        <function-ref name="getPayload" scoped="" ref="0x40983d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40983de0"/>
        <function-ref name="cancel" scoped="" ref="0x40983ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x409a9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x409a9170" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x409a9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a9348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409c4280" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409c4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c4458"/>
        <function-ref name="cancel" scoped="" ref="0x409c4538"/>
        <function-ref name="sendDone" scoped="" ref="0x409c4618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409c4778" loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409c4778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x409a3a58" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x409a3a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409a3c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x409a3d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409a3df0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409a3ed0"/>
        <function-ref name="headerLength" scoped="" ref="0x409c2010"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x409c2748" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x409c2748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c2920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409c4ab0" loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409c4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c4c88"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c4d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c4e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c4f28"/>
        <function-ref name="headerLength" scoped="" ref="0x409e2018"/>
        <function-ref name="metadataLength" scoped="" ref="0x409e20f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x409c2250" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x409c2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c2428"/>
        <function-ref name="cancel" scoped="" ref="0x409c2508"/>
        <function-ref name="sendDone" scoped="" ref="0x409c25e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x409a3228" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x409a3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a3400"/>
        <function-ref name="cancel" scoped="" ref="0x409a34e0"/>
        <function-ref name="sendDone" scoped="" ref="0x409a35c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x409a3720" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x409a3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a38f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x409c2a80" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x409c2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409c2c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x409c2d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c2e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409c2ef8"/>
        <function-ref name="headerLength" scoped="" ref="0x409c4010"/>
        <function-ref name="metadataLength" scoped="" ref="0x409c40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40a37170" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40a37170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40a37348"/>
        <function-ref name="address" scoped="" ref="0x40a37428"/>
        <function-ref name="destination" scoped="" ref="0x40a37508"/>
        <function-ref name="setSource" scoped="" ref="0x40a375e8"/>
        <function-ref name="setDestination" scoped="" ref="0x40a376c8"/>
        <function-ref name="pan" scoped="" ref="0x40a377a8"/>
        <function-ref name="setPan" scoped="" ref="0x40a37888"/>
        <function-ref name="isForMe" scoped="" ref="0x40a37968"/>
        <function-ref name="localPan" scoped="" ref="0x40a37a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a37b88" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a37b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a37d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a37e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a37f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a35018"/>
        <function-ref name="headerLength" scoped="" ref="0x40a350f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a351d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40a17658" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a17658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40a17830"/>
        <function-ref name="getDSN" scoped="" ref="0x40a17910"/>
        <function-ref name="setFCF" scoped="" ref="0x40a179f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40a17ad0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40a17bb0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40a17c90"/>
        <function-ref name="setDSN" scoped="" ref="0x40a17d70"/>
        <function-ref name="createAckReply" scoped="" ref="0x40a17e50"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40a16010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40a160f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40a161d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40a162b0"/>
        <function-ref name="localAddr" scoped="" ref="0x40a16390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40a164f0"/>
        <function-ref name="localPan" scoped="" ref="0x40a165d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40a166b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40a16790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40a16870"/>
        <function-ref name="setDestPan" scoped="" ref="0x40a16950"/>
        <function-ref name="isForMe" scoped="" ref="0x40a16a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40a16b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40a16bf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40a16cd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40a16db0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40a16e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a35368" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a35368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a35540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a35620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a35700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a357e0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a358c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a359a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4109e6b0" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4109e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x4109e888"/>
        <function-ref name="address" scoped="" ref="0x4109e968"/>
        <function-ref name="destination" scoped="" ref="0x4109ea48"/>
        <function-ref name="setSource" scoped="" ref="0x4109eb28"/>
        <function-ref name="setDestination" scoped="" ref="0x4109ec08"/>
        <function-ref name="pan" scoped="" ref="0x4109ece8"/>
        <function-ref name="setPan" scoped="" ref="0x4109edc8"/>
        <function-ref name="isForMe" scoped="" ref="0x4109eea8"/>
        <function-ref name="localPan" scoped="" ref="0x4109d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4109d150" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4109d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4109d328"/>
        <function-ref name="payloadLength" scoped="" ref="0x4109d408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4109d4e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4109d5c8"/>
        <function-ref name="headerLength" scoped="" ref="0x4109d6a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4109d788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x41069bc0" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x41069bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x41069d98"/>
        <function-ref name="getDSN" scoped="" ref="0x41069e78"/>
        <function-ref name="setFCF" scoped="" ref="0x4109f010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4109f0f0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4109f1d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4109f2b0"/>
        <function-ref name="setDSN" scoped="" ref="0x4109f390"/>
        <function-ref name="createAckReply" scoped="" ref="0x4109f470"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4109f550"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4109f630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4109f710"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4109f7f0"/>
        <function-ref name="localAddr" scoped="" ref="0x4109f8d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4109fa30"/>
        <function-ref name="localPan" scoped="" ref="0x4109fb10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4109fbf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4109fcd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4109fdb0"/>
        <function-ref name="setDestPan" scoped="" ref="0x4109fe90"/>
        <function-ref name="isForMe" scoped="" ref="0x4109e010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4109e0f0"/>
        <function-ref name="getFCF" scoped="" ref="0x4109e1d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4109e2b0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4109e390"/>
        <function-ref name="getFramePending" scoped="" ref="0x4109e470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4109d8f8" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4109d8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4109dad0"/>
        <function-ref name="changed" scoped="" ref="0x4109dbb0"/>
        <function-ref name="amGroup" scoped="" ref="0x4109dc90"/>
        <function-ref name="setAddress" scoped="" ref="0x4109dd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4109ded0" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4109ded0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4109c0c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4109c1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4109c280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4109c360"/>
        <function-ref name="headerLength" scoped="" ref="0x4109c440"/>
        <function-ref name="metadataLength" scoped="" ref="0x4109c520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a32ca8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a32ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a32e80"/>
        <function-ref name="cancel" scoped="" ref="0x40a5f010"/>
        <function-ref name="sendDone" scoped="" ref="0x40a5f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a5f250" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a5f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a5f428"/>
        <function-ref name="header" scoped="" ref="0x40a5f508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a32388" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a32388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a32560"/>
        <function-ref name="cancel" scoped="" ref="0x40a32640"/>
        <function-ref name="sendDone" scoped="" ref="0x40a32720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a5f668" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a5f668"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40a5f840"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40a5f920"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40a5fa00"/>
        <function-ref name="getSender" scoped="" ref="0x40a5fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a32860" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a32860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a32a38"/>
        <function-ref name="header" scoped="" ref="0x40a32b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x410aea70" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x410aea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410aec48"/>
        <function-ref name="cancel" scoped="" ref="0x410aed28"/>
        <function-ref name="sendDone" scoped="" ref="0x410aee08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x410ad010" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x410ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410ad1e8"/>
        <function-ref name="header" scoped="" ref="0x410ad2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x410ac070" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410ac070"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410ac248"/>
        <function-ref name="clearAll" scoped="" ref="0x410ac328"/>
        <function-ref name="get" scoped="" ref="0x410ac408"/>
        <function-ref name="set" scoped="" ref="0x410ac4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410b1d88" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410b1d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410ae010"/>
        <function-ref name="cancel" scoped="" ref="0x410ae0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x410ae1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x410ad9c0" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x410ad9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x410adb98"/>
        <function-ref name="insertNode" scoped="" ref="0x410adc78"/>
        <function-ref name="getNode" scoped="" ref="0x410add58"/>
        <function-ref name="evicted" scoped="" ref="0x410ade38"/>
        <function-ref name="getIndex" scoped="" ref="0x410adf18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x410ae310" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x410ae310"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410ae4e8"/>
        <function-ref name="header" scoped="" ref="0x410ae5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410ae708" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410ae708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410ae8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x410ad408" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x410ad408"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x410ad5e0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x410ad6c0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x410ad7a0"/>
        <function-ref name="getSender" scoped="" ref="0x410ad880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40a39540" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40a39540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40a39718"/>
        <function-ref name="insertNode" scoped="" ref="0x40a397f8"/>
        <function-ref name="getNode" scoped="" ref="0x40a398d8"/>
        <function-ref name="evicted" scoped="" ref="0x40a399b8"/>
        <function-ref name="getIndex" scoped="" ref="0x40a39a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40a53010" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40a53010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a531e8"/>
        <function-ref name="clearAll" scoped="" ref="0x40a532c8"/>
        <function-ref name="get" scoped="" ref="0x40a533a8"/>
        <function-ref name="set" scoped="" ref="0x40a53488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40a55510" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40a55510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40a556e8"/>
        <function-ref name="insertNode" scoped="" ref="0x40a557c8"/>
        <function-ref name="getNode" scoped="" ref="0x40a558a8"/>
        <function-ref name="evicted" scoped="" ref="0x40a55988"/>
        <function-ref name="getIndex" scoped="" ref="0x40a55a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a55178" loc="41:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a55178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a55350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x410ab4c0" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x410ab4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410ab698"/>
        <function-ref name="clearAll" scoped="" ref="0x410ab778"/>
        <function-ref name="get" scoped="" ref="0x410ab858"/>
        <function-ref name="set" scoped="" ref="0x410ab938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a79440" loc="85:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a79440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a79618"/>
        <function-ref name="cancel" scoped="" ref="0x40a796f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a797d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a79938" loc="86:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a79938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a79b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x40a77010" loc="93:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40a77010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a771e8"/>
        <function-ref name="noAck" scoped="" ref="0x40a772c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a773a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a5dd38" loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a5dd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a5df10"/>
        <function-ref name="cancel" scoped="" ref="0x40a5c010"/>
        <function-ref name="sendDone" scoped="" ref="0x40a5c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a5cc00" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a5cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a5cdd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a5ceb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a79010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a790f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a791d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a792b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a79c70" loc="87:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a79c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a79e48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a79f28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a78018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a780f8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a781d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a782b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x40a78910" loc="92:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40a78910"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a78ae8"/>
        <function-ref name="setRetries" scoped="" ref="0x40a78bc8"/>
        <function-ref name="getRetries" scoped="" ref="0x40a78ca8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a78d88"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a78e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a5c250" loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a5c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a5c428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40a783f8" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a783f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a785d0"/>
        <function-ref name="noAck" scoped="" ref="0x40a786b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a78790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40a5c568" loc="79:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40a5c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a5c740"/>
        <function-ref name="setRetries" scoped="" ref="0x40a5c820"/>
        <function-ref name="getRetries" scoped="" ref="0x40a5c900"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a5c9e0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a5cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a74ba8" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a74ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a74d80"/>
        <function-ref name="stopDone" scoped="" ref="0x40a74e60"/>
        <function-ref name="start" scoped="" ref="0x40a73010"/>
        <function-ref name="stop" scoped="" ref="0x40a730f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a8be10" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a8be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a8a010"/>
        <function-ref name="cancel" scoped="" ref="0x40a8a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a8a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a8a330" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a8a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a8a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a73250" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a73250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a73428"/>
        <function-ref name="cancel" scoped="" ref="0x40a73508"/>
        <function-ref name="sendDone" scoped="" ref="0x40a735e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a73a60" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a73a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a73c38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a73d18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a73df8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a73ed8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a8b010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a8b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40a8b230" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40a8b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40a8b408"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40a8b4e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40a8b5c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40a8b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40a8b838" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40a8b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a8ba10"/>
        <function-ref name="stopDone" scoped="" ref="0x40a8baf0"/>
        <function-ref name="start" scoped="" ref="0x40a8bbd0"/>
        <function-ref name="stop" scoped="" ref="0x40a8bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a73748" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a73748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a73920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a8a668" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a8a668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a8a840"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a8a920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a8aa00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a8aae0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a8abc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a8aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x410d6e98" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x410d6e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x410d20c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x410d21a0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x410d2280"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x410d2360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a86010" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a86010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a861e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40a862c8"/>
        <function-ref name="start" scoped="" ref="0x40a863a8"/>
        <function-ref name="stop" scoped="" ref="0x40a86488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40ab5340" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40ab5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ab5518"/>
        <function-ref name="turnOn" scoped="" ref="0x40ab55f8"/>
        <function-ref name="setChannel" scoped="" ref="0x40ab56d8"/>
        <function-ref name="done" scoped="" ref="0x40ab57b8"/>
        <function-ref name="standby" scoped="" ref="0x40ab5898"/>
        <function-ref name="getChannel" scoped="" ref="0x40ab5978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a865e8" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a865e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a867c0"/>
        <function-ref name="cancel" scoped="" ref="0x40a868a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a86980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40ab4010" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ab4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ab41e8"/>
        <function-ref name="header" scoped="" ref="0x40ab42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a86ae0" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a86ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a86cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40ab5ab8" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ab5ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab5c90"/>
        <function-ref name="ready" scoped="" ref="0x40ab5d70"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab5e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40a86df8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40a86df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40ab5010"/>
        <function-ref name="setChannel" scoped="" ref="0x40ab50f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40ab51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x410ce248" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x410ce248"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410ce420"/>
        <function-ref name="stopDone" scoped="" ref="0x410ce500"/>
        <function-ref name="start" scoped="" ref="0x410ce5e0"/>
        <function-ref name="stop" scoped="" ref="0x410ce6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x410ce820" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x410ce820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410ce9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x410cd8b0" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x410cd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x410cda88"/>
        <function-ref name="turnOn" scoped="" ref="0x410cdb68"/>
        <function-ref name="setChannel" scoped="" ref="0x410cdc48"/>
        <function-ref name="done" scoped="" ref="0x410cdd28"/>
        <function-ref name="standby" scoped="" ref="0x410cde08"/>
        <function-ref name="getChannel" scoped="" ref="0x410cdee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410ceb58" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410ceb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410ced30"/>
        <function-ref name="cancel" scoped="" ref="0x410cee10"/>
        <function-ref name="sendDone" scoped="" ref="0x410ceef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x410cb350" loc="189:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x410cb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410cb528"/>
        <function-ref name="runTask" scoped="" ref="0x410cb608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x410ccad0" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x410ccad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410ccca8"/>
        <function-ref name="header" scoped="" ref="0x410ccd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x410cb788" loc="144:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x410cb788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410cb960"/>
        <function-ref name="runTask" scoped="" ref="0x410cba40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x410cd090" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x410cd090"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410cd268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x410ccf08" loc="322:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x410ccf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410cb0f0"/>
        <function-ref name="runTask" scoped="" ref="0x410cb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x410cc5f8" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x410cc5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410cc7d0"/>
        <function-ref name="ready" scoped="" ref="0x410cc8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x410cc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x410cd3a8" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x410cd3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x410cd580"/>
        <function-ref name="setChannel" scoped="" ref="0x410cd660"/>
        <function-ref name="getChannel" scoped="" ref="0x410cd740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x410cc040" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x410cc040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x410cc218"/>
        <function-ref name="suspend" scoped="" ref="0x410cc2f8"/>
        <function-ref name="resume" scoped="" ref="0x410cc3d8"/>
        <function-ref name="run" scoped="" ref="0x410cc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ad52f0" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ad52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad54c8"/>
        <function-ref name="ready" scoped="" ref="0x40ad55a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad5688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ad57e8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ad57e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ad59c0"/>
        <function-ref name="header" scoped="" ref="0x40ad5aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40ad5be0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40ad5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ad5db8"/>
        <function-ref name="wait" scoped="" ref="0x40ad5e98"/>
        <function-ref name="cancel" scoped="" ref="0x40afa010"/>
        <function-ref name="isFree" scoped="" ref="0x40afa0f0"/>
        <function-ref name="getNow" scoped="" ref="0x40afa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40afa330" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40afa330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40afa508"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40afa5e8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40afa6c8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40afa7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40ad6e90" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ad6e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ad5080"/>
        <function-ref name="header" scoped="" ref="0x40ad5160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40ad69b8" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ad69b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ad6b90"/>
        <function-ref name="ready" scoped="" ref="0x40ad6c70"/>
        <function-ref name="sendDone" scoped="" ref="0x40ad6d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x410eab08" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x410eab08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410eace0"/>
        <function-ref name="ready" scoped="" ref="0x410eadc0"/>
        <function-ref name="sendDone" scoped="" ref="0x410eaea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x410e9030" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x410e9030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410e9208"/>
        <function-ref name="header" scoped="" ref="0x410e92e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x410e9428" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x410e9428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410e9600"/>
        <function-ref name="wait" scoped="" ref="0x410e96e0"/>
        <function-ref name="cancel" scoped="" ref="0x410e97c0"/>
        <function-ref name="isFree" scoped="" ref="0x410e98a0"/>
        <function-ref name="getNow" scoped="" ref="0x410e9980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x410e9ac0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x410e9ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x410e9c98"/>
        <function-ref name="rand32" scoped="" ref="0x410e9d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x410e9ed8" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x410e9ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x410e70c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x410e71a0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x410e7280"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x410e7360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x410ea6c0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x410ea6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410ea898"/>
        <function-ref name="header" scoped="" ref="0x410ea978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x410ea1e8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x410ea1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410ea3c0"/>
        <function-ref name="ready" scoped="" ref="0x410ea4a0"/>
        <function-ref name="sendDone" scoped="" ref="0x410ea580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x410e74e0" loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x410e74e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410e76b8"/>
        <function-ref name="runTask" scoped="" ref="0x410e7798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40afbe98" loc="46:/usr/src/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40afbe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40afd0c0"/>
        <function-ref name="rand32" scoped="" ref="0x40afd1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40afb5d8" loc="45:/usr/src/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40afb5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40afbc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ada330" loc="44:/usr/src/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ada330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ada508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40af9948" loc="48:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40af9948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40af9b20"/>
        <function-ref name="rand32" scoped="" ref="0x40af9c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40af9088" loc="47:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40af9088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40af96b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40afdb40" loc="46:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40afdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40afdd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40aed538" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40aed538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aed710"/>
        <function-ref name="ready" scoped="" ref="0x40aed7f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40aed8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40aeda30" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40aeda30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40aedc08"/>
        <function-ref name="header" scoped="" ref="0x40aedce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40aede28" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40aede28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b21050"/>
        <function-ref name="wait" scoped="" ref="0x40b21130"/>
        <function-ref name="cancel" scoped="" ref="0x40b21210"/>
        <function-ref name="isFree" scoped="" ref="0x40b212f0"/>
        <function-ref name="getNow" scoped="" ref="0x40b213d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40b21e88" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40b21e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b20070"/>
        <function-ref name="get" scoped="" ref="0x40b20150"/>
        <function-ref name="setValue" scoped="" ref="0x40b20230"/>
        <function-ref name="set" scoped="" ref="0x40b20310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b21530" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b21530"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40b21708"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40b217e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40b218c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40b219a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40b21a88"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40b21b68"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40b21c48"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40b21d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40aeeb90" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40aeeb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40aeed68"/>
        <function-ref name="header" scoped="" ref="0x40aeee48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40aee6b8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40aee6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aee890"/>
        <function-ref name="ready" scoped="" ref="0x40aee970"/>
        <function-ref name="sendDone" scoped="" ref="0x40aeea50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40aed010" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40aed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40aed1e8"/>
        <function-ref name="noAck" scoped="" ref="0x40aed2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40aed3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b1b2b0" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b1b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b1b488"/>
        <function-ref name="stopDone" scoped="" ref="0x40b1b568"/>
        <function-ref name="start" scoped="" ref="0x40b1b648"/>
        <function-ref name="stop" scoped="" ref="0x40b1b728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40b35150" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40b35150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b35328"/>
        <function-ref name="request" scoped="" ref="0x40b35408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b336a0" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b336a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b33878"/>
        <function-ref name="ready" scoped="" ref="0x40b33958"/>
        <function-ref name="sendDone" scoped="" ref="0x40b33a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b33b98" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b33b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b33d70"/>
        <function-ref name="header" scoped="" ref="0x40b33e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40b11070" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40b11070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b11248"/>
        <function-ref name="turnOn" scoped="" ref="0x40b11328"/>
        <function-ref name="setChannel" scoped="" ref="0x40b11408"/>
        <function-ref name="done" scoped="" ref="0x40b114e8"/>
        <function-ref name="standby" scoped="" ref="0x40b115c8"/>
        <function-ref name="getChannel" scoped="" ref="0x40b116a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b35548" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b35548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b35720"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b35800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b358e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b359c0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b35aa0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b35b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40b34e68" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40b34e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b330e0"/>
        <function-ref name="turnOn" scoped="" ref="0x40b331c0"/>
        <function-ref name="setChannel" scoped="" ref="0x40b332a0"/>
        <function-ref name="done" scoped="" ref="0x40b33380"/>
        <function-ref name="standby" scoped="" ref="0x40b33460"/>
        <function-ref name="getChannel" scoped="" ref="0x40b33540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40b35ce0" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40b35ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40b35eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b11cc0" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b11cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b11e98"/>
        <function-ref name="header" scoped="" ref="0x40b35010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40b34b30" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40b34b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b34d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40b34060" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40b34060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b34238"/>
        <function-ref name="stopDone" scoped="" ref="0x40b34318"/>
        <function-ref name="start" scoped="" ref="0x40b343f8"/>
        <function-ref name="stop" scoped="" ref="0x40b344d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b32428" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b32428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b32600"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b326e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b327c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b328a0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b32980"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b32a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40b1bd40" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40b1bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b1bf18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b32bc0" loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b32bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40b32d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40b34638" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40b34638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b34810"/>
        <function-ref name="cancel" scoped="" ref="0x40b348f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b349d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b117e8" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b117e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b119c0"/>
        <function-ref name="ready" scoped="" ref="0x40b11aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b11b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40b32010" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40b32010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b321e8"/>
        <function-ref name="request" scoped="" ref="0x40b322c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40b1b868" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40b1b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b1ba40"/>
        <function-ref name="cancel" scoped="" ref="0x40b1bb20"/>
        <function-ref name="sendDone" scoped="" ref="0x40b1bc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40bdabc8" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40bdabc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bdada0"/>
        <function-ref name="get" scoped="" ref="0x40bdae80"/>
        <function-ref name="setValue" scoped="" ref="0x40bd9010"/>
        <function-ref name="set" scoped="" ref="0x40bd90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40bdb330" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40bdb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bdb508"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bdb5e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bdb6c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bdb7a8"/>
        <function-ref name="headerLength" scoped="" ref="0x40bdb888"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bdb968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40bda430" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40bda430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bda608"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bda6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bda7c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bda8a8"/>
        <function-ref name="headerLength" scoped="" ref="0x40bda988"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bdaa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40bdeca8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40bdeca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40bdc7c0"/>
        <function-ref name="clear" scoped="" ref="0x40bdcb70"/>
        <function-ref name="isValid" scoped="" ref="0x40bdc410"/>
        <function-ref name="set" scoped="" ref="0x40bdcf20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40bdbb88" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40bdbb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40bda200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40b2d480" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b2d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40bde010"/>
        <function-ref name="clear" scoped="" ref="0x40bde3c0"/>
        <function-ref name="isValid" scoped="" ref="0x40b2dbd0"/>
        <function-ref name="set" scoped="" ref="0x40bde770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x41138af8" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x41138af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41138cd0"/>
        <function-ref name="get" scoped="" ref="0x41138db0"/>
        <function-ref name="setValue" scoped="" ref="0x41138e90"/>
        <function-ref name="set" scoped="" ref="0x41137010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41138330" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41138330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41138508"/>
        <function-ref name="payloadLength" scoped="" ref="0x411385e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411386c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411387a8"/>
        <function-ref name="headerLength" scoped="" ref="0x41138888"/>
        <function-ref name="metadataLength" scoped="" ref="0x41138968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41136430" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41136430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41136608"/>
        <function-ref name="payloadLength" scoped="" ref="0x411366e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411367c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411368a8"/>
        <function-ref name="headerLength" scoped="" ref="0x41136988"/>
        <function-ref name="metadataLength" scoped="" ref="0x41136a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4113bca8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4113bca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x411397c0"/>
        <function-ref name="clear" scoped="" ref="0x41139b70"/>
        <function-ref name="isValid" scoped="" ref="0x41139410"/>
        <function-ref name="set" scoped="" ref="0x41139f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x41137200" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x41137200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41137848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x41137b08" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x41137b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41136200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4113c4f0" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4113c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4113b010"/>
        <function-ref name="clear" scoped="" ref="0x4113b3c0"/>
        <function-ref name="isValid" scoped="" ref="0x4113cc40"/>
        <function-ref name="set" scoped="" ref="0x4113b770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b4db18" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b4db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b4a200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b4ab18" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b4ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b6e308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b6e7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b6e580"/>
        <function-ref name="overflow" scoped="" ref="0x40b6ea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40b6a380" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40b6a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b6aad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b69010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b6ad48"/>
        <function-ref name="overflow" scoped="" ref="0x40b69288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b6b108" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b6b108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b6b858"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b6bd48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b6bad0"/>
        <function-ref name="overflow" scoped="" ref="0x40b6a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b65128" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b65128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b65878"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b65d68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b65af0"/>
        <function-ref name="overflow" scoped="" ref="0x40b64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b63088" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b63088"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b63260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b634c0" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b634c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b63c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b62110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b63e88"/>
        <function-ref name="overflow" scoped="" ref="0x40b62388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40b62658" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40b62658"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40b5f0b8"/>
        <function-ref name="test" scoped="" ref="0x40b60448"/>
        <function-ref name="get" scoped="" ref="0x40b62ca0"/>
        <function-ref name="reset" scoped="" ref="0x40b606c0"/>
        <function-ref name="getMode" scoped="" ref="0x40b5f358"/>
        <function-ref name="overflow" scoped="" ref="0x40b601d0"/>
        <function-ref name="isOn" scoped="" ref="0x40b60e28"/>
        <function-ref name="set" scoped="" ref="0x40b62f18"/>
        <function-ref name="start" scoped="" ref="0x40b60938"/>
        <function-ref name="stop" scoped="" ref="0x40b60bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b5e828" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b5e828"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40b812c0"/>
        <function-ref name="test" scoped="" ref="0x40b83628"/>
        <function-ref name="get" scoped="" ref="0x40b5ee70"/>
        <function-ref name="reset" scoped="" ref="0x40b838a0"/>
        <function-ref name="getMode" scoped="" ref="0x40b81560"/>
        <function-ref name="overflow" scoped="" ref="0x40b833b0"/>
        <function-ref name="isOn" scoped="" ref="0x40b81048"/>
        <function-ref name="set" scoped="" ref="0x40b83110"/>
        <function-ref name="start" scoped="" ref="0x40b83b18"/>
        <function-ref name="stop" scoped="" ref="0x40b83d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40b7d010" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40b7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40b7ca68"/>
        <function-ref name="test" scoped="" ref="0x40b7dde8"/>
        <function-ref name="fired" scoped="" ref="0x40b7db70"/>
        <function-ref name="get" scoped="" ref="0x40b7d658"/>
        <function-ref name="reset" scoped="" ref="0x40b7c088"/>
        <function-ref name="getMode" scoped="" ref="0x40b7cd08"/>
        <function-ref name="isOn" scoped="" ref="0x40b7c7f0"/>
        <function-ref name="set" scoped="" ref="0x40b7d8d0"/>
        <function-ref name="start" scoped="" ref="0x40b7c300"/>
        <function-ref name="stop" scoped="" ref="0x40b7c578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40b81c28" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40b81c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40b7f698"/>
        <function-ref name="test" scoped="" ref="0x40b80a28"/>
        <function-ref name="fired" scoped="" ref="0x40b807b0"/>
        <function-ref name="force" scoped="" ref="0x40b7fbb0"/>
        <function-ref name="get" scoped="" ref="0x40b80298"/>
        <function-ref name="reset" scoped="" ref="0x40b80ca0"/>
        <function-ref name="getMode" scoped="" ref="0x40b7f938"/>
        <function-ref name="isOn" scoped="" ref="0x40b7f420"/>
        <function-ref name="set" scoped="" ref="0x40b80510"/>
        <function-ref name="start" scoped="" ref="0x40b80f18"/>
        <function-ref name="stop" scoped="" ref="0x40b7f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40b769c8" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40b769c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40b73500"/>
        <function-ref name="test" scoped="" ref="0x40b757d8"/>
        <function-ref name="fired" scoped="" ref="0x40b75560"/>
        <function-ref name="force" scoped="" ref="0x40b73a18"/>
        <function-ref name="get" scoped="" ref="0x40b75048"/>
        <function-ref name="reset" scoped="" ref="0x40b75a50"/>
        <function-ref name="getMode" scoped="" ref="0x40b737a0"/>
        <function-ref name="isOn" scoped="" ref="0x40b73288"/>
        <function-ref name="set" scoped="" ref="0x40b752c0"/>
        <function-ref name="start" scoped="" ref="0x40b75cc8"/>
        <function-ref name="stop" scoped="" ref="0x40b73010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40b92568" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40b92568"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40b92740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40b73e10" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40b73e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40b71878"/>
        <function-ref name="test" scoped="" ref="0x40b72bf8"/>
        <function-ref name="fired" scoped="" ref="0x40b72980"/>
        <function-ref name="force" scoped="" ref="0x40b71d90"/>
        <function-ref name="get" scoped="" ref="0x40b72468"/>
        <function-ref name="reset" scoped="" ref="0x40b72e70"/>
        <function-ref name="getMode" scoped="" ref="0x40b71b18"/>
        <function-ref name="isOn" scoped="" ref="0x40b71600"/>
        <function-ref name="set" scoped="" ref="0x40b726e0"/>
        <function-ref name="start" scoped="" ref="0x40b71110"/>
        <function-ref name="stop" scoped="" ref="0x40b71388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b7b8b0" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b7b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40b76330"/>
        <function-ref name="test" scoped="" ref="0x40b776b8"/>
        <function-ref name="get" scoped="" ref="0x40b7bef8"/>
        <function-ref name="reset" scoped="" ref="0x40b77930"/>
        <function-ref name="getMode" scoped="" ref="0x40b765d0"/>
        <function-ref name="overflow" scoped="" ref="0x40b77440"/>
        <function-ref name="isOn" scoped="" ref="0x40b760b8"/>
        <function-ref name="set" scoped="" ref="0x40b771a0"/>
        <function-ref name="start" scoped="" ref="0x40b77ba8"/>
        <function-ref name="stop" scoped="" ref="0x40b77e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40b92958" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40b92958"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40b92b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40b955a8" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40b955a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40b92010"/>
        <function-ref name="test" scoped="" ref="0x40b943a8"/>
        <function-ref name="fired" scoped="" ref="0x40b94130"/>
        <function-ref name="get" scoped="" ref="0x40b95bf0"/>
        <function-ref name="reset" scoped="" ref="0x40b94620"/>
        <function-ref name="getMode" scoped="" ref="0x40b922b0"/>
        <function-ref name="isOn" scoped="" ref="0x40b94d88"/>
        <function-ref name="set" scoped="" ref="0x40b95e68"/>
        <function-ref name="start" scoped="" ref="0x40b94898"/>
        <function-ref name="stop" scoped="" ref="0x40b94b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40b971a0" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40b971a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40b96c68"/>
        <function-ref name="test" scoped="" ref="0x40b96010"/>
        <function-ref name="fired" scoped="" ref="0x40b97d00"/>
        <function-ref name="force" scoped="" ref="0x40b951a0"/>
        <function-ref name="get" scoped="" ref="0x40b977e8"/>
        <function-ref name="reset" scoped="" ref="0x40b96288"/>
        <function-ref name="getMode" scoped="" ref="0x40b96f08"/>
        <function-ref name="isOn" scoped="" ref="0x40b969f0"/>
        <function-ref name="set" scoped="" ref="0x40b97a60"/>
        <function-ref name="start" scoped="" ref="0x40b96500"/>
        <function-ref name="stop" scoped="" ref="0x40b96778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b67940" loc="48:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b67940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40be0360" loc="49:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40be0360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40be0ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40bdf010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40be0d28"/>
        <function-ref name="overflow" scoped="" ref="0x40bdf288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40bd6ea0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40bd6ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd50c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bd51a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd5280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bd5360"/>
        <function-ref name="headerLength" scoped="" ref="0x40bd5440"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bd5520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40bd56b0" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40bd56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd5888"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bd5968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bd5a48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bd5b28"/>
        <function-ref name="headerLength" scoped="" ref="0x40bd5c08"/>
        <function-ref name="metadataLength" scoped="" ref="0x40bd5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40bd68d8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40bd68d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bd6ac0"/>
        <function-ref name="get" scoped="" ref="0x40bd6ba0"/>
        <function-ref name="setValue" scoped="" ref="0x40bd6c80"/>
        <function-ref name="set" scoped="" ref="0x40bd6d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40beb040" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40beb040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40beb218"/>
        <function-ref name="stopDone" scoped="" ref="0x40beb2f8"/>
        <function-ref name="start" scoped="" ref="0x40beb3d8"/>
        <function-ref name="stop" scoped="" ref="0x40beb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40be9e80" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40be9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c12070"/>
        <function-ref name="request" scoped="" ref="0x40c12150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c104f0" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c104f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c106c8"/>
        <function-ref name="ready" scoped="" ref="0x40c107a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c10888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c109e8" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c109e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c10bc0"/>
        <function-ref name="header" scoped="" ref="0x40c10ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40bebde8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40bebde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40be9010"/>
        <function-ref name="turnOn" scoped="" ref="0x40be90f0"/>
        <function-ref name="setChannel" scoped="" ref="0x40be91d0"/>
        <function-ref name="done" scoped="" ref="0x40be92b0"/>
        <function-ref name="standby" scoped="" ref="0x40be9390"/>
        <function-ref name="getChannel" scoped="" ref="0x40be9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c12290" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c12290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c12468"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c12548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c12628"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c12708"/>
        <function-ref name="headerLength" scoped="" ref="0x40c127e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c128c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40c11c40" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40c11c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c11e98"/>
        <function-ref name="turnOn" scoped="" ref="0x40c10010"/>
        <function-ref name="setChannel" scoped="" ref="0x40c100f0"/>
        <function-ref name="done" scoped="" ref="0x40c101d0"/>
        <function-ref name="standby" scoped="" ref="0x40c102b0"/>
        <function-ref name="getChannel" scoped="" ref="0x40c10390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40c12a28" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40c12a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40c12c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40be9a88" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40be9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40be9c60"/>
        <function-ref name="header" scoped="" ref="0x40be9d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40c11908" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40c11908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c11ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c12d90" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c12d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c11010"/>
        <function-ref name="stopDone" scoped="" ref="0x40c110f0"/>
        <function-ref name="start" scoped="" ref="0x40c111d0"/>
        <function-ref name="stop" scoped="" ref="0x40c112b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c0f250" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c0f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c0f428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c0f508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c0f5e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c0f6c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40c0f7a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c0f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40bebad0" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40bebad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bebca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c0f9e8" loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c0f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40c0fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40c11410" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40c11410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c115e8"/>
        <function-ref name="cancel" scoped="" ref="0x40c116c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c117a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40be95b0" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40be95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be9788"/>
        <function-ref name="ready" scoped="" ref="0x40be9868"/>
        <function-ref name="sendDone" scoped="" ref="0x40be9948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40c10e00" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40c10e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c0f010"/>
        <function-ref name="request" scoped="" ref="0x40c0f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40beb5f8" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40beb5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40beb7d0"/>
        <function-ref name="cancel" scoped="" ref="0x40beb8b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40beb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c0c528" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c0c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c0c700"/>
        <function-ref name="stopDone" scoped="" ref="0x40c0c7e0"/>
        <function-ref name="start" scoped="" ref="0x40c0c8c0"/>
        <function-ref name="stop" scoped="" ref="0x40c0c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40c09408" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40c09408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c095e0"/>
        <function-ref name="request" scoped="" ref="0x40c096c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c079c8" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c079c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c07ba0"/>
        <function-ref name="ready" scoped="" ref="0x40c07c80"/>
        <function-ref name="sendDone" scoped="" ref="0x40c07d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c07ec0" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c07ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c060c0"/>
        <function-ref name="header" scoped="" ref="0x40c061a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40c0b328" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40c0b328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c0b500"/>
        <function-ref name="turnOn" scoped="" ref="0x40c0b5e0"/>
        <function-ref name="setChannel" scoped="" ref="0x40c0b6c0"/>
        <function-ref name="done" scoped="" ref="0x40c0b7a0"/>
        <function-ref name="standby" scoped="" ref="0x40c0b880"/>
        <function-ref name="getChannel" scoped="" ref="0x40c0b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c09800" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c09800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c099d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c09ab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c09b98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c09c78"/>
        <function-ref name="headerLength" scoped="" ref="0x40c09d58"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c09e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40c071b0" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40c071b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c07408"/>
        <function-ref name="turnOn" scoped="" ref="0x40c074e8"/>
        <function-ref name="setChannel" scoped="" ref="0x40c075c8"/>
        <function-ref name="done" scoped="" ref="0x40c076a8"/>
        <function-ref name="standby" scoped="" ref="0x40c07788"/>
        <function-ref name="getChannel" scoped="" ref="0x40c07868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40c08010" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40c08010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40c081e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c09010" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c09010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c091e8"/>
        <function-ref name="header" scoped="" ref="0x40c092c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40c08e48" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40c08e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c07050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c08378" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c08378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c08550"/>
        <function-ref name="stopDone" scoped="" ref="0x40c08630"/>
        <function-ref name="start" scoped="" ref="0x40c08710"/>
        <function-ref name="stop" scoped="" ref="0x40c087f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c06718" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c06718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c068f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c069d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c06ab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c06b90"/>
        <function-ref name="headerLength" scoped="" ref="0x40c06c70"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c06d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40c0b010" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40c0b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c0b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c06eb0" loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c06eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40c050c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40c08950" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40c08950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c08b28"/>
        <function-ref name="cancel" scoped="" ref="0x40c08c08"/>
        <function-ref name="sendDone" scoped="" ref="0x40c08ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40c0baa0" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c0baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c0bc78"/>
        <function-ref name="ready" scoped="" ref="0x40c0bd58"/>
        <function-ref name="sendDone" scoped="" ref="0x40c0be38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40c06300" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40c06300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c064d8"/>
        <function-ref name="request" scoped="" ref="0x40c065b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40c0cae0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40c0cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c0ccb8"/>
        <function-ref name="cancel" scoped="" ref="0x40c0cd98"/>
        <function-ref name="sendDone" scoped="" ref="0x40c0ce78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40c00460" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40c00460"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c00638"/>
        <function-ref name="request" scoped="" ref="0x40c00718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40c27618" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40c27618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c261f8"/>
        <function-ref name="get" scoped="" ref="0x40c27f20"/>
        <function-ref name="isSet" scoped="" ref="0x40c27c60"/>
        <function-ref name="set" scoped="" ref="0x40c264b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40c1b230" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40c1b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c1b408"/>
        <function-ref name="get" scoped="" ref="0x40c1b4e8"/>
        <function-ref name="setValue" scoped="" ref="0x40c1b5c8"/>
        <function-ref name="set" scoped="" ref="0x40c1b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40c1e3a0" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c1e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c1eea0"/>
        <function-ref name="clear" scoped="" ref="0x40c1c280"/>
        <function-ref name="isValid" scoped="" ref="0x40c1eaf0"/>
        <function-ref name="set" scoped="" ref="0x40c1c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40c03250" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40c03250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c03428"/>
        <function-ref name="turnOn" scoped="" ref="0x40c03508"/>
        <function-ref name="setChannel" scoped="" ref="0x40c035e8"/>
        <function-ref name="done" scoped="" ref="0x40c036c8"/>
        <function-ref name="standby" scoped="" ref="0x40c037a8"/>
        <function-ref name="getChannel" scoped="" ref="0x40c03888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40bff288" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40bff288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bffe50"/>
        <function-ref name="get" scoped="" ref="0x40bffb90"/>
        <function-ref name="isSet" scoped="" ref="0x40bff8d0"/>
        <function-ref name="set" scoped="" ref="0x40c27150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c008c8" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c008c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c00aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c00b80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c00c60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c00d40"/>
        <function-ref name="headerLength" scoped="" ref="0x40c00e20"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c00f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c1fac0" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c1fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c1fd18"/>
        <function-ref name="headerLength" scoped="" ref="0x40c1fdf8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c1fed8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40c1e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c00010" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c00010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c001e8"/>
        <function-ref name="header" scoped="" ref="0x40c002c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40c20010" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40c20010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40439b38"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c1f4e0"/>
        <function-ref name="fired" scoped="" ref="0x40c20c78"/>
        <function-ref name="startAt" scoped="" ref="0x40c1f1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40c20ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c1f758"/>
        <function-ref name="start" scoped="" ref="0x40c20760"/>
        <function-ref name="stop" scoped="" ref="0x40c20a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40c269e8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c269e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c255c8"/>
        <function-ref name="get" scoped="" ref="0x40c25308"/>
        <function-ref name="isSet" scoped="" ref="0x40c25048"/>
        <function-ref name="set" scoped="" ref="0x40c25888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40c22508" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c22508"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c22b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40c03a28" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c03a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c03c00"/>
        <function-ref name="ready" scoped="" ref="0x40c03ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c03dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40c25d98" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c25d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c23980"/>
        <function-ref name="get" scoped="" ref="0x40c236c0"/>
        <function-ref name="isSet" scoped="" ref="0x40c23400"/>
        <function-ref name="set" scoped="" ref="0x40c23c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40c1b8f0" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40c1b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c1bac8"/>
        <function-ref name="get" scoped="" ref="0x40c1bba8"/>
        <function-ref name="setValue" scoped="" ref="0x40c1bc88"/>
        <function-ref name="set" scoped="" ref="0x40c1bd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40c1cb60" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40c1cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c1cd38"/>
        <function-ref name="get" scoped="" ref="0x40c1ce18"/>
        <function-ref name="setValue" scoped="" ref="0x40c1cef8"/>
        <function-ref name="set" scoped="" ref="0x40c1b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40c22010" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c22010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40c221e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40c15700" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40c15700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40c158d8"/>
        <function-ref name="request" scoped="" ref="0x40c159b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40c3c8a0" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40c3c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c3b4a0"/>
        <function-ref name="get" scoped="" ref="0x40c3b1e0"/>
        <function-ref name="isSet" scoped="" ref="0x40c3cee8"/>
        <function-ref name="set" scoped="" ref="0x40c3b760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40c35010" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40c35010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40c35760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40c16178" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40c16178"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c16350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40c2f3f0" loc="74:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40c2f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c2f5c8"/>
        <function-ref name="get" scoped="" ref="0x40c2f6a8"/>
        <function-ref name="setValue" scoped="" ref="0x40c2f788"/>
        <function-ref name="set" scoped="" ref="0x40c2f868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40c2e2c8" loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c2e2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c2edc8"/>
        <function-ref name="clear" scoped="" ref="0x40c2d198"/>
        <function-ref name="isValid" scoped="" ref="0x40c2ea18"/>
        <function-ref name="set" scoped="" ref="0x40c2d548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40c164f8" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40c164f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40c166d0"/>
        <function-ref name="turnOn" scoped="" ref="0x40c167b0"/>
        <function-ref name="setChannel" scoped="" ref="0x40c16890"/>
        <function-ref name="done" scoped="" ref="0x40c16970"/>
        <function-ref name="standby" scoped="" ref="0x40c16a50"/>
        <function-ref name="getChannel" scoped="" ref="0x40c16b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40c35ac8" loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c35ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="TRadio" ref="0x40439890"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c34128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40c14538" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40c14538"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c3c118"/>
        <function-ref name="get" scoped="" ref="0x40c14e40"/>
        <function-ref name="isSet" scoped="" ref="0x40c14b80"/>
        <function-ref name="set" scoped="" ref="0x40c3c3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c15b68" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c15b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c15d40"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c15e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c15f00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c14010"/>
        <function-ref name="headerLength" scoped="" ref="0x40c140f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c141d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c305c8" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c305c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c307a0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c30880"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c30960"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40c30a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c152b0" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c152b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c15488"/>
        <function-ref name="header" scoped="" ref="0x40c15568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40c37780" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40c37780"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40c379d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40c3bc90" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40c3bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c39868"/>
        <function-ref name="get" scoped="" ref="0x40c395a8"/>
        <function-ref name="isSet" scoped="" ref="0x40c392e8"/>
        <function-ref name="set" scoped="" ref="0x40c39b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40c17af0" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40c17af0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c17cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40c16cd0" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40c16cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c16ea8"/>
        <function-ref name="ready" scoped="" ref="0x40c15010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c150f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40c380e0" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c380e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c38ca8"/>
        <function-ref name="get" scoped="" ref="0x40c389e8"/>
        <function-ref name="isSet" scoped="" ref="0x40c38728"/>
        <function-ref name="set" scoped="" ref="0x40c37010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40c2b010" loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40c2b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40c2b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x40c34530" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40c34530"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40c30010"/>
        <function-ref name="test" scoped="" ref="0x40c32320"/>
        <function-ref name="fired" scoped="" ref="0x40c320a8"/>
        <function-ref name="get" scoped="" ref="0x40c34b78"/>
        <function-ref name="reset" scoped="" ref="0x40c32598"/>
        <function-ref name="getMode" scoped="" ref="0x40c302b0"/>
        <function-ref name="isOn" scoped="" ref="0x40c32d00"/>
        <function-ref name="set" scoped="" ref="0x40c34df0"/>
        <function-ref name="start" scoped="" ref="0x40c32810"/>
        <function-ref name="stop" scoped="" ref="0x40c32a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40c2fab0" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40c2fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c2fc88"/>
        <function-ref name="get" scoped="" ref="0x40c2fd68"/>
        <function-ref name="setValue" scoped="" ref="0x40c2fe48"/>
        <function-ref name="set" scoped="" ref="0x40c2ff28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40c30cb8" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40c30cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c30e90"/>
        <function-ref name="get" scoped="" ref="0x40c2f010"/>
        <function-ref name="setValue" scoped="" ref="0x40c2f0f0"/>
        <function-ref name="set" scoped="" ref="0x40c2f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40c373c0" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c373c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40c37598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40c2d988" loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40c2d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40c2db60"/>
        <function-ref name="suspend" scoped="" ref="0x40c2dc40"/>
        <function-ref name="resume" scoped="" ref="0x40c2dd20"/>
        <function-ref name="run" scoped="" ref="0x40c2de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40cbd340" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40cbd340"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40cbda90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40cbb950" loc="53:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40cbb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40cba0b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40cba430" loc="54:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40cba430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cbab80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40cb2088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40cbadf8"/>
        <function-ref name="overflow" scoped="" ref="0x40cb2300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40cae5f8" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40cae5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40433f18"/>
            <typename><typedef-ref name="TMcu" ref="0x4043b2d8"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40caed48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40cad288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40cad010"/>
        <function-ref name="overflow" scoped="" ref="0x40cad500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40cb0320" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40cb0320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421d88"/>
            <typename><typedef-ref name="TMicro" ref="0x40420010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cb0a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40cae010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40cb0ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40cae288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40cab110" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40cab110"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cab758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40caa538" loc="48:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40caa538"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40caab80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40caaed0" loc="49:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40caaed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cd4680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40cd4b70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40cd48f8"/>
        <function-ref name="overflow" scoped="" ref="0x40cd4de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40cd21f8" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40cd21f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cd96c8"/>
        <function-ref name="fired" scoped="" ref="0x40cd2e60"/>
        <function-ref name="startAt" scoped="" ref="0x40cd9388"/>
        <function-ref name="isRunning" scoped="" ref="0x40cd9110"/>
        <function-ref name="getAlarm" scoped="" ref="0x40cd9940"/>
        <function-ref name="start" scoped="" ref="0x40cd2948"/>
        <function-ref name="stop" scoped="" ref="0x40cd2be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x41177550" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x41177550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41175010"/>
        <function-ref name="test" scoped="" ref="0x41176350"/>
        <function-ref name="fired" scoped="" ref="0x411760d8"/>
        <function-ref name="force" scoped="" ref="0x41175528"/>
        <function-ref name="get" scoped="" ref="0x41177b98"/>
        <function-ref name="reset" scoped="" ref="0x411765c8"/>
        <function-ref name="getMode" scoped="" ref="0x411752b0"/>
        <function-ref name="isOn" scoped="" ref="0x41176d30"/>
        <function-ref name="set" scoped="" ref="0x41177e10"/>
        <function-ref name="start" scoped="" ref="0x41176840"/>
        <function-ref name="stop" scoped="" ref="0x41176ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4117cad0" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4117cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4117a010"/>
        <function-ref name="fired" scoped="" ref="0x4117b748"/>
        <function-ref name="startAt" scoped="" ref="0x4117bc38"/>
        <function-ref name="isRunning" scoped="" ref="0x4117b9c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4117a288"/>
        <function-ref name="start" scoped="" ref="0x4117b230"/>
        <function-ref name="stop" scoped="" ref="0x4117b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4117c698" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4117c698"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4117c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4117a558" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4117a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41177010"/>
        <function-ref name="test" scoped="" ref="0x41178350"/>
        <function-ref name="get" scoped="" ref="0x4117aba0"/>
        <function-ref name="reset" scoped="" ref="0x411785c8"/>
        <function-ref name="getMode" scoped="" ref="0x411772b0"/>
        <function-ref name="overflow" scoped="" ref="0x411780d8"/>
        <function-ref name="isOn" scoped="" ref="0x41178d30"/>
        <function-ref name="set" scoped="" ref="0x4117ae18"/>
        <function-ref name="start" scoped="" ref="0x41178840"/>
        <function-ref name="stop" scoped="" ref="0x41178ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d0d930" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d0d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d794c8"/>
        <function-ref name="fired" scoped="" ref="0x40d0c768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d0ce70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d0cc18"/>
        <function-ref name="getdt" scoped="" ref="0x40d79978"/>
        <function-ref name="gett0" scoped="" ref="0x40d79720"/>
        <function-ref name="isRunning" scoped="" ref="0x40d0c9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d0c010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d791a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d0c290"/>
        <function-ref name="stop" scoped="" ref="0x40d0c510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40d098e8" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40d098e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d043f8"/>
        <function-ref name="fired" scoped="" ref="0x40d06680"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d06d88"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d06b30"/>
        <function-ref name="getdt" scoped="" ref="0x40d048a8"/>
        <function-ref name="gett0" scoped="" ref="0x40d04650"/>
        <function-ref name="isRunning" scoped="" ref="0x40d068d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d09f10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d040d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d061a8"/>
        <function-ref name="stop" scoped="" ref="0x40d06428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d31750" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d31750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d30c18"/>
        <function-ref name="fired" scoped="" ref="0x40d303e8"/>
        <function-ref name="startAt" scoped="" ref="0x40d308d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40d30660"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d30e90"/>
        <function-ref name="start" scoped="" ref="0x40d31ea0"/>
        <function-ref name="stop" scoped="" ref="0x40d30170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x411a5190" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x411a5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411a4640"/>
        <function-ref name="fired" scoped="" ref="0x411a5df8"/>
        <function-ref name="startAt" scoped="" ref="0x411a4300"/>
        <function-ref name="isRunning" scoped="" ref="0x411a4088"/>
        <function-ref name="getAlarm" scoped="" ref="0x411a48b8"/>
        <function-ref name="start" scoped="" ref="0x411a58e0"/>
        <function-ref name="stop" scoped="" ref="0x411a5b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x41196b40" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x41196b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41193600"/>
        <function-ref name="test" scoped="" ref="0x41194990"/>
        <function-ref name="fired" scoped="" ref="0x41194718"/>
        <function-ref name="force" scoped="" ref="0x41193b18"/>
        <function-ref name="get" scoped="" ref="0x41194200"/>
        <function-ref name="reset" scoped="" ref="0x41194c08"/>
        <function-ref name="getMode" scoped="" ref="0x411938a0"/>
        <function-ref name="isOn" scoped="" ref="0x41193388"/>
        <function-ref name="set" scoped="" ref="0x41194478"/>
        <function-ref name="start" scoped="" ref="0x41194e80"/>
        <function-ref name="stop" scoped="" ref="0x41193110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41199130" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41199130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41198600"/>
        <function-ref name="fired" scoped="" ref="0x41199d98"/>
        <function-ref name="startAt" scoped="" ref="0x411982c0"/>
        <function-ref name="isRunning" scoped="" ref="0x41198048"/>
        <function-ref name="getAlarm" scoped="" ref="0x41198878"/>
        <function-ref name="start" scoped="" ref="0x41199880"/>
        <function-ref name="stop" scoped="" ref="0x41199b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4119bcd0" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4119bcd0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4119bea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x41198b48" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x41198b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41196600"/>
        <function-ref name="test" scoped="" ref="0x41197990"/>
        <function-ref name="get" scoped="" ref="0x41197200"/>
        <function-ref name="reset" scoped="" ref="0x41197c08"/>
        <function-ref name="getMode" scoped="" ref="0x411968a0"/>
        <function-ref name="overflow" scoped="" ref="0x41197718"/>
        <function-ref name="isOn" scoped="" ref="0x41196388"/>
        <function-ref name="set" scoped="" ref="0x41197478"/>
        <function-ref name="start" scoped="" ref="0x41197e80"/>
        <function-ref name="stop" scoped="" ref="0x41196110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x411a3ad8" loc="61:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x411a3ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411a1068"/>
        <function-ref name="fired" scoped="" ref="0x411a2820"/>
        <function-ref name="startAt" scoped="" ref="0x411a2d10"/>
        <function-ref name="isRunning" scoped="" ref="0x411a2a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x411a12e0"/>
        <function-ref name="start" scoped="" ref="0x411a2308"/>
        <function-ref name="stop" scoped="" ref="0x411a25a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x4119f870" loc="73:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x4119f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4043b6e0"/>
            <typename><typedef-ref name="T62khz" ref="0x4043b888"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4119ed58"/>
        <function-ref name="fired" scoped="" ref="0x4119e528"/>
        <function-ref name="startAt" scoped="" ref="0x4119ea18"/>
        <function-ref name="isRunning" scoped="" ref="0x4119e7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4119d010"/>
        <function-ref name="start" scoped="" ref="0x4119e010"/>
        <function-ref name="stop" scoped="" ref="0x4119e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x411a1630" loc="68:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x411a1630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411a1d80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4119f288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4119f010"/>
        <function-ref name="overflow" scoped="" ref="0x4119f500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40d4ad08" loc="74:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40d4ad08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d4aee0"/>
        <function-ref name="runTask" scoped="" ref="0x40d49010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40d4b398" loc="49:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d4b398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d4a840"/>
        <function-ref name="fired" scoped="" ref="0x40d4a010"/>
        <function-ref name="startAt" scoped="" ref="0x40d4a500"/>
        <function-ref name="isRunning" scoped="" ref="0x40d4a288"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d4aab8"/>
        <function-ref name="start" scoped="" ref="0x40d4bae8"/>
        <function-ref name="stop" scoped="" ref="0x40d4bd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d340a0" loc="48:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d340a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d4db88"/>
        <function-ref name="fired" scoped="" ref="0x40d34e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d4d548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d4d2f0"/>
        <function-ref name="getdt" scoped="" ref="0x40d4b048"/>
        <function-ref name="gett0" scoped="" ref="0x40d4dde0"/>
        <function-ref name="isRunning" scoped="" ref="0x40d4d098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d346c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d4d868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d34948"/>
        <function-ref name="stop" scoped="" ref="0x40d34bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40d7b948" loc="71:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40d7b948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d7bb20"/>
        <function-ref name="runTask" scoped="" ref="0x40d7bc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40d7e688" loc="49:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40d7e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d7b248"/>
        <function-ref name="fired" scoped="" ref="0x40d7d4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d7dbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d7d998"/>
        <function-ref name="getdt" scoped="" ref="0x40d7b6f8"/>
        <function-ref name="gett0" scoped="" ref="0x40d7b4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40d7d740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d7ecb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d7df10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d7d010"/>
        <function-ref name="stop" scoped="" ref="0x40d7d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d75338" loc="48:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d75338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d80ea8"/>
        <function-ref name="fired" scoped="" ref="0x40d80110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d80848"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d805e0"/>
        <function-ref name="getdt" scoped="" ref="0x40d7e398"/>
        <function-ref name="gett0" scoped="" ref="0x40d7e130"/>
        <function-ref name="isRunning" scoped="" ref="0x40d80378"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d75970"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d80b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d75c00"/>
        <function-ref name="stop" scoped="" ref="0x40d75e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40da65a8" loc="36:/usr/src/tinyos/tos/platforms/ucmini/DemoSensorC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40da65a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40da6bd0"/>
        <function-ref name="readDone" scoped="" ref="0x40da6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x40da1510" loc="37:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <component-ref qname="Sht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x40da1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40da1b38"/>
        <function-ref name="readDone" scoped="" ref="0x40da1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x40da47e0" loc="36:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <component-ref qname="Sht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x40da47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40da4e08"/>
        <function-ref name="readDone" scoped="" ref="0x40da1088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalReadDone" ref="0x40daa918" loc="153:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalReadDone" scoped="" ref="0x40daa918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40daaaf0"/>
        <function-ref name="runTask" scoped="" ref="0x40daabd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x40dd3e80" loc="192:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x40dd3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40dd2070"/>
        <function-ref name="runTask" scoped="" ref="0x40dd2150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusPowerManager" ref="0x40db95f8" loc="43:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40db95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40db97d0"/>
        <function-ref name="requestPower" scoped="" ref="0x40db98b0"/>
        <function-ref name="powerOff" scoped="" ref="0x40db9990"/>
        <function-ref name="configure" scoped="" ref="0x40db9a70"/>
        <function-ref name="releasePower" scoped="" ref="0x40db9b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x40d9b0b8" loc="38:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x40d9b0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d9b6e0"/>
        <function-ref name="readDone" scoped="" ref="0x40d9b938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40db9ce0" loc="44:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40db9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40db9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40dbfef8" loc="42:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40dbfef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40dbe0e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40dbe1c0"/>
        <function-ref name="request" scoped="" ref="0x40dbe2a0"/>
        <function-ref name="granted" scoped="" ref="0x40dbe380"/>
        <function-ref name="isOwner" scoped="" ref="0x40dbe460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x40d9d388" loc="37:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x40d9d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d9d9b0"/>
        <function-ref name="readDone" scoped="" ref="0x40d9dc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40d92c70" loc="40:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40d92c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40d982d0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40d98438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d9a2e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40d99558"/>
        <function-ref name="write" scoped="" ref="0x40d9a908"/>
        <function-ref name="readDone" scoped="" ref="0x40d9af28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40d99c38" loc="41:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d99c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dbf730"/>
        <function-ref name="fired" scoped="" ref="0x40d909d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dbf0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d90e80"/>
        <function-ref name="getdt" scoped="" ref="0x40dbfbe0"/>
        <function-ref name="gett0" scoped="" ref="0x40dbf988"/>
        <function-ref name="isRunning" scoped="" ref="0x40d90c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d90278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dbf410"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d904f8"/>
        <function-ref name="stop" scoped="" ref="0x40d90778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dc9010" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="Sht21C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dc9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dc7b00"/>
        <function-ref name="fired" scoped="" ref="0x40dc9d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dc74c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dc7268"/>
        <function-ref name="getdt" scoped="" ref="0x40dc6010"/>
        <function-ref name="gett0" scoped="" ref="0x40dc7d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40dc7010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dc9638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dc77e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40dc98b8"/>
        <function-ref name="stop" scoped="" ref="0x40dc9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40dc1b80" loc="38:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40dc1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40dc1d58"/>
        <function-ref name="requestPower" scoped="" ref="0x40dc1e38"/>
        <function-ref name="powerOff" scoped="" ref="0x40dc1f18"/>
        <function-ref name="configure" scoped="" ref="0x40dc0010"/>
        <function-ref name="releasePower" scoped="" ref="0x40dc00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40dc1430" loc="37:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40dc1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40dc1608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40dc16e8"/>
        <function-ref name="request" scoped="" ref="0x40dc17c8"/>
        <function-ref name="granted" scoped="" ref="0x40dc18a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40dc1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40dc5500" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40dc5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40d982d0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40d98438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dc5b48"/>
        <function-ref name="writeDone" scoped="" ref="0x40dc2dd8"/>
        <function-ref name="write" scoped="" ref="0x40dc2198"/>
        <function-ref name="readDone" scoped="" ref="0x40dc27b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40df0718" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplSht21C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40df0718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40df08f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40df09d0"/>
        <function-ref name="request" scoped="" ref="0x40df0ab0"/>
        <function-ref name="granted" scoped="" ref="0x40df0b90"/>
        <function-ref name="isOwner" scoped="" ref="0x40df0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40df0e60" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplSht21C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40df0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40d982d0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40d98438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40def4d8"/>
        <function-ref name="writeDone" scoped="" ref="0x40ec5778"/>
        <function-ref name="write" scoped="" ref="0x40defaf8"/>
        <function-ref name="readDone" scoped="" ref="0x40ec5158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40de5260" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40de5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40de5438"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40de5518"/>
        <function-ref name="request" scoped="" ref="0x40de55f8"/>
        <function-ref name="granted" scoped="" ref="0x40de56d8"/>
        <function-ref name="isOwner" scoped="" ref="0x40de57b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40de5d98" loc="46:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40de5d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40d982d0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40d98438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40de4400"/>
        <function-ref name="writeDone" scoped="" ref="0x40de2688"/>
        <function-ref name="write" scoped="" ref="0x40de4a20"/>
        <function-ref name="readDone" scoped="" ref="0x40de2068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ddfad8" loc="92:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ddfad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ddfcc0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ddfda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e0ea50" loc="96:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e0ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e0ec38"/>
        <function-ref name="configure" scoped="" ref="0x40e0ed18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40ddfee0" loc="93:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ddfee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e0e0e0"/>
        <function-ref name="requested" scoped="" ref="0x40e0e1c0"/>
        <function-ref name="granted" scoped="" ref="0x40e0e2a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e0e380"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e0e460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ddf398" loc="91:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ddf398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ddf580"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ddf660"/>
        <function-ref name="request" scoped="" ref="0x40ddf740"/>
        <function-ref name="granted" scoped="" ref="0x40ddf820"/>
        <function-ref name="isOwner" scoped="" ref="0x40ddf900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e0e5a0" loc="94:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e0e5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e0e778"/>
        <function-ref name="userId" scoped="" ref="0x40e0e858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411db8b0" loc="44:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411db8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411dba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x411dbbe8" loc="45:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x411dbbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411dbdc0"/>
        <function-ref name="isEmpty" scoped="" ref="0x411dbea0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411d8010"/>
        <function-ref name="dequeue" scoped="" ref="0x411d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411d7568" loc="55:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411d7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411d7750"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411d7830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411d64f0" loc="60:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411d64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411d66d8"/>
        <function-ref name="configure" scoped="" ref="0x411d67b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x411d6918" loc="61:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x411d6918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411d6af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x411d6bd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411d6cb0"/>
        <function-ref name="dequeue" scoped="" ref="0x411d6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x411d7970" loc="56:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411d7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411d7b48"/>
        <function-ref name="requested" scoped="" ref="0x411d7c28"/>
        <function-ref name="granted" scoped="" ref="0x411d7d08"/>
        <function-ref name="isOwner" scoped="" ref="0x411d7de8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411d7ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x411d6ed0" loc="62:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x411d6ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411d50c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411d51a0"/>
        <function-ref name="led1On" scoped="" ref="0x411d5280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411d5360"/>
        <function-ref name="led3Off" scoped="" ref="0x411d5440"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411d5520"/>
        <function-ref name="get" scoped="" ref="0x411d5600"/>
        <function-ref name="led1Off" scoped="" ref="0x411d56e0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x411d57c0"/>
        <function-ref name="led3On" scoped="" ref="0x411d58a0"/>
        <function-ref name="led0On" scoped="" ref="0x411d5980"/>
        <function-ref name="led2Off" scoped="" ref="0x411d5a60"/>
        <function-ref name="led2On" scoped="" ref="0x411d5b40"/>
        <function-ref name="set" scoped="" ref="0x411d5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411d8dc8" loc="54:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411d8dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411d7010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411d70f0"/>
        <function-ref name="request" scoped="" ref="0x411d71d0"/>
        <function-ref name="granted" scoped="" ref="0x411d72b0"/>
        <function-ref name="isOwner" scoped="" ref="0x411d7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411d6030" loc="57:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411d6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411d6208"/>
        <function-ref name="userId" scoped="" ref="0x411d62e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x411d5e20" loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x411d5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411d4010"/>
        <function-ref name="runTask" scoped="" ref="0x411d40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40e0b150" loc="62:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40e0b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40e0b328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40e0b468" loc="63:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e0b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e0b640"/>
        <function-ref name="requested" scoped="" ref="0x40e0b720"/>
        <function-ref name="granted" scoped="" ref="0x40e0b800"/>
        <function-ref name="isOwner" scoped="" ref="0x40e0b8e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e0b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40e34d08" loc="60:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40e34d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e34ee0"/>
        <function-ref name="stop" scoped="" ref="0x40e0b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40e0bb00" loc="64:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e0bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e0bcd8"/>
        <function-ref name="userId" scoped="" ref="0x40e0bdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x40e41eb8" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40e41eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40e400c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e43010" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e43010"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40d982d0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40d98438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e43658"/>
        <function-ref name="writeDone" scoped="" ref="0x40e418e0"/>
        <function-ref name="write" scoped="" ref="0x40e43c78"/>
        <function-ref name="readDone" scoped="" ref="0x40e412c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e40220" loc="46:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e40220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e403f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e404d8"/>
        <function-ref name="led1On" scoped="" ref="0x40e405b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e40698"/>
        <function-ref name="led3Off" scoped="" ref="0x40e40778"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e40858"/>
        <function-ref name="get" scoped="" ref="0x40e40938"/>
        <function-ref name="led1Off" scoped="" ref="0x40e40a18"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40e40af8"/>
        <function-ref name="led3On" scoped="" ref="0x40e40bd8"/>
        <function-ref name="led0On" scoped="" ref="0x40e40cb8"/>
        <function-ref name="led2Off" scoped="" ref="0x40e40d98"/>
        <function-ref name="led2On" scoped="" ref="0x40e40e78"/>
        <function-ref name="set" scoped="" ref="0x40e3f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e320a8" loc="41:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e320a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e32290"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e32370"/>
        <function-ref name="request" scoped="" ref="0x40e32450"/>
        <function-ref name="granted" scoped="" ref="0x40e32530"/>
        <function-ref name="isOwner" scoped="" ref="0x40e32610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40e32898" loc="42:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40e32898"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40d982d0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40d98438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e32ef0"/>
        <function-ref name="writeDone" scoped="" ref="0x40e441e0"/>
        <function-ref name="write" scoped="" ref="0x40e45538"/>
        <function-ref name="readDone" scoped="" ref="0x40e45b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40e44860" loc="43:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40e44860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e44a48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e44b28"/>
        <function-ref name="request" scoped="" ref="0x40e44c08"/>
        <function-ref name="granted" scoped="" ref="0x40e44ce8"/>
        <function-ref name="isOwner" scoped="" ref="0x40e44dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x40e9b660" loc="79:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40e9b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40e9b838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x40e9b9b8" loc="81:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40e9b9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40e9bb90"/>
        <function-ref name="sendCommand" scoped="" ref="0x40e9bc70"/>
        <function-ref name="setStart" scoped="" ref="0x40e9bd50"/>
        <function-ref name="status" scoped="" ref="0x40e9be30"/>
        <function-ref name="hasAcks" scoped="" ref="0x40e9bf10"/>
        <function-ref name="isEnabled" scoped="" ref="0x40e9a010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40e9a0f0"/>
        <function-ref name="read" scoped="" ref="0x40e9a1d0"/>
        <function-ref name="init" scoped="" ref="0x40e9a2b0"/>
        <function-ref name="enableAck" scoped="" ref="0x40e9a390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40e9a470"/>
        <function-ref name="hasStart" scoped="" ref="0x40e9a550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40e9a630"/>
        <function-ref name="commandComplete" scoped="" ref="0x40e9a790"/>
        <function-ref name="enable" scoped="" ref="0x40e9a870"/>
        <function-ref name="write" scoped="" ref="0x40e9a950"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40e9aa30"/>
        <function-ref name="off" scoped="" ref="0x40e9ab10"/>
        <function-ref name="setStop" scoped="" ref="0x40e9abf0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40e9acd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40e9adb0"/>
        <function-ref name="hasStop" scoped="" ref="0x40e9ae90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x40e99030" loc="82:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x40e99030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e99208"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e992e8"/>
        <function-ref name="led1On" scoped="" ref="0x40e993c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e994a8"/>
        <function-ref name="led3Off" scoped="" ref="0x40e99588"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e99668"/>
        <function-ref name="get" scoped="" ref="0x40e99748"/>
        <function-ref name="led1Off" scoped="" ref="0x40e99828"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40e99908"/>
        <function-ref name="led3On" scoped="" ref="0x40e999e8"/>
        <function-ref name="led0On" scoped="" ref="0x40e99ac8"/>
        <function-ref name="led2Off" scoped="" ref="0x40e99ba8"/>
        <function-ref name="led2On" scoped="" ref="0x40e99c88"/>
        <function-ref name="set" scoped="" ref="0x40e99de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x40e98010" loc="83:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x40e98010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e981e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e982c8"/>
        <function-ref name="led1On" scoped="" ref="0x40e983a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e98488"/>
        <function-ref name="led3Off" scoped="" ref="0x40e98568"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e98648"/>
        <function-ref name="get" scoped="" ref="0x40e98728"/>
        <function-ref name="led1Off" scoped="" ref="0x40e98808"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40e988e8"/>
        <function-ref name="led3On" scoped="" ref="0x40e989c8"/>
        <function-ref name="led0On" scoped="" ref="0x40e98aa8"/>
        <function-ref name="led2Off" scoped="" ref="0x40e98b88"/>
        <function-ref name="led2On" scoped="" ref="0x40e98c68"/>
        <function-ref name="set" scoped="" ref="0x40e98dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40e3d2f8" loc="77:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40e3d2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e3d4d0"/>
        <function-ref name="stop" scoped="" ref="0x40e3d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40e3d7a0" loc="78:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40e3d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40d982d0"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40d98438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e3dde8"/>
        <function-ref name="writeDone" scoped="" ref="0x40e9b088"/>
        <function-ref name="write" scoped="" ref="0x40e9c420"/>
        <function-ref name="readDone" scoped="" ref="0x40e9ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40e967d8" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40e967d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40e969b0"/>
        <function-ref name="sendCommand" scoped="" ref="0x40e96a90"/>
        <function-ref name="setStart" scoped="" ref="0x40e96b70"/>
        <function-ref name="status" scoped="" ref="0x40e96c50"/>
        <function-ref name="hasAcks" scoped="" ref="0x40e96d30"/>
        <function-ref name="isEnabled" scoped="" ref="0x40e96e10"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40e96ef0"/>
        <function-ref name="read" scoped="" ref="0x40e93010"/>
        <function-ref name="init" scoped="" ref="0x40e930f0"/>
        <function-ref name="enableAck" scoped="" ref="0x40e931d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40e932b0"/>
        <function-ref name="hasStart" scoped="" ref="0x40e93390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40e93470"/>
        <function-ref name="commandComplete" scoped="" ref="0x40e935d0"/>
        <function-ref name="enable" scoped="" ref="0x40e936b0"/>
        <function-ref name="write" scoped="" ref="0x40e93790"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40e93870"/>
        <function-ref name="off" scoped="" ref="0x40e93950"/>
        <function-ref name="setStop" scoped="" ref="0x40e93a30"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40e93b10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40e93bf0"/>
        <function-ref name="hasStop" scoped="" ref="0x40e93cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40e92858" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40e92858"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40e92a30"/>
        <function-ref name="sendCommand" scoped="" ref="0x40e92b10"/>
        <function-ref name="setStart" scoped="" ref="0x40e92bf0"/>
        <function-ref name="status" scoped="" ref="0x40e92cd0"/>
        <function-ref name="hasAcks" scoped="" ref="0x40e92db0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40e92e90"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40e8f010"/>
        <function-ref name="read" scoped="" ref="0x40e8f0f0"/>
        <function-ref name="init" scoped="" ref="0x40e8f1d0"/>
        <function-ref name="enableAck" scoped="" ref="0x40e8f2b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40e8f390"/>
        <function-ref name="hasStart" scoped="" ref="0x40e8f470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40e8f550"/>
        <function-ref name="commandComplete" scoped="" ref="0x40e8f6b0"/>
        <function-ref name="enable" scoped="" ref="0x40e8f790"/>
        <function-ref name="write" scoped="" ref="0x40e8f870"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40e8f950"/>
        <function-ref name="off" scoped="" ref="0x40e8fa30"/>
        <function-ref name="setStop" scoped="" ref="0x40e8fb10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40e8fbf0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40e8fcd0"/>
        <function-ref name="hasStop" scoped="" ref="0x40e8fdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40e8e010" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40e8e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40e8e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x40e8e418" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x40e8e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e8e5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40e8e6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40e8e7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e8e890"/>
        <function-ref name="get" scoped="" ref="0x40e8e970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e8ea50"/>
        <function-ref name="set" scoped="" ref="0x40e8eb30"/>
        <function-ref name="clr" scoped="" ref="0x40e8ec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40e8c7f8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40e8c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40e8c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x40e8ee18" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x40e8ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e8c010"/>
        <function-ref name="isInput" scoped="" ref="0x40e8c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e8c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e8c2b0"/>
        <function-ref name="get" scoped="" ref="0x40e8c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e8c470"/>
        <function-ref name="set" scoped="" ref="0x40e8c550"/>
        <function-ref name="clr" scoped="" ref="0x40e8c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ed41b8" loc="46:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ed41b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ed4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40ed4520" loc="47:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ed4520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ed46f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ed47d8"/>
        <function-ref name="led1On" scoped="" ref="0x40ed48b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ed4998"/>
        <function-ref name="led3Off" scoped="" ref="0x40ed4a78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ed4b58"/>
        <function-ref name="get" scoped="" ref="0x40ed4c38"/>
        <function-ref name="led1Off" scoped="" ref="0x40ed4d18"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40ed4df8"/>
        <function-ref name="led3On" scoped="" ref="0x40ed4ed8"/>
        <function-ref name="led0On" scoped="" ref="0x40ed3010"/>
        <function-ref name="led2Off" scoped="" ref="0x40ed30f0"/>
        <function-ref name="led2On" scoped="" ref="0x40ed31d0"/>
        <function-ref name="set" scoped="" ref="0x40ed3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40ec46a0" loc="36:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40ec46a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40ec4878"/>
        <function-ref name="requestPower" scoped="" ref="0x40ec4958"/>
        <function-ref name="powerOff" scoped="" ref="0x40ec4a38"/>
        <function-ref name="configure" scoped="" ref="0x40ec4b18"/>
        <function-ref name="releasePower" scoped="" ref="0x40ec4bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40ec0e00" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40ec0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40ebf010"/>
        <function-ref name="requestPower" scoped="" ref="0x40ebf0f0"/>
        <function-ref name="powerOff" scoped="" ref="0x40ebf1d0"/>
        <function-ref name="configure" scoped="" ref="0x40ebf2b0"/>
        <function-ref name="releasePower" scoped="" ref="0x40ebf390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40ebf4f0" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40ebf4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ebf6c8"/>
        <function-ref name="isInput" scoped="" ref="0x40ebf7a8"/>
        <function-ref name="toggle" scoped="" ref="0x40ebf888"/>
        <function-ref name="isOutput" scoped="" ref="0x40ebf968"/>
        <function-ref name="get" scoped="" ref="0x40ebfa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ebfb28"/>
        <function-ref name="set" scoped="" ref="0x40ebfc08"/>
        <function-ref name="clr" scoped="" ref="0x40ebfce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x41212010" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x41212010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x412121e8"/>
        <function-ref name="requestPower" scoped="" ref="0x412122c8"/>
        <function-ref name="powerOff" scoped="" ref="0x412123a8"/>
        <function-ref name="configure" scoped="" ref="0x41212488"/>
        <function-ref name="releasePower" scoped="" ref="0x41212568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4120f330" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4120f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4120f508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x41210928" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x41210928"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41210b00"/>
        <function-ref name="isInput" scoped="" ref="0x41210be0"/>
        <function-ref name="toggle" scoped="" ref="0x41210cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x41210da0"/>
        <function-ref name="get" scoped="" ref="0x41210e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x4120f010"/>
        <function-ref name="set" scoped="" ref="0x4120f0f0"/>
        <function-ref name="clr" scoped="" ref="0x4120f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41212758" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41212758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41210248"/>
        <function-ref name="fired" scoped="" ref="0x412114e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41211bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41211998"/>
        <function-ref name="getdt" scoped="" ref="0x412106f8"/>
        <function-ref name="gett0" scoped="" ref="0x412104a0"/>
        <function-ref name="isRunning" scoped="" ref="0x41211740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41212d80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41211f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x41211010"/>
        <function-ref name="stop" scoped="" ref="0x41211290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4120e4c8" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4120e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40421508"/>
            <typename><typedef-ref name="TMilli" ref="0x404216d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4120b010"/>
        <function-ref name="fired" scoped="" ref="0x4120d268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4120d970"/>
        <function-ref name="isOneShot" scoped="" ref="0x4120d718"/>
        <function-ref name="getdt" scoped="" ref="0x4120b4c0"/>
        <function-ref name="gett0" scoped="" ref="0x4120b268"/>
        <function-ref name="isRunning" scoped="" ref="0x4120d4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4120eaf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4120dc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4120ed70"/>
        <function-ref name="stop" scoped="" ref="0x4120d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ed7280" loc="49:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ed7280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ed7458"/>
        <function-ref name="getPayload" scoped="" ref="0x40ed7538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ed7618"/>
        <function-ref name="cancel" scoped="" ref="0x40ed76f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ed77d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ed7918" loc="50:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ed7918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ed7af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ed7bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ed7cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ed7d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ed7e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f2f010" loc="51:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f2f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f2f1e8"/>
        <function-ref name="source" scoped="" ref="0x40f2f2c8"/>
        <function-ref name="address" scoped="" ref="0x40f2f3a8"/>
        <function-ref name="destination" scoped="" ref="0x40f2f488"/>
        <function-ref name="setSource" scoped="" ref="0x40f2f568"/>
        <function-ref name="setDestination" scoped="" ref="0x40f2f648"/>
        <function-ref name="type" scoped="" ref="0x40f2f728"/>
        <function-ref name="setType" scoped="" ref="0x40f2f808"/>
        <function-ref name="isForMe" scoped="" ref="0x40f2f8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f2f9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x40f2faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f2fc08" loc="52:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f2fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f2fde0"/>
        <function-ref name="noAck" scoped="" ref="0x40f2fec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f2e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x412418a8" loc="49:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412418a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41241a80"/>
        <function-ref name="getPayload" scoped="" ref="0x41241b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41241c40"/>
        <function-ref name="cancel" scoped="" ref="0x41241d20"/>
        <function-ref name="sendDone" scoped="" ref="0x41241e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4123e010" loc="50:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4123e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4123e1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4123e2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4123e3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4123e488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4123e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4123e6a8" loc="51:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4123e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4123e880"/>
        <function-ref name="source" scoped="" ref="0x4123e960"/>
        <function-ref name="address" scoped="" ref="0x4123ea40"/>
        <function-ref name="destination" scoped="" ref="0x4123eb20"/>
        <function-ref name="setSource" scoped="" ref="0x4123ec00"/>
        <function-ref name="setDestination" scoped="" ref="0x4123ece0"/>
        <function-ref name="type" scoped="" ref="0x4123edc0"/>
        <function-ref name="setType" scoped="" ref="0x4123eea0"/>
        <function-ref name="isForMe" scoped="" ref="0x4123d010"/>
        <function-ref name="setGroup" scoped="" ref="0x4123d0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4123d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4123d330" loc="52:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4123d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4123d508"/>
        <function-ref name="noAck" scoped="" ref="0x4123d5e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4123d6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41238440" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41238440"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41238618"/>
        <function-ref name="getPayload" scoped="" ref="0x412386f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412387d8"/>
        <function-ref name="cancel" scoped="" ref="0x412388b8"/>
        <function-ref name="sendDone" scoped="" ref="0x41238998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41238b08" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41238b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41238ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x41238dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41238ea0"/>
        <function-ref name="cancel" scoped="" ref="0x41237010"/>
        <function-ref name="sendDone" scoped="" ref="0x412370f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41237230" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41237230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41237408"/>
        <function-ref name="source" scoped="" ref="0x412374e8"/>
        <function-ref name="address" scoped="" ref="0x412375c8"/>
        <function-ref name="destination" scoped="" ref="0x412376a8"/>
        <function-ref name="setSource" scoped="" ref="0x41237788"/>
        <function-ref name="setDestination" scoped="" ref="0x41237868"/>
        <function-ref name="type" scoped="" ref="0x41237948"/>
        <function-ref name="setType" scoped="" ref="0x41237a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41237b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41237be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41237cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ef74c0" loc="43:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ef74c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ef7698"/>
        <function-ref name="getPayload" scoped="" ref="0x40ef7778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ef7858"/>
        <function-ref name="cancel" scoped="" ref="0x40ef7938"/>
        <function-ref name="sendDone" scoped="" ref="0x40ef7a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40f39b48" loc="48:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f39b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f39d30"/>
        <function-ref name="getPayload" scoped="" ref="0x40f39e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f39ef0"/>
        <function-ref name="cancel" scoped="" ref="0x40f38010"/>
        <function-ref name="sendDone" scoped="" ref="0x40f380f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f393d8" loc="46:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f393d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f395c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f396a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f39780"/>
        <function-ref name="cancel" scoped="" ref="0x40f39860"/>
        <function-ref name="sendDone" scoped="" ref="0x40f39940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40f38e08" loc="50:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f38e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f37010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f370f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f371d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f372b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f37390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40f37510" loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40f37510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f376e8"/>
        <function-ref name="runTask" scoped="" ref="0x40f377c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40f37948" loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40f37948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f37b20"/>
        <function-ref name="runTask" scoped="" ref="0x40f37c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f38230" loc="49:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f38230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f38408"/>
        <function-ref name="source" scoped="" ref="0x40f384e8"/>
        <function-ref name="address" scoped="" ref="0x40f385c8"/>
        <function-ref name="destination" scoped="" ref="0x40f386a8"/>
        <function-ref name="setSource" scoped="" ref="0x40f38788"/>
        <function-ref name="setDestination" scoped="" ref="0x40f38868"/>
        <function-ref name="type" scoped="" ref="0x40f38948"/>
        <function-ref name="setType" scoped="" ref="0x40f38a28"/>
        <function-ref name="isForMe" scoped="" ref="0x40f38b08"/>
        <function-ref name="setGroup" scoped="" ref="0x40f38be8"/>
        <function-ref name="localGroup" scoped="" ref="0x40f38cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f2da70" loc="46:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f2da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f2dc48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f2dd28"/>
        <function-ref name="getPayload" scoped="" ref="0x40f2de08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f2dee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f2c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f2d758" loc="45:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f2d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f2d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f2c150" loc="47:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f2c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f2c328"/>
        <function-ref name="source" scoped="" ref="0x40f2c408"/>
        <function-ref name="address" scoped="" ref="0x40f2c4e8"/>
        <function-ref name="destination" scoped="" ref="0x40f2c5c8"/>
        <function-ref name="setSource" scoped="" ref="0x40f2c6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40f2c788"/>
        <function-ref name="type" scoped="" ref="0x40f2c868"/>
        <function-ref name="setType" scoped="" ref="0x40f2c948"/>
        <function-ref name="isForMe" scoped="" ref="0x40f2ca28"/>
        <function-ref name="setGroup" scoped="" ref="0x40f2cb08"/>
        <function-ref name="localGroup" scoped="" ref="0x40f2cbe8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="50:/usr/src/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40425010" loc="60:/usr/src/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/usr/src/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/usr/src/tinyos/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40453c40" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404536e0" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404538f8" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40453ad8" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4045ba88" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4045b728" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4045b908" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4045b1c8" loc="123:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40451b80" loc="96:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40451a28" loc="96:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4045a898" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4045a540" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4045a738" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40424738" loc="113:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404245e0" loc="113:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4042d730" loc="138:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4042d5d8" loc="138:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40425eb0" loc="104:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40424c48" loc="130:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/usr/src/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40466940" loc="49:/usr/src/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40466940"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40466df0" loc="55:/usr/src/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/usr/src/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x404635d0" loc="63:/usr/src/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40466940"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x404632a0" loc="63:/usr/src/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40463470" loc="63:/usr/src/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40466940"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/usr/src/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404585d0" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
              <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40458088" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40458268" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40458448" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
      <documentation loc="33:/usr/src/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40412438" loc="63:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="60:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40412880" loc="69:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="65:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40412d00" loc="74:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="71:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40411580" loc="85:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="81:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x40419b40" loc="113:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="110:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40419298" loc="102:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="98:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404184b8" loc="134:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="122:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40411138" loc="79:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="76:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40418010" loc="119:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="115:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x40419718" loc="108:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="105:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40412010" loc="58:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="55:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40411e28" loc="96:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="93:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40411a00" loc="91:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="88:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40418c30" loc="149:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="137:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40418ad8" loc="149:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/usr/src/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40460d18" loc="53:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40460d18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4045c520" loc="136:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4045e2c8" loc="83:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4045d460" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4045d118" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4045d300" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4045ec18" loc="98:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4045ce98" loc="151:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4045c968" loc="144:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4045e758" loc="92:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40461388" loc="64:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40461230" loc="64:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4045de48" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4045db00" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4045dce8" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40461a20" loc="73:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404618c8" loc="73:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40461ef0" loc="78:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/usr/src/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4047b1a8" loc="62:/usr/src/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/usr/src/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40482360" loc="60:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40482208" loc="60:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4047a978" loc="31:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40483010" loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4047ae58" loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404836d8" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40483580" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40483c30" loc="53:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x404b31a8" loc="44:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404b3590" loc="45:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404b4a08" loc="42:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404b3d60" loc="47:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404b4dc8" loc="43:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404b3968" loc="46:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404b42c8" loc="40:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404b4658" loc="41:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40333888" loc="67:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40333da0" loc="75:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40530478" loc="68:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40530018" loc="61:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40525bf0" loc="54:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40525688" loc="53:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x40545538" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40545158" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x405440c8" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x405444d8" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405458f0" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x40544e48" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40544cf0" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40545cc0" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x405422c0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x405448f8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/usr/src/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40563e38" loc="65:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40563ce0" loc="65:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405608e0" loc="78:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40560788" loc="78:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4056d878" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056d518" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4056d6f8" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4055fef0" loc="106:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4055f558" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055f218" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4055f3f8" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40570710" loc="59:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405705b8" loc="59:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4056f220" loc="71:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056f0c8" loc="71:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4056fca8" loc="85:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056fb50" loc="85:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x405749e8" loc="177:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404448f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40574890" loc="177:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4056a310" loc="88:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4056a1b8" loc="88:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4056c258" loc="68:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4056c8f0" loc="78:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4056c798" loc="78:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40568c18" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405688b0" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40568ab8" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4056aef8" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4056ab90" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4056ad98" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40567320" loc="147:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405671c8" loc="147:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40567e58" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40567b28" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40567cf8" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404446a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405667d0" loc="136:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40566678" loc="136:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40573688" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404448f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40573328" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40573528" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404448f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40573f00" loc="195:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404448f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/usr/src/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40576270" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40579ef8" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40576110" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40583dd0" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40583a70" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40583c50" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40583510" loc="112:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40576eb0" loc="89:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40576d58" loc="89:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40585ba0" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40585848" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40585a40" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x405bc170" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405aed40" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x405bc010" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x405b1e40" loc="15:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x405ae730" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ae3b8" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x405ae5d0" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/usr/src/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x405de4d0" loc="95:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/usr/src/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405de998" loc="105:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/usr/src/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x405d5b60" loc="54:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x405d5728" loc="49:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x405d2010" loc="56:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x405d2c70" loc="72:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x405d1d60" loc="94:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405d1c08" loc="94:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x405d11a8" loc="79:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x405d2740" loc="65:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405d25e8" loc="65:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x405cf278" loc="100:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x405d1708" loc="85:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x405c7d98" loc="71:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x405c6488" loc="81:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x405c7788" loc="62:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x405c7630" loc="62:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x405c6bc0" loc="91:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405c6a68" loc="91:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x405c9d30" loc="62:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x405d46c8" loc="69:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405d4570" loc="69:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x405d4d60" loc="80:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x405d4c08" loc="80:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/usr/src/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4067e010" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40681bf8" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40681de8" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x4067b410" loc="79:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4067b2b8" loc="79:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4067bc18" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4067b8c8" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4067bab8" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x4067c850" loc="65:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x4068daa8" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4068d558" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4068d748" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4068d940" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x4067cdd8" loc="72:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4067ee70" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4067e920" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4067eb10" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4067ed08" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/usr/src/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4068f2b8" loc="46:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4068f160" loc="46:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4068fb50" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4068f7e8" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x4068f9f0" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4069d3c8" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4069d3c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4069d530" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069d530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4069da18" loc="64:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069d530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4069b510" loc="76:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4069b010" loc="71:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4069b910" loc="82:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x406a6010" loc="44:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x406a8788" loc="42:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x406a55f8" loc="49:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406a54a0" loc="49:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x406a6cc8" loc="47:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x406abef8" loc="40:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x406a8350" loc="41:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x406a8bc8" loc="43:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x406a6410" loc="45:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x406a6918" loc="46:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406a67c0" loc="46:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x406a50c8" loc="48:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4040baf0" loc="62:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403e7470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40332ed0" loc="52:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403f8a98" loc="76:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x4074ad18" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4074ad18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40744490" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40744338" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40745010" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40746230" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4074ad18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407453c8" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x407448a0" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40746b58" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40745f20" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40746770" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4074ad18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40746618" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4074ad18"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40745790" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40745b40" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x40759478" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40759478"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4076cae0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4076c988" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4076e668" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4076e288" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40759970" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40759478"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4076ea20" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4076cef0" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4076c588" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40759eb0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40759478"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40759d58" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40759478"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4076ede8" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4076c1a8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40761ad0" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761ad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4075b188" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4075b030" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4075ecf8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4075e918" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x4075b960" loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4075e010" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4075c0c8" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4075b598" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4075cc20" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4075e550" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761ad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4075e3f8" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761ad0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4075c490" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4075c840" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4032f010" loc="57:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4032f918" loc="72:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4032f450" loc="65:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x408074b0" loc="59:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40807138" loc="59:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40807350" loc="59:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x4081c170" loc="65:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40803da0" loc="65:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x4081c010" loc="65:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x4081cc30" loc="71:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4081cad8" loc="71:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x408038c8" loc="57:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40803248" loc="52:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x408030f0" loc="52:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x408054d0" loc="35:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408054d0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40805638" loc="35:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40805638"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40814a78" loc="63:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40805638"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40814920" loc="63:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40812528" loc="70:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408123d0" loc="70:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40805cc0" loc="49:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40805b68" loc="49:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40813010" loc="78:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40805638"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40812c78" loc="78:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40812e88" loc="78:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40805638"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40819c30" loc="65:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40819ad8" loc="65:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x4081b060" loc="46:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4081acb0" loc="46:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x4081aee8" loc="46:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x408192e0" loc="59:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40819188" loc="59:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x4081bc38" loc="53:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4081b8a0" loc="53:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x4081bad8" loc="53:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40816580" loc="71:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40816428" loc="71:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x408201d0" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408201d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40835510" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408353b8" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40820e68" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408201d0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40820d10" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40820848" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408206f0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40835cb8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408201d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40835940" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40835b58" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x408201d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4082d310" loc="53:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4082d310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4082d7f0" loc="61:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x4081e300" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40821e00" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40821ca8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4081e788" loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x4082e350" loc="47:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4082e1f8" loc="47:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/usr/src/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4084ebd8" loc="120:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4084e2b8" loc="97:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4083bc80" loc="88:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4084e768" loc="102:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4084d2e8" loc="128:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x4084a658" loc="41:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40441178"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4084a500" loc="41:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4083aa58" loc="37:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40441178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4084a088" loc="39:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40441178"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4083af00" loc="39:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408495e0" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40441178"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40849240" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40849480" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40441178"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4084ae28" loc="43:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40441178"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4084aa88" loc="43:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4084acc8" loc="43:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40441178"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40848168" loc="49:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40438ec8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40848010" loc="49:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x408488d8" loc="51:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40438ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40848548" loc="51:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40848778" loc="51:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40438ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40849b50" loc="47:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408499f8" loc="47:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40848d18" loc="53:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40438ec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40839018" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40441178"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4083caa0" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40441178"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4083ccb8" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4083ce98" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40850290" loc="122:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40838f18" loc="122:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40850110" loc="122:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408389b8" loc="110:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408399a8" loc="83:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40839850" loc="83:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408383c0" loc="97:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40838068" loc="97:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40838260" loc="97:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x408633d8" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x4085fee8" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085fd90" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x408715d8" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404448f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40871480" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x40870350" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408701f8" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40873808" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408736b0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40869a50" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408698f8" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40871010" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40873c38" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40873e40" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40873238" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40869eb0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408730d8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40871d60" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404448f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40871a00" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40871c00" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404448f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x40877e40" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40876478" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40875950" loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408757f8" loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x40876b28" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408769d0" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40875240" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408750e8" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40894010" loc="60:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40895758" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x40439b38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40895600" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x40439b38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40895ba0" loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x408950c8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40894488" loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40439b38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x4085f1c0" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085f068" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x40865b38" loc="86:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40865680" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40865308" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40865520" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40868668" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40868510" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x40868d30" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40868bd8" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40866680" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40866308" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40866520" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x408517d8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40868010" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40851ca8" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40851e70" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40866d98" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40866c40" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40882a98" loc="131:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40882940" loc="131:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40883c58" loc="120:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40883b00" loc="120:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4086eb08" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086e7b8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4086e9a8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4086cec0" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086cd68" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x4087e010" loc="156:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087fc30" loc="156:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4087fe30" loc="156:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x4086c828" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086c6d0" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x40882488" loc="125:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40882148" loc="125:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40882328" loc="125:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x40887e98" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40887b20" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40887d38" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x4087f7b8" loc="151:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087f660" loc="151:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x4086c188" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086c030" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x40886ea8" loc="99:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40886d50" loc="99:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x408867f8" loc="94:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40886480" loc="94:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40886698" loc="94:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x4087d708" loc="178:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40441178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x4087e638" loc="162:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087e4e0" loc="162:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x4087d268" loc="173:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40438ec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x4087f190" loc="146:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40881e10" loc="146:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4087f030" loc="146:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x408875e0" loc="81:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40887488" loc="81:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40883648" loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408832f8" loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x408834e8" loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40881360" loc="136:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40881010" loc="136:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40881200" loc="136:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4087dce0" loc="185:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087db88" loc="185:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x408846f8" loc="105:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408843d0" loc="105:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40884598" loc="105:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4086e300" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086e1a8" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x4087ed48" loc="168:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4087ebf0" loc="168:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40881990" loc="141:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40881838" loc="141:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x40884da8" loc="110:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40884c50" loc="110:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40862d08" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408629a8" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40862ba8" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x408601c8" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x4086be70" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086bd18" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x408624d8" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40862380" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40879350" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408791f8" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x4085ec78" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085eb20" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x40879848" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40879f00" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40879da8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x40890550" loc="70:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408903f8" loc="70:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40893b98" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40893a40" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408928a0" loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40892408" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408920a8" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408922a8" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x408934a0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40893348" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40892f20" loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40892dc8" loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x40852b80" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40852680" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40852528" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x4086a2a0" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086a148" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x4086a950" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086a7f8" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408b37f0" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408b37f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x408b3958" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408b3958"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x408cbc58" loc="109:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408b3958"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x408cc950" loc="78:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x408cb610" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408b3958"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408b3958"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x408cb2c0" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408b3958"/></type-var>
          </variable>
          <variable name="dt" ref="0x408cb4b0" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408b3958"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x408ccd98" loc="88:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x408c9138" loc="116:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408b3958"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x408cc010" loc="66:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408b3958"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x408b3e30" loc="66:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x408b3958"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408cc4f0" loc="73:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x408c1880" loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x408c1e50" loc="72:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x408c04f8" loc="79:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x408c1480" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x408f91e0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f9088" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408f82a0" loc="64:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f8148" loc="64:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408f9b50" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f97f8" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408f99f0" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x408f7260" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
              <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f70e8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x408ebcc8" loc="50:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40907558" loc="60:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40907158" loc="55:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404448f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x408eb7d8" loc="45:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404448f8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x408eb470" loc="45:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404448f8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x408eb678" loc="45:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4095c9a8" loc="53:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40959010" loc="61:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40956b90" loc="65:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x409566d0" loc="59:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40958268" loc="90:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40958768" loc="98:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4096f4d0" loc="79:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4095be98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4096f378" loc="79:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4095be98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40970158" loc="53:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40970818" loc="62:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4095be98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409706c0" loc="62:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4095be98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40970dc8" loc="70:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x4095be98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40a2e4f0" loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
              <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a2e378" loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40a31ce0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a31b88" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40a452c8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a45170" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40a45748" loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a29810" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a296b8" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a29d58" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a29c00" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40a27220" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a270c8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40a27ed0" loc="71:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a27d78" loc="71:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40a278f0" loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a27798" loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40a475b8" loc="80:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a47460" loc="80:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40a2ab80" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a2aa28" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40444b58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40a84c98" loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40a81670" loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40a81cb8" loc="63:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40a81b60" loc="63:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40a80138" loc="69:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40a811f0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40a805f0" loc="74:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40a83660" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a83508" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40aa13e8" loc="63:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a83dd8" loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40a83c80" loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/usr/src/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40acb4b8" loc="52:/usr/src/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40acb010" loc="46:/usr/src/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/usr/src/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40adaa70" loc="53:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40adaa70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40afb168" loc="64:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40adaa70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40afb010" loc="64:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40adaa70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40b0dd18" loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b0dbc0" loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b10a08" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b108b0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40b0d1c8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b10e60" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40b0d068" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b0d788" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40b0d630" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404544a0"/>
                <typename><typedef-ref name="message_t" ref="0x40453248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40b16988" loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b16830" loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40b16350" loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c333f0" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c333f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40c33558" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c33558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40c33b70" loc="66:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c33558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40c33a18" loc="66:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c33558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusPowerManager" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
      <function event="" provided="0" name="powerOn" ref="0x40dbbe40" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; This event is called when the bus is powered on and the maximum &#10; specified startup time has elapsed.</short>
          <long>&#10; This event is called when the bus is powered on and the maximum &#10; specified startup time has elapsed. Implementations should&#10; initialize the chip or go into power down mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestPower" ref="0x40dbb4f8" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Requests to power up this bus.</short>
          <long>&#10; Requests to power up this bus. The bus might be already powered&#10; up, in which case the powerOn event will not come.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="powerOff" ref="0x40db93a0" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; This event is called when there are no outstanding power requests&#10; and the keepalive timeout value has expired.</short>
          <long>&#10; This event is called when there are no outstanding power requests&#10; and the keepalive timeout value has expired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40dbb010" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Sets the startup and keepalive timeout values in milliseconds.</short>
          <long>&#10; Sets the startup and keepalive timeout values in milliseconds.&#10; Only the largest numbers are remembered, as the bus might not&#10; be operational if one of the chips on it is not operational.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startup" ref="0x40dbebb0" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="keepalive" ref="0x40dbede0" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="releasePower" ref="0x40dbb978" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Releases the power up request.</short>
          <long>&#10; Releases the power up request. You must call this command exactly&#10; the same number of times as you have called requestPower. If other&#10; chips still want to keep the power (e.g. a measurement is in&#10; progress), then powerOff will not be called.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x40d97010" loc="59:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x40d97010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40d97cb8" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40d98698"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40d97538" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40d98698"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40d97738" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40d97938" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40d97b48" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40d924b0" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d94ce8" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40d94ee8" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40d92130" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40d92340" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40d951d8" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40d98698"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40d96a28" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40d98698"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40d96c28" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40d96e28" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40d95068" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40d943b0" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40d95c20" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40d95e20" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40d94030" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40d94240" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40dda1a8" loc="56:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40ddab90" loc="73:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40dddc40" loc="46:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40dda6b8" loc="65:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40dd81a8" loc="81:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40e38e48" loc="62:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40e3b990" loc="95:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40e3be78" loc="105:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x40e2aa88" loc="46:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x40e673f0" loc="54:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x40e677d0" loc="55:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x40e66168" loc="60:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40e66010" loc="60:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x40e67010" loc="52:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x40e657d0" loc="65:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40e62ac0" loc="84:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40e65d50" loc="67:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40e65bf8" loc="67:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40e61850" loc="89:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40e6a820" loc="49:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x40e6a6c8" loc="49:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x40e653e8" loc="64:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40e65290" loc="64:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40e632c8" loc="68:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x40e66560" loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40e63bd0" loc="75:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x40e67bd8" loc="56:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40e626c0" loc="83:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40e62568" loc="83:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40e61468" loc="88:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40e61310" loc="88:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x40e63768" loc="72:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40e6abb0" loc="50:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x40e66a68" loc="62:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40e66910" loc="62:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x40e621c0" loc="81:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40e62068" loc="81:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40e62f08" loc="85:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x40e66e50" loc="63:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
