<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="46:UcminiSensorC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40427aa8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404a1060"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404a1060"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4049e778"/></to>
    </wire>
    <wire loc="47:UcminiSensorC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x4042c398"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c9d5a8"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/TemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40c9d5a8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40fd2520"/></to>
    </wire>
    <wire loc="48:UcminiSensorC.nc">
      <from><interface-ref name="HumiRead" scoped="" ref="0x404260b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c995f8"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HumidityC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40c995f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4102b010"/></to>
    </wire>
    <wire loc="49:UcminiSensorC.nc">
      <from><interface-ref name="LightRead" scoped="" ref="0x40426da8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40a75ba0"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/LightC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40a75ba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e94ba8"/></to>
    </wire>
    <wire loc="50:UcminiSensorC.nc">
      <from><interface-ref name="PressRead" scoped="" ref="0x40425aa8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c8db38"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/PressureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40c8db38"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f410f0"/></to>
    </wire>
    <wire loc="51:UcminiSensorC.nc">
      <from><interface-ref name="Temp2Read" scoped="" ref="0x4042b7b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c8cda8"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40c8cda8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40fbe3c8"/></to>
    </wire>
    <wire loc="52:UcminiSensorC.nc">
      <from><interface-ref name="ReadRef" scoped="" ref="0x4042eaa0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40ca0ca0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40ca0ca0"/></from>
      <to><interface-ref name="ReadRef" scoped="" ref="0x40fda440"/></to>
    </wire>
    <wire loc="53:UcminiSensorC.nc">
      <from><interface-ref name="Temp3Read" scoped="" ref="0x404294b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4094da68"/></to>
    </wire>
    <wire loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4094da68"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e6c168"/></to>
    </wire>
    <wire loc="54:UcminiSensorC.nc">
      <from><interface-ref name="VoltageRead" scoped="" ref="0x404321d8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40a5dc60"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40a5dc60"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e9aeb8"/></to>
    </wire>
    <wire loc="55:UcminiSensorC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40480ea8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x404a2930"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x404a2930"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40835b58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:UcminiSensorC.nc">
      <from><interface-ref name="MeasSend" scoped="" ref="0x40475b60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d13920"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d13920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41026420"/></to>
    </wire>
    <wire loc="57:UcminiSensorC.nc">
      <from><interface-ref name="CalibSend" scoped="" ref="0x40475410"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d55920"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d55920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x410713b0"/></to>
    </wire>
    <wire loc="58:UcminiSensorC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40474d50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d50c60"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d50c60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4058c858"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:UcminiSensorC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4047be50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d57010"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d57010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058cbb0"/></to>
    </wire>
    <wire loc="60:UcminiSensorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4048b0d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407f0a20"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407f0a20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4080e470"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41013cf0"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ffd668"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cafed8"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f57368"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bc5468"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f2deb8"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ebb010"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a83520"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e622d0"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x407099f8"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x407054c0"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406b7398"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405d2978"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40554c80"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4049eb10"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403f9738"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40825100"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f0a968"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40825100"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4049f470"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4049f470"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404afa48"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40825508"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a5c90"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404be3c0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404a84d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40829450"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404ae238"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x404a84d8"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x404afe38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404a7710"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404a7710"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b58d8"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x404ae608"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x404a4aa8"/></to>
    </wire>
    <wire loc="40:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x404a4aa8"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x404d0308"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404a7ec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40972d98"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404a7b18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408c07f8"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404a7b18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e18470"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404a7b18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4076f010"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404b20e0"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x404a7b18"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404b2490"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x404a7ec8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x404b2858"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x404d3d20"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x404b5d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404be010"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Toggle" scoped="" ref="0x404d5848"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x404e00b8"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x404e00b8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x404f34b0"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x404cfbb8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404e5210"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404e5210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405152b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x404d4680"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40545618"/></to>
    </wire>
    <wire loc="145:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404f34b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051b440"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x40503c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052cdf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404e8210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051b440"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404f0750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525c68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404f98e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405215c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x404ff210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052cdf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404dace8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fda70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404fa4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405215c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x404ed8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051faf8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404f40a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051b440"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404fc670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525c68"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x404dda28"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fda70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404e30a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405152b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x404eb750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051faf8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404f3ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051b440"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404f6750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405215c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x40501ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052cdf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404f12f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525c68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x404db8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fda70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404e1010"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405152b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40502830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052cdf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x404ee4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051faf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404e8c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051b440"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404ef210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525c68"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404f82f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405215c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404e6750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fda70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404e5c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405152b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404ec2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051faf8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404f4a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051b440"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404fb0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525c68"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x404dc4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fda70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404e3a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405152b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404ea210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051faf8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40503210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405215c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404e9670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051b440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404f1ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525c68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404faea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405215c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40500750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052cdf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404da2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fda70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404e1a08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405152b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404fba98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405215c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404eeea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051faf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404f5670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051b440"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404efc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525c68"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404f8ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405215c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404dd030"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fda70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404e4670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405152b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404ecce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051faf8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x405012f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052cdf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404f28e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404eac08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051faf8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404dcea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404fda70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404e2590"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405152b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x4055db10"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x40548b10"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x40548b10"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x4056d3d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x40554258"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x405601d0"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x405601d0"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x404e2590"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40552d30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405625a0"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405625a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405d2d10"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x4055ceb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x4054f7c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x4056d3d0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x4056ce70"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x4056c3a0"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x405757a0"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405d2d10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405ed0f8"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40562e78"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4059cbe8"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4058cbb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405d4310"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4058c858"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4059a3a8"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059bbe8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405d49a8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40590a98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4059a6d0"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x405d2978"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405eed48"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405da840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405891b0"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x405d4ed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405cfc20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x405d35a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405cf618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x405da338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x4074db80"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x405cfc20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x406a1710"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405cf618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406a1350"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x406a1ea0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x405da338"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405eb500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405da840"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x406a0e50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405da840"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40699340"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405da840"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x406a03c0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405f8948"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x406a0898"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x405e87f8"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x405f4c18"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x4069d718"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x405f1548"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4069c608"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4069c608"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406bd330"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406a79e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4069ca88"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4069ca88"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x406bdc20"/></to>
    </wire>
    <wire loc="332:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x4062f7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40607a18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x4061e010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x4062d428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x4069fdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x4069e270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406bb8f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406bd7a0"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406bd7a0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406b7ae8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406bdc20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x406b7f00"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x406bd330"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406b76d0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406c8418"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406bac48"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406bac48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4074c490"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406f3c88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406c8418"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x406f47b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x406f6688"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x406f6688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40709e48"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x406f4be8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x406f6b98"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x406f6b98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x407063a8"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x406f3050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x406f50b8"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x406f50b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x407068c0"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x4070a760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40704390"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x406f5cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40705910"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x4070a268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40705e40"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x407033e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a5c90"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40703b20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40703b20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40b5c758"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40999a78"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x408876f8"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407986f8"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40703010"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4074b6f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4074f3f0"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4074f3f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40762918"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40760b60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4075eb68"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4075eb68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4076f448"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x407775f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40774878"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40774878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4077da80"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x407911d8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4079b6a8"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40781f08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4078cb98"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40781f08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40789f10"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40781f08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4079d320"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40798ae8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407eea38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407f0a20"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407ee010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405cfc20"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407ee6f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405cf618"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x405da338"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x407f1a28"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x407ec218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40829450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4080e128"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4080d480"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x407f6c20"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407f6c20"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x404e1010"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4080de68"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40811660"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40811660"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x404e1a08"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4080b860"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40810060"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40810060"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x404e1010"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x4080a2e0"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x40810a48"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x40810a48"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x404e1a08"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403f8010"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403f8c70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403324a0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40835b58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40921338"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40909398"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4082e470"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4082e470"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e21240"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40937688"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409020a0"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40e1ef10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e24888"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40e24888"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e188a8"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e20cd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408d21f8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408d21f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408cf7f0"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40e162e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4086b9a0"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4086b9a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4085f9e0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x40e132b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40866d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40862138"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x4086e6c8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40866d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40877b98"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40866d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40874f10"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40866d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40870320"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40887ae8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408c4810"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408c0c30"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x408dbdd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4086b9a0"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x408ceae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408c4810"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40926d08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40952948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e6c168"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40945d70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaTemperatureC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x40e6cd10"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a64010"/></to>
    </wire>
    <wire loc="37:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4095a158"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x40e6cd10"/></to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40956b68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40959b68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40972100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40e6b230"/></to>
    </wire>
    <wire loc="31:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40945d70"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40a47af0"/></to>
    </wire>
    <wire loc="32:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x4095d1b8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40a1c390"/></to>
    </wire>
    <wire loc="33:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a49500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40956b68"/></to>
    </wire>
    <wire loc="34:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a1b8b8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4095a158"/></to>
    </wire>
    <wire loc="36:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40a578a8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40a1d3d8"/></to>
    </wire>
    <wire loc="37:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40a1b040"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4096e4e0"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4096e4e0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x409656a8"/></to>
    </wire>
    <wire loc="38:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a1a088"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40a1ee30"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40a1ee30"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40a455d8"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4096b870"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40965c30"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40959b68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4099ba20"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4099ba20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e617a0"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40a10208"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40972100"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x4097c958"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x4099f268"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x4099f268"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x4099a2b8"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x409641e8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a5c90"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40a0e9f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40965218"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a0d150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a115f0"/></to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a115f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e60300"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40999e38"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40a111e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40e61ee0"/></to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a11c88"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40e60998"/></to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40e60e58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40a10208"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40e5e290"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40e62608"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40e5d830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40eac450"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40a0e9f0"/></to>
    </wire>
    <wire loc="82:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x40eac848"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40a0ede8"/></to>
    </wire>
    <wire loc="84:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40eacb60"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a0d150"/></to>
    </wire>
    <wire loc="85:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40eab230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40a0d7e8"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40a32c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a3c0c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a39010"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40a59268"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4075eb68"/></to>
    </wire>
    <wire loc="36:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e9aeb8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40945d70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x40e99a80"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a5b200"/></to>
    </wire>
    <wire loc="37:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4095a158"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x40e99a80"/></to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40956b68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40959b68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40972100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40e98010"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviRawLightC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40e94ba8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40a77878"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40a77878"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40a72e18"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ba67c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ba5eb8"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ba5eb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f29388"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40b77b30"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b9f010"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40b9fc68"/></from>
      <to><interface-ref name="Light" scoped="" ref="0x40a749d8"/></to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="Light" scoped="" ref="0x40a749d8"/></from>
      <to><interface-ref name="Light" scoped="" ref="0x40a71b20"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a8a520"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ab24c8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ab24c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40835b58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40a87528"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40aaf4e8"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40aaf4e8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40aa7580"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40a85810"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aaa410"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40aaa410"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40aa8db0"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40a80e08"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40aaab60"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40aaab60"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40b79f10"/></to>
    </wire>
    <wire loc="121:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <from><interface-ref name="startTimeout" scoped="" ref="0x40a97010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <from><interface-ref name="signalReadDone" scoped="" ref="0x40a9c200"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40b79f10"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40b74730"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40aa8db0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ac3260"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40aa7580"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40ac3d98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40ac3260"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ae82f0"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40ac3d98"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40ae8ae0"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x40aedb38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40abc758"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40abc758"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40eb94c0"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40aec300"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40b0ce20"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x40b0f240"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x40b43d20"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40aea010"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40b0c978"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40aea720"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ac72e0"/></to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ac72e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40eb8030"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40b42090"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40b3ef00"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40b3ef00"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40b37010"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x40b416d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b3cc28"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x40b40670"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b3cc28"/></to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40abce98"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40eb9c00"/></to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac7978"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40eb86c8"/></to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40eb8b88"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ac7e28"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40eb7010"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40ebb348"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40eb6590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x40b5cb60"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x404e9670"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x40b5b598"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x404e8210"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40b5a010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40b74730"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40f0e5e0"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40b74de8"/></from>
      <to><interface-ref name="PortF1" scoped="" ref="0x404fa4b0"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40f0a010"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40b74de8"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f0ed28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f09ad0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f09ad0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40835b58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40ba4618"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40f29ac8"/></to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ba4a20"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f29ed0"/></to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ba3150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f28580"/></to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f28a40"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40ba3600"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40f28e68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40f2b220"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f263d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f410f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f38010"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/PressureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40a5c7e0"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40f41d18"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40f41d18"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40f3ae88"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40f3ae88"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40bd3860"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x40f35530"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x40f32ec0"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="ReadDt" scoped="" ref="0x40f38c38"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f32220"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="ReadRawPress" scoped="" ref="0x40f36878"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f3a260"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f3a260"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f9e0a0"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="ReadRawTemp" scoped="" ref="0x40f34780"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f3e590"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f3e590"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f63298"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="ReadCalib" scoped="" ref="0x40f333b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f3c2e8"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f3c2e8"/></from>
      <to><interface-ref name="ReadRef" scoped="" ref="0x40fa8918"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40f3d1d8"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40bd3860"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40bd3860"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40bcc228"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f62a88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bd3010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40f63ed0"/></from>
      <to><interface-ref name="ReadTemperature" scoped="" ref="0x40bb2d78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ReadPressure" scoped="" ref="0x40bafdd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c1c668"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ReadTemperature" scoped="" ref="0x40bb2d78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c1fb68"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ReadCalibration" scoped="" ref="0x40baeeb8"/></from>
      <to><interface-ref name="ReadRef" scoped="" ref="0x40c39dc8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40bd3010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bd0bc8"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40bd0bc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f56810"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40bcc228"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40bc6b20"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40c1e800"/></from>
      <to><interface-ref name="ReadTemperature" scoped="" ref="0x40bce4d8"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="ReadTemperature" scoped="" ref="0x40bce4d8"/></from>
      <to><interface-ref name="ReadTemperature" scoped="" ref="0x40bc90c8"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40c1a2d8"/></from>
      <to><interface-ref name="ReadPressure" scoped="" ref="0x40bd26e8"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="ReadPressure" scoped="" ref="0x40bd26e8"/></from>
      <to><interface-ref name="ReadPressure" scoped="" ref="0x40bc9df8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40c18cb0"/></from>
      <to><interface-ref name="ReadCalibration" scoped="" ref="0x40bcd2a8"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="ReadCalibration" scoped="" ref="0x40bcd2a8"/></from>
      <to><interface-ref name="ReadCalibration" scoped="" ref="0x40bc7bb0"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40bc2c00"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40c06428"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40c06428"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40bff030"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40be8bb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c01340"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c01340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c008d8"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40bc58a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c04010"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c04010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40835b58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40be73c8"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40c01a90"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40c01a90"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40b79f10"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <from><interface-ref name="signalReadDone" scoped="" ref="0x40bdf778"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x40bf5320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c008d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ac3260"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40bff030"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40ac3d98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40c223a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40f54010"/></to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c227b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f54418"/></to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40c22e48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f54ab0"/></to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f53010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c20328"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40f53438"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40f576a0"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f529f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40f3b170"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40bd3860"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40fa5628"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bd3010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40fa7868"/></from>
      <to><interface-ref name="ReadCalibration" scoped="" ref="0x40baeeb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40f9d880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bd3010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40f9ecd8"/></from>
      <to><interface-ref name="ReadPressure" scoped="" ref="0x40bafdd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40ca19e0"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40f8e8c8"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40f8e8c8"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40bd3860"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x40fbdcb0"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x40fbf188"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="ReadDt" scoped="" ref="0x40fbd010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40fc04a8"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="ReadRawTemp" scoped="" ref="0x40fc39a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f90c90"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f90c90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40fb9b60"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="ReadCalib" scoped="" ref="0x40fc1610"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f8d9e0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f8d9e0"/></from>
      <to><interface-ref name="ReadRef" scoped="" ref="0x40fb1918"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40fb7360"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bd3010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40fb87f0"/></from>
      <to><interface-ref name="ReadTemperature" scoped="" ref="0x40bb2d78"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40fc4890"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40bd3860"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40faf628"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bd3010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40fb0868"/></from>
      <to><interface-ref name="ReadCalibration" scoped="" ref="0x40baeeb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40c9fb30"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40bd3860"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40fd80a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bd3010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40fd92d8"/></from>
      <to><interface-ref name="ReadCalibration" scoped="" ref="0x40baeeb8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/sht21/Sht21RawTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40fd2520"/></from>
      <to><interface-ref name="ReadTemperature" scoped="" ref="0x40c93290"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="ReadHumidity" scoped="" ref="0x40cbe2f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40cfa468"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="ReadTemperature" scoped="" ref="0x40c93290"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40cdf800"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40cd5160"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d01838"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d01838"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ffcbc0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40cd6518"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40cfd480"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40cfc110"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x40cbd450"/></to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x40cbd450"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x40cb82e0"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40cf8da8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cf6500"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40cf6500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410101b8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40cf8188"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40cf20a8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40cf2d00"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x40cba1a0"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x40cba1a0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x40cb5010"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40cb3d10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ce4330"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ce4330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40835b58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40cb5d00"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40ce17f8"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40ce17f8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40cda4a0"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40caf0a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cdc758"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40cdc758"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cdbd08"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40caf7f0"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40cdcea8"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40cdcea8"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40b79f10"/></to>
    </wire>
    <wire loc="153:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <from><interface-ref name="signalReadDone" scoped="" ref="0x40cc9d60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x40cc22a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40cdbd08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ac3260"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40cda4a0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40ac3d98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40cff010"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40ffa3a8"/></to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cff418"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ffa7b0"/></to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40cffab0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ffae48"/></to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40ff9338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40cfe010"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40ff9760"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40ffd9a0"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40ff8c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40cf6c40"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410108f8"/></to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cf5070"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41010d00"/></to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40cf5708"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4100e3f0"/></to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4100e8b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40cf5bb8"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4100ecd8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41011050"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x4100c2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/chips/sht21/Sht21RawHumidityC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4102b010"/></from>
      <to><interface-ref name="ReadHumidity" scoped="" ref="0x40cbe2f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40ceef08"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404a1060"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40d12358"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405625a0"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d576a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40590a98"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40d56330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059bbe8"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41026ae8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d2b010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41025230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40590a98"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d2b010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d5d010"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d5d780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40562e78"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d5de28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40590a98"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d5ca50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058cbb0"/></to>
    </wire>
    <wire loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x40d5b190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x40d5b5c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d54010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058cbb0"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d546a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40590a98"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40d52330"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059bbe8"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41071a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d2b010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41070150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40590a98"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d4f010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058cbb0"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d4f6a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40590a98"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="UcminiSensorP" loc="37:UcminiSensorP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/usr/src/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc" safe="">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/usr/src/tinyos/tos/system/NoPinC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/usr/src/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="41:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Jan Beutel&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc" safe="">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="RealMainP" loc="56:/usr/src/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/usr/src/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/usr/src/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="UcminiSensorC.TimerMilliC" loc="44(UcminiSensorC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045a9d8"/>
            <typename><typedef-ref name="T62khz" ref="0x4045ab80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045a9d8"/>
            <typename><typedef-ref name="T62khz" ref="0x4045ab80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045a9d8"/>
            <typename><typedef-ref name="T62khz" ref="0x4045ab80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045a9d8"/>
            <typename><typedef-ref name="T62khz" ref="0x4045ab80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.AtmegaTemperatureC" loc="34(UcminiSensorC.AtmegaTemperatureC):/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaTemperatureC.nc">
      <instance number="0">
        <component-ref qname="AtmegaTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.AtmegaTemperatureC.AdcReadClientC" loc="21(UcminiSensorC.AtmegaTemperatureC.AdcReadClientC):/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <documentation loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Andras Biro &#60;bbandi86@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/usr/src/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/usr/src/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/usr/src/tinyos/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/usr/src/tinyos/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC.CounterMicro16C" loc="54(BusyWaitMicroC.CounterMicro16C):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaTemperatureP" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaTemperatureP.nc">
      <module/>
    </component>
    <component qname="UcminiSensorC.AtmegaVoltageC" loc="40(UcminiSensorC.AtmegaVoltageC):/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AtmegaVoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.AtmegaVoltageC.AdcReadClientC" loc="21(UcminiSensorC.AtmegaVoltageC.AdcReadClientC):/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaVoltageP" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaVoltageP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaVoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UcminiSensorC.LightC" loc="35(UcminiSensorC.LightC):/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/LightC.nc">
      <instance number="0">
        <component-ref qname="LightC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.LightC.Bh1750fviRawLightC" loc="36(UcminiSensorC.LightC.Bh1750fviRawLightC):/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviRawLightC.nc">
      <instance number="0">
        <component-ref qname="Bh1750fviRawLightC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Bh1750fviArbitratedC" loc="36:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <configuration/>
    </component>
    <component qname="Bh1750fviC" loc="35:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <configuration/>
    </component>
    <component qname="Bh1750fviP" loc="35:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <module/>
    </component>
    <component qname="Bh1750fviC.TimerMilliC" loc="44(Bh1750fviC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplBh1750C" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <configuration/>
    </component>
    <component qname="HplBh1750C.I2CBus" loc="43(HplBh1750C.I2CBus):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/usr/src/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="I2CBusPowerManagerC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <configuration/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC" loc="35(I2CBusPowerManagerC.BusPowerManagerC):/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <instance number="0">
        <component-ref qname="BusPowerManagerC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP" loc="35(I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP):/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <instance number="0">
        <component-ref qname="BusPowerManagerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC" loc="44(I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Bh1750fviArbitratedC.ArbitratedReadC" loc="23(Bh1750fviArbitratedC.ArbitratedReadC):/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Bh1750fviArbitratedC.Arbiter" loc="89(Bh1750fviArbitratedC.Arbiter):/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Bh1750fviPressure.ReadResource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Bh1750fviArbitratedC.Arbiter.Queue" loc="42(Bh1750fviArbitratedC.Arbiter.Queue):/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Bh1750fviArbitratedC.Arbiter.Arbiter" loc="52(Bh1750fviArbitratedC.Arbiter.Arbiter):/usr/src/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Bh1750fviArbitratedC.ReadClientP" loc="35(Bh1750fviArbitratedC.ReadClientP):/usr/src/tinyos/tos/system/ReadClientP.nc">
      <instance number="0">
        <component-ref qname="ReadClientP"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC" loc="35(UcminiSensorC.PressureC):/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/PressureC.nc">
      <instance number="0">
        <component-ref qname="PressureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC" loc="35(UcminiSensorC.PressureC.Ms5607PressureC):/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc">
      <instance number="0">
        <component-ref qname="Ms5607PressureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC" loc="37(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC):/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <instance number="0">
        <component-ref qname="Ms5607RawTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ms5607RawArbiterP" loc="37:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <configuration/>
    </component>
    <component qname="Ms5607C" loc="37:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <configuration/>
    </component>
    <component qname="Ms5607P" loc="39:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <module/>
    </component>
    <component qname="HplMs5607C" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <configuration/>
    </component>
    <component qname="HplMs5607C.I2CBus" loc="43(HplMs5607C.I2CBus):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ms5607C.TimerMilliC" loc="44(Ms5607C.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ms5607RawArbiterP.FcfsArbiterC" loc="89(Ms5607RawArbiterP.FcfsArbiterC):/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Ms5607.ReadResource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Ms5607RawArbiterP.FcfsArbiterC.Queue" loc="42(Ms5607RawArbiterP.FcfsArbiterC.Queue):/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter" loc="52(Ms5607RawArbiterP.FcfsArbiterC.Arbiter):/usr/src/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ms5607RawArbiterP.ReadTempClient" loc="35(Ms5607RawArbiterP.ReadTempClient):/usr/src/tinyos/tos/system/ReadClientP.nc">
      <instance number="1">
        <component-ref qname="ReadClientP"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ms5607RawArbiterP.ReadPresClient" loc="35(Ms5607RawArbiterP.ReadPresClient):/usr/src/tinyos/tos/system/ReadClientP.nc">
      <instance number="2">
        <component-ref qname="ReadClientP"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ms5607RawArbiterP.ReadCalibClient" loc="35(Ms5607RawArbiterP.ReadCalibClient):/usr/src/tinyos/tos/chips/ms5607/ReadRefClientP.nc">
      <instance number="0">
        <component-ref qname="ReadRefClientP"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC.ResourceReadC" loc="24(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC.ResourceReadC):/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ResourceReadC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC" loc="37(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC):/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <instance number="1">
        <component-ref qname="Ms5607CalibrationC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC.ResourceReadRefC" loc="24(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC.ResourceReadRefC):/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ResourceReadRefC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC" loc="37(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC):/usr/src/tinyos/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <instance number="0">
        <component-ref qname="Ms5607RawPressureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC.ResourceReadC" loc="24(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC.ResourceReadC):/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ResourceReadC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP" loc="35(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP):/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionPressP.nc">
      <instance number="0">
        <component-ref qname="Ms5607ConversionPressP"/>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP" loc="37(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP):/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <instance number="0">
        <component-ref qname="Ms5607ConversionDtP"/>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.Temperature1C" loc="35(UcminiSensorC.Temperature1C):/usr/src/tinyos/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <instance number="0">
        <component-ref qname="Ms5607TemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC" loc="37(UcminiSensorC.Temperature1C.Ms5607RawTemperatureC):/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <instance number="1">
        <component-ref qname="Ms5607RawTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC.ResourceReadC" loc="24(UcminiSensorC.Temperature1C.Ms5607RawTemperatureC.ResourceReadC):/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ResourceReadC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC" loc="37(UcminiSensorC.Temperature1C.Ms5607CalibrationC):/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <instance number="2">
        <component-ref qname="Ms5607CalibrationC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC.ResourceReadRefC" loc="24(UcminiSensorC.Temperature1C.Ms5607CalibrationC.ResourceReadRefC):/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ResourceReadRefC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607ConversionDtP" loc="37(UcminiSensorC.Temperature1C.Ms5607ConversionDtP):/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <instance number="1">
        <component-ref qname="Ms5607ConversionDtP"/>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607ConversionTempP" loc="35(UcminiSensorC.Temperature1C.Ms5607ConversionTempP):/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionTempP.nc">
      <instance number="0">
        <component-ref qname="Ms5607ConversionTempP"/>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.Ms5607CalibrationC" loc="37(UcminiSensorC.Ms5607CalibrationC):/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <instance number="0">
        <component-ref qname="Ms5607CalibrationC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.Ms5607CalibrationC.ResourceReadRefC" loc="24(UcminiSensorC.Ms5607CalibrationC.ResourceReadRefC):/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ResourceReadRefC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.TemperatureC" loc="35(UcminiSensorC.TemperatureC):/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/TemperatureC.nc">
      <instance number="0">
        <component-ref qname="TemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.TemperatureC.Sht21RawTemperatureC" loc="37(UcminiSensorC.TemperatureC.Sht21RawTemperatureC):/usr/src/tinyos/tos/chips/sht21/Sht21RawTemperatureC.nc">
      <instance number="0">
        <component-ref qname="Sht21RawTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Sht21ArbitratedC" loc="36:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <configuration/>
    </component>
    <component qname="Sht21C" loc="35:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <configuration/>
    </component>
    <component qname="Sht21P" loc="36:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <module/>
    </component>
    <component qname="Sht21C.TimerMilliC" loc="44(Sht21C.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSht21C" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <configuration/>
    </component>
    <component qname="HplSht21C.I2CBus" loc="43(HplSht21C.I2CBus):/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Sht21ArbitratedC.ArbitratedTemp" loc="23(Sht21ArbitratedC.ArbitratedTemp):/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.TempArbiter" loc="89(Sht21ArbitratedC.TempArbiter):/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht21Temperature.ReadResource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Sht21ArbitratedC.TempArbiter.Queue" loc="42(Sht21ArbitratedC.TempArbiter.Queue):/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.TempArbiter.Arbiter" loc="52(Sht21ArbitratedC.TempArbiter.Arbiter):/usr/src/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.TempClient" loc="35(Sht21ArbitratedC.TempClient):/usr/src/tinyos/tos/system/ReadClientP.nc">
      <instance number="3">
        <component-ref qname="ReadClientP"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.ArbitratedHumi" loc="23(Sht21ArbitratedC.ArbitratedHumi):/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.HumiArbiter" loc="89(Sht21ArbitratedC.HumiArbiter):/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht21Humidity.ReadResource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Sht21ArbitratedC.HumiArbiter.Queue" loc="42(Sht21ArbitratedC.HumiArbiter.Queue):/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.HumiArbiter.Arbiter" loc="52(Sht21ArbitratedC.HumiArbiter.Arbiter):/usr/src/tinyos/tos/system/ArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.HumiClient" loc="35(Sht21ArbitratedC.HumiClient):/usr/src/tinyos/tos/system/ReadClientP.nc">
      <instance number="4">
        <component-ref qname="ReadClientP"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.HumidityC" loc="35(UcminiSensorC.HumidityC):/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HumidityC.nc">
      <instance number="0">
        <component-ref qname="HumidityC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.HumidityC.Sht21RawHumidityC" loc="36(UcminiSensorC.HumidityC.Sht21RawHumidityC):/usr/src/tinyos/tos/chips/sht21/Sht21RawHumidityC.nc">
      <instance number="0">
        <component-ref qname="Sht21RawHumidityC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialStartP" loc="37:/usr/src/tinyos/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UcminiSensorC.MeasSend" loc="47(UcminiSensorC.MeasSend):/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.MeasSend.AMQueueEntryP" loc="43(UcminiSensorC.MeasSend.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.CalibSend" loc="47(UcminiSensorC.CalibSend):/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.CalibSend.AMQueueEntryP" loc="43(UcminiSensorC.CalibSend.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.SerialAMReceiverC" loc="43(UcminiSensorC.SerialAMReceiverC):/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x404fee48" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40509088" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x405092b0" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/usr/src/tinyos/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/usr/src/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40737cb0" loc="55:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40737cb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4074a148" loc="56:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4074a148"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4074a3b0" loc="57:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4074a3b0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4074a820" loc="58:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4074a820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4074aa88" loc="59:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x4074af10" loc="60:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x4074af10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x407596f8" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407596f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40759b28" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40759b28"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40759d18" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/usr/src/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4083c9a0" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4083c9a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4083cdd0" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4083cdd0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40839010" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x40839218" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x408d4c98" loc="52:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x408d4c98"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x408e6148" loc="53:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x408e6148"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x408e63b0" loc="54:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x408e63b0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x408e6820" loc="55:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x408e6820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x408e6a88" loc="56:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40904ca8" loc="46:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40904ca8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40923620" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40923620"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40923800" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaTemperatureC" loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaTemperatureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x409a0980" loc="89:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/usr/src/tinyos/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x409cde00" loc="42:/usr/src/tinyos/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/usr/src/tinyos/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/src/tinyos/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x409d6528" loc="52:/usr/src/tinyos/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a432f8" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a432f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a43728" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a43728"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/usr/src/tinyos/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40a48e88" loc="23:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40a48e88"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaVoltageC" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc" abstract="">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LightC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/LightC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Bh1750fviRawLightC" loc="36:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviRawLightC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/usr/src/tinyos/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40abb088" loc="89:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40ab73a0" loc="42:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusPowerManagerC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc" abstract="">
      <parameters>
        <constant name="highIsOn" ref="0x40b76e98" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
          <component-ref qname="BusPowerManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
        <constant name="initPin" ref="0x40b730d0" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
          <component-ref qname="BusPowerManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusPowerManagerP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc" abstract="">
      <parameters>
        <constant name="highIsOn" ref="0x40b72c18" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
          <component-ref qname="BusPowerManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
        <constant name="initPin" ref="0x40b72e08" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
          <component-ref qname="BusPowerManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ReadClientP" loc="35:/usr/src/tinyos/tos/system/ReadClientP.nc" abstract="">
      <parameters>
        <typedef name="type" ref="0x40ba15e0" loc="35:/usr/src/tinyos/tos/system/ReadClientP.nc">
          <component-ref qname="ReadClientP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="type" scoped="" ref="0x40ba15e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="PressureC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/PressureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ms5607PressureC" loc="35:/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ms5607RawTemperatureC" loc="37:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ReadRefClientP" loc="35:/usr/src/tinyos/tos/chips/ms5607/ReadRefClientP.nc" abstract="">
      <parameters>
        <typedef name="type" ref="0x40c19db0" loc="35:/usr/src/tinyos/tos/chips/ms5607/ReadRefClientP.nc">
          <component-ref qname="ReadRefClientP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="type" scoped="" ref="0x40c19db0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="ResourceReadC" loc="24:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc" abstract="" safe="">
      <documentation loc="10:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40bb0c60" loc="24:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
          <component-ref qname="ResourceReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40bb0c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Ms5607CalibrationC" loc="37:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ResourceReadRefC" loc="24:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc" abstract="" safe="">
      <documentation loc="10:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40c493f0" loc="24:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
          <component-ref qname="ResourceReadRefC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40c493f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Ms5607RawPressureC" loc="37:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawPressureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ms5607ConversionPressP" loc="35:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionPressP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ms5607ConversionDtP" loc="37:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ms5607TemperatureC" loc="35:/usr/src/tinyos/tos/chips/ms5607/Ms5607TemperatureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ms5607ConversionTempP" loc="35:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionTempP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TemperatureC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/TemperatureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Sht21RawTemperatureC" loc="37:/usr/src/tinyos/tos/chips/sht21/Sht21RawTemperatureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HumidityC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HumidityC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Sht21RawHumidityC" loc="36:/usr/src/tinyos/tos/chips/sht21/Sht21RawHumidityC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40d18310" loc="47:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/usr/src/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40d0dd38" loc="43:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/usr/src/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40d2a508" loc="45:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40d51680" loc="43:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Timer" ref="0x40480ea8" loc="53:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40480ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404859a8"/>
        <function-ref name="fired" scoped="" ref="0x4047fc40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40485368"/>
        <function-ref name="isOneShot" scoped="" ref="0x40485110"/>
        <function-ref name="getdt" scoped="" ref="0x40485e58"/>
        <function-ref name="gett0" scoped="" ref="0x40485c00"/>
        <function-ref name="isRunning" scoped="" ref="0x4047fe98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4047f4e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40485688"/>
        <function-ref name="startOneShot" scoped="" ref="0x4047f768"/>
        <function-ref name="stop" scoped="" ref="0x4047f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CalibSend" ref="0x40475410" loc="49:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CalibSend" scoped="" ref="0x40475410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404755e8"/>
        <function-ref name="getPayload" scoped="" ref="0x404756c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404757a8"/>
        <function-ref name="cancel" scoped="" ref="0x40475888"/>
        <function-ref name="sendDone" scoped="" ref="0x40475968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40427aa8" loc="39:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40427aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40427c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x4047be50" loc="52:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4047be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40476050"/>
        <function-ref name="payloadLength" scoped="" ref="0x40476130"/>
        <function-ref name="getPayload" scoped="" ref="0x40476210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404762f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404763d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageRead" ref="0x404321d8" loc="46:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageRead" scoped="" ref="0x404321d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40432800"/>
        <function-ref name="readDone" scoped="" ref="0x40432a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumiRead" ref="0x404260b8" loc="41:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumiRead" scoped="" ref="0x404260b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x404266e0"/>
        <function-ref name="readDone" scoped="" ref="0x40426938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PressRead" ref="0x40425aa8" loc="43:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PressRead" scoped="" ref="0x40425aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4042b100"/>
        <function-ref name="readDone" scoped="" ref="0x4042b358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40474d50" loc="51:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40474d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40442010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x4042c398" loc="40:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempRead" scoped="" ref="0x4042c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4042c9c0"/>
        <function-ref name="readDone" scoped="" ref="0x4042cc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4048b0d8" loc="54:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4048b0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4048b2b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4048b390"/>
        <function-ref name="led1On" scoped="" ref="0x4048b470"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4048b550"/>
        <function-ref name="led3Off" scoped="" ref="0x4048b630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4048b710"/>
        <function-ref name="get" scoped="" ref="0x4048b7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x4048b8d0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4048b9b0"/>
        <function-ref name="led3On" scoped="" ref="0x4048ba90"/>
        <function-ref name="led0On" scoped="" ref="0x4048bb70"/>
        <function-ref name="led2Off" scoped="" ref="0x4048bc50"/>
        <function-ref name="led2On" scoped="" ref="0x4048bd30"/>
        <function-ref name="set" scoped="" ref="0x4048be90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadRef" ref="0x4042eaa0" loc="47:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRef" scoped="" ref="0x4042eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40431100"/>
        <function-ref name="readDone" scoped="" ref="0x40431490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DiagMsg" ref="0x40444598" loc="48:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DiagMsg" scoped="" ref="0x40444598"/></type-interface>
      <instance>
        <interfacedef-ref qname="DiagMsg"/>
      </instance>
      <interface-functions>
        <function-ref name="int32s" scoped="" ref="0x40444770"/>
        <function-ref name="str" scoped="" ref="0x40444850"/>
        <function-ref name="send" scoped="" ref="0x40444930"/>
        <function-ref name="int16" scoped="" ref="0x40444a10"/>
        <function-ref name="hex32" scoped="" ref="0x40444af0"/>
        <function-ref name="int32" scoped="" ref="0x40444bd0"/>
        <function-ref name="chr" scoped="" ref="0x40444cb0"/>
        <function-ref name="uint32s" scoped="" ref="0x40444d90"/>
        <function-ref name="real" scoped="" ref="0x40444e70"/>
        <function-ref name="hex8" scoped="" ref="0x40430010"/>
        <function-ref name="uint16" scoped="" ref="0x404300f0"/>
        <function-ref name="uint64s" scoped="" ref="0x404301d0"/>
        <function-ref name="uint32" scoped="" ref="0x404302b0"/>
        <function-ref name="uint8" scoped="" ref="0x40430410"/>
        <function-ref name="hex8s" scoped="" ref="0x404304f0"/>
        <function-ref name="record" scoped="" ref="0x404305d0"/>
        <function-ref name="uint8s" scoped="" ref="0x404306b0"/>
        <function-ref name="reals" scoped="" ref="0x40430790"/>
        <function-ref name="int64" scoped="" ref="0x40430870"/>
        <function-ref name="uint16s" scoped="" ref="0x40430950"/>
        <function-ref name="int64s" scoped="" ref="0x40430a30"/>
        <function-ref name="hex16" scoped="" ref="0x40430b10"/>
        <function-ref name="uint64" scoped="" ref="0x40430bf0"/>
        <function-ref name="int16s" scoped="" ref="0x40430cd0"/>
        <function-ref name="int8" scoped="" ref="0x40430db0"/>
        <function-ref name="hex16s" scoped="" ref="0x40436010"/>
        <function-ref name="hex32s" scoped="" ref="0x404360f0"/>
        <function-ref name="chrs" scoped="" ref="0x404361d0"/>
        <function-ref name="int8s" scoped="" ref="0x404362b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasSend" ref="0x40475b60" loc="50:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasSend" scoped="" ref="0x40475b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40475d38"/>
        <function-ref name="getPayload" scoped="" ref="0x40475e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40475ef8"/>
        <function-ref name="cancel" scoped="" ref="0x40443010"/>
        <function-ref name="sendDone" scoped="" ref="0x404430f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp2Read" ref="0x4042b7b8" loc="44:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp2Read" scoped="" ref="0x4042b7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x40039e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4042bde0"/>
        <function-ref name="readDone" scoped="" ref="0x40429048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp3Read" ref="0x404294b8" loc="45:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp3Read" scoped="" ref="0x404294b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40429ae0"/>
        <function-ref name="readDone" scoped="" ref="0x40429d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LightRead" ref="0x40426da8" loc="42:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LightRead" scoped="" ref="0x40426da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x404253e0"/>
        <function-ref name="readDone" scoped="" ref="0x40425638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404a1c80" loc="58:/usr/src/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404a1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a1e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404a1060" loc="57:/usr/src/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404a1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404a1238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4049f470" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4049f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049f648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404a5c90" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404a5e68"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404a8010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404a80f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x404a81d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404a82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404a84d8" loc="43:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404a84d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a86b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404afa48" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404afa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404afc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x404ae608" loc="45:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x404ae608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ae7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404ae238" loc="44:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404ae238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ae410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x404afe38" loc="43:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x404afe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ae050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404a7710" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a7710"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a78e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404a7ec8" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404a7ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b50c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404a7b18" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404a7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a7cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x404b2858" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x404b2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b2a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b58d8" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b58d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b5ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404b2490" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404b2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b2668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x404b5d00" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x404b5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b5ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404b20e0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404b20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b22b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404be010" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404be010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404be1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404be3c0" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404be3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404be598"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404be678"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404be758"/>
        <function-ref name="actualMicro" scoped="" ref="0x404be838"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404be918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x404d3d20" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x404d3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d3ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x404a4aa8" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x404a4aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a4c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Toggle" ref="0x404d5848" loc="38:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Toggle" scoped="" ref="0x404d5848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5a20"/>
        <function-ref name="isInput" scoped="" ref="0x404d5b00"/>
        <function-ref name="toggle" scoped="" ref="0x404d5be0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5cc0"/>
        <function-ref name="get" scoped="" ref="0x404d5da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5e80"/>
        <function-ref name="set" scoped="" ref="0x404d9010"/>
        <function-ref name="clr" scoped="" ref="0x404d90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x404d0308" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x404d0308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x404cfbb8" loc="42:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x404cfbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cfd90"/>
        <function-ref name="isInput" scoped="" ref="0x404cfe70"/>
        <function-ref name="toggle" scoped="" ref="0x404d4010"/>
        <function-ref name="isOutput" scoped="" ref="0x404d40f0"/>
        <function-ref name="get" scoped="" ref="0x404d41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d42b0"/>
        <function-ref name="set" scoped="" ref="0x404d4390"/>
        <function-ref name="clr" scoped="" ref="0x404d4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x404d4680" loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x404d4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4858"/>
        <function-ref name="isInput" scoped="" ref="0x404d4938"/>
        <function-ref name="toggle" scoped="" ref="0x404d4a18"/>
        <function-ref name="isOutput" scoped="" ref="0x404d4af8"/>
        <function-ref name="get" scoped="" ref="0x404d4bd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d4cb8"/>
        <function-ref name="set" scoped="" ref="0x404d4d98"/>
        <function-ref name="clr" scoped="" ref="0x404d4e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x404e00b8" loc="45:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x404e00b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e0290"/>
        <function-ref name="isInput" scoped="" ref="0x404e0370"/>
        <function-ref name="toggle" scoped="" ref="0x404e0450"/>
        <function-ref name="isOutput" scoped="" ref="0x404e0530"/>
        <function-ref name="get" scoped="" ref="0x404e0610"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e06f0"/>
        <function-ref name="set" scoped="" ref="0x404e07d0"/>
        <function-ref name="clr" scoped="" ref="0x404e08b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x40503c08" loc="93:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x40503c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502010"/>
        <function-ref name="isInput" scoped="" ref="0x405020f0"/>
        <function-ref name="toggle" scoped="" ref="0x405021d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405022b0"/>
        <function-ref name="get" scoped="" ref="0x40502390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502470"/>
        <function-ref name="set" scoped="" ref="0x40502550"/>
        <function-ref name="clr" scoped="" ref="0x40502630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404e8210" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404e8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e83e8"/>
        <function-ref name="isInput" scoped="" ref="0x404e84c8"/>
        <function-ref name="toggle" scoped="" ref="0x404e85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8688"/>
        <function-ref name="get" scoped="" ref="0x404e8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8848"/>
        <function-ref name="set" scoped="" ref="0x404e8928"/>
        <function-ref name="clr" scoped="" ref="0x404e8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404f0750" loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404f0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f0928"/>
        <function-ref name="isInput" scoped="" ref="0x404f0a08"/>
        <function-ref name="toggle" scoped="" ref="0x404f0ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0bc8"/>
        <function-ref name="get" scoped="" ref="0x404f0ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0d88"/>
        <function-ref name="set" scoped="" ref="0x404f0e68"/>
        <function-ref name="clr" scoped="" ref="0x404ef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404f98e0" loc="87:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404f98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f9ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404f9b98"/>
        <function-ref name="toggle" scoped="" ref="0x404f9c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9d58"/>
        <function-ref name="get" scoped="" ref="0x404f9e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f9f18"/>
        <function-ref name="set" scoped="" ref="0x404f8010"/>
        <function-ref name="clr" scoped="" ref="0x404f80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x404ff210" loc="98:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x404ff210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ff3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ff4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ff5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ff688"/>
        <function-ref name="get" scoped="" ref="0x404ff768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ff848"/>
        <function-ref name="set" scoped="" ref="0x404ff928"/>
        <function-ref name="clr" scoped="" ref="0x404ffa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404dace8" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404dace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404daec0"/>
        <function-ref name="isInput" scoped="" ref="0x404e6010"/>
        <function-ref name="toggle" scoped="" ref="0x404e60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e61d0"/>
        <function-ref name="get" scoped="" ref="0x404e62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e6390"/>
        <function-ref name="set" scoped="" ref="0x404e6470"/>
        <function-ref name="clr" scoped="" ref="0x404e6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404fa4b0" loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404fa4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fa688"/>
        <function-ref name="isInput" scoped="" ref="0x404fa768"/>
        <function-ref name="toggle" scoped="" ref="0x404fa848"/>
        <function-ref name="isOutput" scoped="" ref="0x404fa928"/>
        <function-ref name="get" scoped="" ref="0x404faa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404faae8"/>
        <function-ref name="set" scoped="" ref="0x404fabc8"/>
        <function-ref name="clr" scoped="" ref="0x404faca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404e5210" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404e5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e53e8"/>
        <function-ref name="isInput" scoped="" ref="0x404e54c8"/>
        <function-ref name="toggle" scoped="" ref="0x404e55a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e5688"/>
        <function-ref name="get" scoped="" ref="0x404e5768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5848"/>
        <function-ref name="set" scoped="" ref="0x404e5928"/>
        <function-ref name="clr" scoped="" ref="0x404e5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x404ed8e0" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x404ed8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404edab8"/>
        <function-ref name="isInput" scoped="" ref="0x404edb98"/>
        <function-ref name="toggle" scoped="" ref="0x404edc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404edd58"/>
        <function-ref name="get" scoped="" ref="0x404ede38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404edf18"/>
        <function-ref name="set" scoped="" ref="0x404ec010"/>
        <function-ref name="clr" scoped="" ref="0x404ec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404f40a0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404f40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f4278"/>
        <function-ref name="isInput" scoped="" ref="0x404f4358"/>
        <function-ref name="toggle" scoped="" ref="0x404f4438"/>
        <function-ref name="isOutput" scoped="" ref="0x404f4518"/>
        <function-ref name="get" scoped="" ref="0x404f45f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f46d8"/>
        <function-ref name="set" scoped="" ref="0x404f47b8"/>
        <function-ref name="clr" scoped="" ref="0x404f4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404fc670" loc="81:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404fc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc848"/>
        <function-ref name="isInput" scoped="" ref="0x404fc928"/>
        <function-ref name="toggle" scoped="" ref="0x404fca08"/>
        <function-ref name="isOutput" scoped="" ref="0x404fcae8"/>
        <function-ref name="get" scoped="" ref="0x404fcbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fcca8"/>
        <function-ref name="set" scoped="" ref="0x404fcd88"/>
        <function-ref name="clr" scoped="" ref="0x404fce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x404dda28" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x404dda28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ddc00"/>
        <function-ref name="isInput" scoped="" ref="0x404ddce0"/>
        <function-ref name="toggle" scoped="" ref="0x404dddc0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ddea0"/>
        <function-ref name="get" scoped="" ref="0x404dc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc0f0"/>
        <function-ref name="set" scoped="" ref="0x404dc1d0"/>
        <function-ref name="clr" scoped="" ref="0x404dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404e30a0" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404e30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e3278"/>
        <function-ref name="isInput" scoped="" ref="0x404e3358"/>
        <function-ref name="toggle" scoped="" ref="0x404e3438"/>
        <function-ref name="isOutput" scoped="" ref="0x404e3518"/>
        <function-ref name="get" scoped="" ref="0x404e35f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e36d8"/>
        <function-ref name="set" scoped="" ref="0x404e37b8"/>
        <function-ref name="clr" scoped="" ref="0x404e3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x404eb750" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x404eb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eb928"/>
        <function-ref name="isInput" scoped="" ref="0x404eba08"/>
        <function-ref name="toggle" scoped="" ref="0x404ebae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ebbc8"/>
        <function-ref name="get" scoped="" ref="0x404ebca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ebd88"/>
        <function-ref name="set" scoped="" ref="0x404ebe68"/>
        <function-ref name="clr" scoped="" ref="0x404ea010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404f3ea8" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404f3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f20c0"/>
        <function-ref name="isInput" scoped="" ref="0x404f21a0"/>
        <function-ref name="toggle" scoped="" ref="0x404f2280"/>
        <function-ref name="isOutput" scoped="" ref="0x404f2360"/>
        <function-ref name="get" scoped="" ref="0x404f2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2520"/>
        <function-ref name="set" scoped="" ref="0x404f2600"/>
        <function-ref name="clr" scoped="" ref="0x404f26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404f6750" loc="90:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404f6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f6928"/>
        <function-ref name="isInput" scoped="" ref="0x404f6a08"/>
        <function-ref name="toggle" scoped="" ref="0x404f6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f6bc8"/>
        <function-ref name="get" scoped="" ref="0x404f6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f6d88"/>
        <function-ref name="set" scoped="" ref="0x404f6e68"/>
        <function-ref name="clr" scoped="" ref="0x40503010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x40501ce8" loc="96:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x40501ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40500010"/>
        <function-ref name="toggle" scoped="" ref="0x405000f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405001d0"/>
        <function-ref name="get" scoped="" ref="0x405002b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500390"/>
        <function-ref name="set" scoped="" ref="0x40500470"/>
        <function-ref name="clr" scoped="" ref="0x40500550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404f12f0" loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404f12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f14c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f15a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f1688"/>
        <function-ref name="isOutput" scoped="" ref="0x404f1768"/>
        <function-ref name="get" scoped="" ref="0x404f1848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f1928"/>
        <function-ref name="set" scoped="" ref="0x404f1a08"/>
        <function-ref name="clr" scoped="" ref="0x404f1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x404db8e0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x404db8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dbab8"/>
        <function-ref name="isInput" scoped="" ref="0x404dbb98"/>
        <function-ref name="toggle" scoped="" ref="0x404dbc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404dbd58"/>
        <function-ref name="get" scoped="" ref="0x404dbe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dbf18"/>
        <function-ref name="set" scoped="" ref="0x404da010"/>
        <function-ref name="clr" scoped="" ref="0x404da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404e1010" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e11e8"/>
        <function-ref name="isInput" scoped="" ref="0x404e12c8"/>
        <function-ref name="toggle" scoped="" ref="0x404e13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e1488"/>
        <function-ref name="get" scoped="" ref="0x404e1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e1648"/>
        <function-ref name="set" scoped="" ref="0x404e1728"/>
        <function-ref name="clr" scoped="" ref="0x404e1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40502830" loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40502830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502a08"/>
        <function-ref name="isInput" scoped="" ref="0x40502ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40502bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40502ca8"/>
        <function-ref name="get" scoped="" ref="0x40502d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502e68"/>
        <function-ref name="set" scoped="" ref="0x40501010"/>
        <function-ref name="clr" scoped="" ref="0x405010f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x404ee4b0" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x404ee4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ee688"/>
        <function-ref name="isInput" scoped="" ref="0x404ee768"/>
        <function-ref name="toggle" scoped="" ref="0x404ee848"/>
        <function-ref name="isOutput" scoped="" ref="0x404ee928"/>
        <function-ref name="get" scoped="" ref="0x404eea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eeae8"/>
        <function-ref name="set" scoped="" ref="0x404eebc8"/>
        <function-ref name="clr" scoped="" ref="0x404eeca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404e8c08" loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404e8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8de0"/>
        <function-ref name="isInput" scoped="" ref="0x404e8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404f5010"/>
        <function-ref name="isOutput" scoped="" ref="0x404f50f0"/>
        <function-ref name="get" scoped="" ref="0x404f51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f52b0"/>
        <function-ref name="set" scoped="" ref="0x404f5390"/>
        <function-ref name="clr" scoped="" ref="0x404f5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404ef210" loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404ef210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ef3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ef4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ef5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ef688"/>
        <function-ref name="get" scoped="" ref="0x404ef768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ef848"/>
        <function-ref name="set" scoped="" ref="0x404ef928"/>
        <function-ref name="clr" scoped="" ref="0x404efa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404f82f0" loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404f82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f84c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f85a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f8688"/>
        <function-ref name="isOutput" scoped="" ref="0x404f8768"/>
        <function-ref name="get" scoped="" ref="0x404f8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f8928"/>
        <function-ref name="set" scoped="" ref="0x404f8a08"/>
        <function-ref name="clr" scoped="" ref="0x404f8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404e6750" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404e6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e6928"/>
        <function-ref name="isInput" scoped="" ref="0x404e6a08"/>
        <function-ref name="toggle" scoped="" ref="0x404e6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e6bc8"/>
        <function-ref name="get" scoped="" ref="0x404e6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e6d88"/>
        <function-ref name="set" scoped="" ref="0x404e6e68"/>
        <function-ref name="clr" scoped="" ref="0x404e5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404e5c08" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404e5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e5de0"/>
        <function-ref name="isInput" scoped="" ref="0x404e5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404e4010"/>
        <function-ref name="isOutput" scoped="" ref="0x404e40f0"/>
        <function-ref name="get" scoped="" ref="0x404e41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e42b0"/>
        <function-ref name="set" scoped="" ref="0x404e4390"/>
        <function-ref name="clr" scoped="" ref="0x404e4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404ec2f0" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404ec2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ec4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ec5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ec688"/>
        <function-ref name="isOutput" scoped="" ref="0x404ec768"/>
        <function-ref name="get" scoped="" ref="0x404ec848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ec928"/>
        <function-ref name="set" scoped="" ref="0x404eca08"/>
        <function-ref name="clr" scoped="" ref="0x404ecae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404f4a98" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404f4a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f4c70"/>
        <function-ref name="isInput" scoped="" ref="0x404f4d50"/>
        <function-ref name="toggle" scoped="" ref="0x404f4e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404f4f10"/>
        <function-ref name="get" scoped="" ref="0x404f3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f30f0"/>
        <function-ref name="set" scoped="" ref="0x404f31d0"/>
        <function-ref name="clr" scoped="" ref="0x404f32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404fb0a0" loc="82:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404fb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb278"/>
        <function-ref name="isInput" scoped="" ref="0x404fb358"/>
        <function-ref name="toggle" scoped="" ref="0x404fb438"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb518"/>
        <function-ref name="get" scoped="" ref="0x404fb5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb6d8"/>
        <function-ref name="set" scoped="" ref="0x404fb7b8"/>
        <function-ref name="clr" scoped="" ref="0x404fb898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x404dc4b0" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x404dc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc688"/>
        <function-ref name="isInput" scoped="" ref="0x404dc768"/>
        <function-ref name="toggle" scoped="" ref="0x404dc848"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc928"/>
        <function-ref name="get" scoped="" ref="0x404dca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dcae8"/>
        <function-ref name="set" scoped="" ref="0x404dcbc8"/>
        <function-ref name="clr" scoped="" ref="0x404dcca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404e3a98" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404e3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e3cf0"/>
        <function-ref name="isInput" scoped="" ref="0x404e3dd0"/>
        <function-ref name="toggle" scoped="" ref="0x404e3eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e2010"/>
        <function-ref name="get" scoped="" ref="0x404e20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e21d0"/>
        <function-ref name="set" scoped="" ref="0x404e22b0"/>
        <function-ref name="clr" scoped="" ref="0x404e2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404ea210" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404ea210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ea3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ea4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ea5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ea688"/>
        <function-ref name="get" scoped="" ref="0x404ea768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ea848"/>
        <function-ref name="set" scoped="" ref="0x404ea928"/>
        <function-ref name="clr" scoped="" ref="0x404eaa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40503210" loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40503210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405033e8"/>
        <function-ref name="isInput" scoped="" ref="0x405034c8"/>
        <function-ref name="toggle" scoped="" ref="0x405035a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40503688"/>
        <function-ref name="get" scoped="" ref="0x40503768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40503848"/>
        <function-ref name="set" scoped="" ref="0x40503928"/>
        <function-ref name="clr" scoped="" ref="0x40503a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404e9670" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9948"/>
        <function-ref name="isInput" scoped="" ref="0x404e9a28"/>
        <function-ref name="toggle" scoped="" ref="0x404e9b08"/>
        <function-ref name="isOutput" scoped="" ref="0x404e9be8"/>
        <function-ref name="get" scoped="" ref="0x404e9cc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9da8"/>
        <function-ref name="set" scoped="" ref="0x404e9e88"/>
        <function-ref name="clr" scoped="" ref="0x404e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404f1ce8" loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404f1ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f1ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404f0010"/>
        <function-ref name="toggle" scoped="" ref="0x404f00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f01d0"/>
        <function-ref name="get" scoped="" ref="0x404f02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0390"/>
        <function-ref name="set" scoped="" ref="0x404f0470"/>
        <function-ref name="clr" scoped="" ref="0x404f0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404faea8" loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404faea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f90c0"/>
        <function-ref name="isInput" scoped="" ref="0x404f91a0"/>
        <function-ref name="toggle" scoped="" ref="0x404f9280"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9360"/>
        <function-ref name="get" scoped="" ref="0x404f9440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f9520"/>
        <function-ref name="set" scoped="" ref="0x404f9600"/>
        <function-ref name="clr" scoped="" ref="0x404f96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40500750" loc="97:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40500750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40500928"/>
        <function-ref name="isInput" scoped="" ref="0x40500a08"/>
        <function-ref name="toggle" scoped="" ref="0x40500ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40500bc8"/>
        <function-ref name="get" scoped="" ref="0x40500ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500d88"/>
        <function-ref name="set" scoped="" ref="0x40500e68"/>
        <function-ref name="clr" scoped="" ref="0x404ff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404da2f0" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404da2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404da4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404da5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404da688"/>
        <function-ref name="isOutput" scoped="" ref="0x404da768"/>
        <function-ref name="get" scoped="" ref="0x404da848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404da928"/>
        <function-ref name="set" scoped="" ref="0x404daa08"/>
        <function-ref name="clr" scoped="" ref="0x404daae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404e1a08" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404e1a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e1be0"/>
        <function-ref name="isInput" scoped="" ref="0x404e1cc0"/>
        <function-ref name="toggle" scoped="" ref="0x404e1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e1e80"/>
        <function-ref name="get" scoped="" ref="0x404ee010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ee0f0"/>
        <function-ref name="set" scoped="" ref="0x404ee1d0"/>
        <function-ref name="clr" scoped="" ref="0x404ee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404fba98" loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404fba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fbc70"/>
        <function-ref name="isInput" scoped="" ref="0x404fbd50"/>
        <function-ref name="toggle" scoped="" ref="0x404fbe30"/>
        <function-ref name="isOutput" scoped="" ref="0x404fbf10"/>
        <function-ref name="get" scoped="" ref="0x404fa010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fa0f0"/>
        <function-ref name="set" scoped="" ref="0x404fa1d0"/>
        <function-ref name="clr" scoped="" ref="0x404fa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404eeea8" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404eeea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ed0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404ed1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404ed280"/>
        <function-ref name="isOutput" scoped="" ref="0x404ed360"/>
        <function-ref name="get" scoped="" ref="0x404ed440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ed520"/>
        <function-ref name="set" scoped="" ref="0x404ed600"/>
        <function-ref name="clr" scoped="" ref="0x404ed6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404f5670" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f5848"/>
        <function-ref name="isInput" scoped="" ref="0x404f5928"/>
        <function-ref name="toggle" scoped="" ref="0x404f5a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404f5ae8"/>
        <function-ref name="get" scoped="" ref="0x404f5bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f5ca8"/>
        <function-ref name="set" scoped="" ref="0x404f5d88"/>
        <function-ref name="clr" scoped="" ref="0x404f5e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404efc08" loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404efc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404efde0"/>
        <function-ref name="isInput" scoped="" ref="0x404efec0"/>
        <function-ref name="toggle" scoped="" ref="0x404fc010"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc0f0"/>
        <function-ref name="get" scoped="" ref="0x404fc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc2b0"/>
        <function-ref name="set" scoped="" ref="0x404fc390"/>
        <function-ref name="clr" scoped="" ref="0x404fc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404f8ce8" loc="89:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404f8ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f8ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404f6010"/>
        <function-ref name="toggle" scoped="" ref="0x404f60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f61d0"/>
        <function-ref name="get" scoped="" ref="0x404f62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f6390"/>
        <function-ref name="set" scoped="" ref="0x404f6470"/>
        <function-ref name="clr" scoped="" ref="0x404f6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404dd030" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404dd030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dd208"/>
        <function-ref name="isInput" scoped="" ref="0x404dd2e8"/>
        <function-ref name="toggle" scoped="" ref="0x404dd3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404dd4a8"/>
        <function-ref name="get" scoped="" ref="0x404dd588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dd668"/>
        <function-ref name="set" scoped="" ref="0x404dd748"/>
        <function-ref name="clr" scoped="" ref="0x404dd828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404e4670" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404e4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e4848"/>
        <function-ref name="isInput" scoped="" ref="0x404e4928"/>
        <function-ref name="toggle" scoped="" ref="0x404e4a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404e4ae8"/>
        <function-ref name="get" scoped="" ref="0x404e4bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e4ca8"/>
        <function-ref name="set" scoped="" ref="0x404e4d88"/>
        <function-ref name="clr" scoped="" ref="0x404e4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404ecce8" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404ecce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ecec0"/>
        <function-ref name="isInput" scoped="" ref="0x404eb010"/>
        <function-ref name="toggle" scoped="" ref="0x404eb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404eb1d0"/>
        <function-ref name="get" scoped="" ref="0x404eb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eb390"/>
        <function-ref name="set" scoped="" ref="0x404eb470"/>
        <function-ref name="clr" scoped="" ref="0x404eb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404f34b0" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404f34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f3688"/>
        <function-ref name="isInput" scoped="" ref="0x404f3768"/>
        <function-ref name="toggle" scoped="" ref="0x404f3848"/>
        <function-ref name="isOutput" scoped="" ref="0x404f3928"/>
        <function-ref name="get" scoped="" ref="0x404f3a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f3ae8"/>
        <function-ref name="set" scoped="" ref="0x404f3bc8"/>
        <function-ref name="clr" scoped="" ref="0x404f3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x405012f0" loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x405012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405014c8"/>
        <function-ref name="isInput" scoped="" ref="0x405015a8"/>
        <function-ref name="toggle" scoped="" ref="0x40501688"/>
        <function-ref name="isOutput" scoped="" ref="0x40501768"/>
        <function-ref name="get" scoped="" ref="0x40501848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40501928"/>
        <function-ref name="set" scoped="" ref="0x40501a08"/>
        <function-ref name="clr" scoped="" ref="0x40501ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404f28e0" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404f28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404f2b98"/>
        <function-ref name="toggle" scoped="" ref="0x404f2c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404f2d58"/>
        <function-ref name="get" scoped="" ref="0x404f2e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2f18"/>
        <function-ref name="set" scoped="" ref="0x404f1010"/>
        <function-ref name="clr" scoped="" ref="0x404f10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404eac08" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404eac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eade0"/>
        <function-ref name="isInput" scoped="" ref="0x404eaec0"/>
        <function-ref name="toggle" scoped="" ref="0x404e9010"/>
        <function-ref name="isOutput" scoped="" ref="0x404e90f0"/>
        <function-ref name="get" scoped="" ref="0x404e91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e92b0"/>
        <function-ref name="set" scoped="" ref="0x404e9390"/>
        <function-ref name="clr" scoped="" ref="0x404e9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404dcea8" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404dcea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404db0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404db1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404db280"/>
        <function-ref name="isOutput" scoped="" ref="0x404db360"/>
        <function-ref name="get" scoped="" ref="0x404db440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404db520"/>
        <function-ref name="set" scoped="" ref="0x404db600"/>
        <function-ref name="clr" scoped="" ref="0x404db6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404e2590" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404e2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e2768"/>
        <function-ref name="isInput" scoped="" ref="0x404e2848"/>
        <function-ref name="toggle" scoped="" ref="0x404e2928"/>
        <function-ref name="isOutput" scoped="" ref="0x404e2a08"/>
        <function-ref name="get" scoped="" ref="0x404e2ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e2bc8"/>
        <function-ref name="set" scoped="" ref="0x404e2ca8"/>
        <function-ref name="clr" scoped="" ref="0x404e2d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404fda70" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404fda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fdc58"/>
        <function-ref name="isInput" scoped="" ref="0x404fdd38"/>
        <function-ref name="toggle" scoped="" ref="0x404fde18"/>
        <function-ref name="isOutput" scoped="" ref="0x404fdef8"/>
        <function-ref name="get" scoped="" ref="0x4050a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a0f0"/>
        <function-ref name="set" scoped="" ref="0x4050a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4050a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x405152b8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x405152b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405154a0"/>
        <function-ref name="isInput" scoped="" ref="0x40515580"/>
        <function-ref name="toggle" scoped="" ref="0x40515660"/>
        <function-ref name="isOutput" scoped="" ref="0x40515740"/>
        <function-ref name="get" scoped="" ref="0x40515820"/>
        <function-ref name="makeOutput" scoped="" ref="0x40515900"/>
        <function-ref name="set" scoped="" ref="0x405159e0"/>
        <function-ref name="clr" scoped="" ref="0x40515ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4051faf8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4051faf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051fce0"/>
        <function-ref name="isInput" scoped="" ref="0x4051fdc0"/>
        <function-ref name="toggle" scoped="" ref="0x4051fea0"/>
        <function-ref name="isOutput" scoped="" ref="0x4051e010"/>
        <function-ref name="get" scoped="" ref="0x4051e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051e1d0"/>
        <function-ref name="set" scoped="" ref="0x4051e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4051e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4051b440" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4051b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051b628"/>
        <function-ref name="isInput" scoped="" ref="0x4051b708"/>
        <function-ref name="toggle" scoped="" ref="0x4051b7e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4051b8c8"/>
        <function-ref name="get" scoped="" ref="0x4051b9a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051ba88"/>
        <function-ref name="set" scoped="" ref="0x4051bb68"/>
        <function-ref name="clr" scoped="" ref="0x4051bc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40525c68" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40525c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40525e50"/>
        <function-ref name="isInput" scoped="" ref="0x40524010"/>
        <function-ref name="toggle" scoped="" ref="0x405240f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405241d0"/>
        <function-ref name="get" scoped="" ref="0x405242b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40524390"/>
        <function-ref name="set" scoped="" ref="0x40524470"/>
        <function-ref name="clr" scoped="" ref="0x40524550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x405215c8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x405215c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405217b0"/>
        <function-ref name="isInput" scoped="" ref="0x40521890"/>
        <function-ref name="toggle" scoped="" ref="0x40521970"/>
        <function-ref name="isOutput" scoped="" ref="0x40521a50"/>
        <function-ref name="get" scoped="" ref="0x40521b30"/>
        <function-ref name="makeOutput" scoped="" ref="0x40521c10"/>
        <function-ref name="set" scoped="" ref="0x40521cf0"/>
        <function-ref name="clr" scoped="" ref="0x40521dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4052cdf0" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4052cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052b010"/>
        <function-ref name="isInput" scoped="" ref="0x4052b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4052b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4052b2b0"/>
        <function-ref name="get" scoped="" ref="0x4052b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052b470"/>
        <function-ref name="set" scoped="" ref="0x4052b550"/>
        <function-ref name="clr" scoped="" ref="0x4052b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40545618" loc="18:/usr/src/tinyos/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40545618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405457f0"/>
        <function-ref name="isInput" scoped="" ref="0x405458d0"/>
        <function-ref name="toggle" scoped="" ref="0x405459b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40545a90"/>
        <function-ref name="get" scoped="" ref="0x40545b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40545c50"/>
        <function-ref name="set" scoped="" ref="0x40545d30"/>
        <function-ref name="clr" scoped="" ref="0x40545e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40552d30" loc="34:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40552d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40552f08"/>
        <function-ref name="stopDone" scoped="" ref="0x40555010"/>
        <function-ref name="start" scoped="" ref="0x405550f0"/>
        <function-ref name="stop" scoped="" ref="0x405551d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40554c80" loc="37:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40554c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40554e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x4055ceb8" loc="57:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x4055ceb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4055b0c0"/>
        <function-ref name="runTask" scoped="" ref="0x4055b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x4054f7c0" loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x4054f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4054f998"/>
        <function-ref name="runTask" scoped="" ref="0x4054fa78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x4055db10" loc="35:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x4055db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4055dce8"/>
        <function-ref name="disable" scoped="" ref="0x4055ddc8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4055dea8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40554010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x40554258" loc="36:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x40554258"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40554430"/>
        <function-ref name="isInput" scoped="" ref="0x40554510"/>
        <function-ref name="toggle" scoped="" ref="0x405545f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405546d0"/>
        <function-ref name="get" scoped="" ref="0x405547b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40554890"/>
        <function-ref name="set" scoped="" ref="0x40554970"/>
        <function-ref name="clr" scoped="" ref="0x40554a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x40548b10" loc="35:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x40548b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40548ce8"/>
        <function-ref name="disable" scoped="" ref="0x40548dc8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40548ea8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40560010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x405601d0" loc="36:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x405601d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405603a8"/>
        <function-ref name="isInput" scoped="" ref="0x40560488"/>
        <function-ref name="toggle" scoped="" ref="0x40560568"/>
        <function-ref name="isOutput" scoped="" ref="0x40560648"/>
        <function-ref name="get" scoped="" ref="0x40560728"/>
        <function-ref name="makeOutput" scoped="" ref="0x40560808"/>
        <function-ref name="set" scoped="" ref="0x405608e8"/>
        <function-ref name="clr" scoped="" ref="0x405609c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x4056d3d0" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x4056d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4056d5a8"/>
        <function-ref name="disable" scoped="" ref="0x4056d688"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4056d768"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4056d848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x405757a0" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x405757a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40575978"/>
        <function-ref name="fired" scoped="" ref="0x40575a58"/>
        <function-ref name="disable" scoped="" ref="0x40575b38"/>
        <function-ref name="isEnabled" scoped="" ref="0x40575c18"/>
        <function-ref name="reset" scoped="" ref="0x40575cf8"/>
        <function-ref name="setMask" scoped="" ref="0x40575dd8"/>
        <function-ref name="enable" scoped="" ref="0x40575eb8"/>
        <function-ref name="getPins" scoped="" ref="0x40569010"/>
        <function-ref name="getMask" scoped="" ref="0x405690f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x4056c3a0" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x4056c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4056c578"/>
        <function-ref name="fired" scoped="" ref="0x4056c658"/>
        <function-ref name="disable" scoped="" ref="0x4056c738"/>
        <function-ref name="isEnabled" scoped="" ref="0x4056c818"/>
        <function-ref name="reset" scoped="" ref="0x4056c8f8"/>
        <function-ref name="setMask" scoped="" ref="0x4056c9d8"/>
        <function-ref name="enable" scoped="" ref="0x4056cab8"/>
        <function-ref name="getPins" scoped="" ref="0x4056cb98"/>
        <function-ref name="getMask" scoped="" ref="0x4056cc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x4056ce70" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x4056ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4056b070"/>
        <function-ref name="disable" scoped="" ref="0x4056b150"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4056b230"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4056b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405625a0" loc="46:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405625a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40562778"/>
        <function-ref name="stopDone" scoped="" ref="0x40562858"/>
        <function-ref name="start" scoped="" ref="0x40562938"/>
        <function-ref name="stop" scoped="" ref="0x40562a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40562e78" loc="47:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40562e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4058c070"/>
        <function-ref name="getPayload" scoped="" ref="0x4058c150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058c230"/>
        <function-ref name="cancel" scoped="" ref="0x4058c310"/>
        <function-ref name="sendDone" scoped="" ref="0x4058c3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4058cbb0" loc="49:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4058cbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058cd88"/>
        <function-ref name="payloadLength" scoped="" ref="0x4058ce68"/>
        <function-ref name="getPayload" scoped="" ref="0x4058b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058b0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4058b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4058c858" loc="48:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4058c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058ca30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405891b0" loc="53:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405891b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40589388"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40589468"/>
        <function-ref name="led1On" scoped="" ref="0x40589548"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40589628"/>
        <function-ref name="led3Off" scoped="" ref="0x40589708"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405897e8"/>
        <function-ref name="get" scoped="" ref="0x405898c8"/>
        <function-ref name="led1Off" scoped="" ref="0x405899a8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40589a88"/>
        <function-ref name="led3On" scoped="" ref="0x40589b68"/>
        <function-ref name="led0On" scoped="" ref="0x40589c48"/>
        <function-ref name="led2Off" scoped="" ref="0x40589d28"/>
        <function-ref name="led2On" scoped="" ref="0x40589e08"/>
        <function-ref name="set" scoped="" ref="0x4058e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4059bbe8" loc="51:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4059bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4059bdc0"/>
        <function-ref name="noAck" scoped="" ref="0x4059bea0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40589010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40590a98" loc="50:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40590a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40590c70"/>
        <function-ref name="source" scoped="" ref="0x40590d50"/>
        <function-ref name="address" scoped="" ref="0x40590e30"/>
        <function-ref name="destination" scoped="" ref="0x40590f10"/>
        <function-ref name="setSource" scoped="" ref="0x4058a010"/>
        <function-ref name="setDestination" scoped="" ref="0x4058a0f0"/>
        <function-ref name="type" scoped="" ref="0x4058a1d0"/>
        <function-ref name="setType" scoped="" ref="0x4058a2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x4058a390"/>
        <function-ref name="setGroup" scoped="" ref="0x4058a470"/>
        <function-ref name="localGroup" scoped="" ref="0x4058a550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x405d4ed0" loc="54:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x405d4ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405d30c0"/>
        <function-ref name="getPayload" scoped="" ref="0x405d31a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d3280"/>
        <function-ref name="cancel" scoped="" ref="0x405d3360"/>
        <function-ref name="sendDone" scoped="" ref="0x405d3440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x405d35a0" loc="55:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x405d35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405d3778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4059cbe8" loc="47:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4059cbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4059cdd0"/>
        <function-ref name="getPayload" scoped="" ref="0x4059ceb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4059a010"/>
        <function-ref name="cancel" scoped="" ref="0x4059a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4059a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405d4310" loc="50:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405d4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d44e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405d45c8"/>
        <function-ref name="getPayload" scoped="" ref="0x405d46a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d4788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405d4868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4059a3a8" loc="48:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4059a3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4059a590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405d49a8" loc="51:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405d49a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405d4b80"/>
        <function-ref name="noAck" scoped="" ref="0x405d4c60"/>
        <function-ref name="wasAcked" scoped="" ref="0x405d4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4059a6d0" loc="49:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4059a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4059a8a8"/>
        <function-ref name="source" scoped="" ref="0x4059a988"/>
        <function-ref name="address" scoped="" ref="0x4059aa68"/>
        <function-ref name="destination" scoped="" ref="0x4059ab48"/>
        <function-ref name="setSource" scoped="" ref="0x4059ac28"/>
        <function-ref name="setDestination" scoped="" ref="0x4059ad08"/>
        <function-ref name="type" scoped="" ref="0x4059ade8"/>
        <function-ref name="setType" scoped="" ref="0x4059aec8"/>
        <function-ref name="isForMe" scoped="" ref="0x405d4010"/>
        <function-ref name="setGroup" scoped="" ref="0x405d40f0"/>
        <function-ref name="localGroup" scoped="" ref="0x405d41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405d2d10" loc="50:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405d2d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405d2ee8"/>
        <function-ref name="stopDone" scoped="" ref="0x405cf010"/>
        <function-ref name="start" scoped="" ref="0x405cf0f0"/>
        <function-ref name="stop" scoped="" ref="0x405cf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405cfc20" loc="52:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405cfc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4046d010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405cfdf8"/>
        <function-ref name="getPayload" scoped="" ref="0x405cfed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405ce010"/>
        <function-ref name="cancel" scoped="" ref="0x405ce0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405ce1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405d2978" loc="49:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405d2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405d2b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405cf618" loc="51:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405cf618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4046d010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405cf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405da840" loc="56:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405da840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405daa18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405daaf8"/>
        <function-ref name="led1On" scoped="" ref="0x405dabd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405dacb8"/>
        <function-ref name="led3Off" scoped="" ref="0x405dad98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405dae78"/>
        <function-ref name="get" scoped="" ref="0x405de010"/>
        <function-ref name="led1Off" scoped="" ref="0x405de0f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405de1d0"/>
        <function-ref name="led3On" scoped="" ref="0x405de2b0"/>
        <function-ref name="led0On" scoped="" ref="0x405de390"/>
        <function-ref name="led2Off" scoped="" ref="0x405de470"/>
        <function-ref name="led2On" scoped="" ref="0x405de550"/>
        <function-ref name="set" scoped="" ref="0x405de6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x405da338" loc="55:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x405da338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4046d010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x405da510"/>
        <function-ref name="offset" scoped="" ref="0x405da5f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x405da6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405ed0f8" loc="66:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405ed0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405ed2d0"/>
        <function-ref name="stopDone" scoped="" ref="0x405ed3b0"/>
        <function-ref name="start" scoped="" ref="0x405ed490"/>
        <function-ref name="stop" scoped="" ref="0x405ed570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x4062f7a0" loc="332:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x4062f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4062f978"/>
        <function-ref name="runTask" scoped="" ref="0x4062fa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x405f1548" loc="74:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x405f1548"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405f1720"/>
        <function-ref name="stop" scoped="" ref="0x405f1800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40607a18" loc="191:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40607a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40607bf0"/>
        <function-ref name="runTask" scoped="" ref="0x40607cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405eed48" loc="65:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405eed48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405eef20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40602518" loc="75:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40602518"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x406026f0"/>
        <function-ref name="flush" scoped="" ref="0x406027d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x4061e010" loc="322:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x4061e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4061e1e8"/>
        <function-ref name="runTask" scoped="" ref="0x4061e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x405f4c18" loc="72:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x405f4c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x405f4df0"/>
        <function-ref name="resetSend" scoped="" ref="0x405f4ed0"/>
        <function-ref name="dataReceived" scoped="" ref="0x405eb010"/>
        <function-ref name="resetReceive" scoped="" ref="0x405eb0f0"/>
        <function-ref name="putData" scoped="" ref="0x405eb1d0"/>
        <function-ref name="putDone" scoped="" ref="0x405eb2b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x405eb390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405eb500" loc="73:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405eb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405eb6d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405eb7b8"/>
        <function-ref name="led1On" scoped="" ref="0x405eb898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405eb978"/>
        <function-ref name="led3Off" scoped="" ref="0x405eba58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405ebb38"/>
        <function-ref name="get" scoped="" ref="0x405ebc18"/>
        <function-ref name="led1Off" scoped="" ref="0x405ebcf8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405ebdd8"/>
        <function-ref name="led3On" scoped="" ref="0x405ebeb8"/>
        <function-ref name="led0On" scoped="" ref="0x405f7010"/>
        <function-ref name="led2Off" scoped="" ref="0x405f70f0"/>
        <function-ref name="led2On" scoped="" ref="0x405f71d0"/>
        <function-ref name="set" scoped="" ref="0x405f7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x4062d428" loc="341:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x4062d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4062d600"/>
        <function-ref name="runTask" scoped="" ref="0x4062d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x405e87f8" loc="67:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x405e87f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x405e89d0"/>
        <function-ref name="nextByte" scoped="" ref="0x405e8ab0"/>
        <function-ref name="startSend" scoped="" ref="0x405e8b90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x405e8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x405f8948" loc="68:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405f8948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x405f8b20"/>
        <function-ref name="byteReceived" scoped="" ref="0x405f8c00"/>
        <function-ref name="endPacket" scoped="" ref="0x405f8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x4069fdb0" loc="275:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x4069fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4069e010"/>
        <function-ref name="runTask" scoped="" ref="0x4069e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x406a1710" loc="51:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x406a1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4046d010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406a18f8"/>
        <function-ref name="getPayload" scoped="" ref="0x406a19d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a1ab8"/>
        <function-ref name="cancel" scoped="" ref="0x406a1b98"/>
        <function-ref name="sendDone" scoped="" ref="0x406a1c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x4069e270" loc="158:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x4069e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4069e448"/>
        <function-ref name="runTask" scoped="" ref="0x4069e528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406a1350" loc="50:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406a1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4046d010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406a1538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x406a1ea0" loc="54:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x406a1ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4046d010"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x406a00c0"/>
        <function-ref name="offset" scoped="" ref="0x406a01a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x406a0280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406a0e50" loc="57:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406a0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4069f050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4069f130"/>
        <function-ref name="led1On" scoped="" ref="0x4069f210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4069f2f0"/>
        <function-ref name="led3Off" scoped="" ref="0x4069f3d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4069f4b0"/>
        <function-ref name="get" scoped="" ref="0x4069f590"/>
        <function-ref name="led1Off" scoped="" ref="0x4069f670"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4069f750"/>
        <function-ref name="led3On" scoped="" ref="0x4069f830"/>
        <function-ref name="led0On" scoped="" ref="0x4069f910"/>
        <function-ref name="led2Off" scoped="" ref="0x4069f9f0"/>
        <function-ref name="led2On" scoped="" ref="0x4069fad0"/>
        <function-ref name="set" scoped="" ref="0x4069fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x406a0898" loc="56:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x406a0898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x406a0a70"/>
        <function-ref name="nextByte" scoped="" ref="0x406a0b50"/>
        <function-ref name="startSend" scoped="" ref="0x406a0c30"/>
        <function-ref name="sendCompleted" scoped="" ref="0x406a0d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x406a03c0" loc="55:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x406a03c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x406a0598"/>
        <function-ref name="byteReceived" scoped="" ref="0x406a0678"/>
        <function-ref name="endPacket" scoped="" ref="0x406a0758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x406a79e8" loc="50:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406a79e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406a7bc0"/>
        <function-ref name="receivedByte" scoped="" ref="0x406a7ca0"/>
        <function-ref name="receive" scoped="" ref="0x406a7d80"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406a7e60"/>
        <function-ref name="receiveDone" scoped="" ref="0x40699010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406990f0"/>
        <function-ref name="sendDone" scoped="" ref="0x406991d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x4069d718" loc="48:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x4069d718"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x4069d8f0"/>
        <function-ref name="resetSend" scoped="" ref="0x4069d9d0"/>
        <function-ref name="dataReceived" scoped="" ref="0x4069dab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x4069db90"/>
        <function-ref name="putData" scoped="" ref="0x4069dc70"/>
        <function-ref name="putDone" scoped="" ref="0x4069dd50"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x4069de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40699340" loc="51:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40699340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40699518"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406995f8"/>
        <function-ref name="led1On" scoped="" ref="0x406996d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406997b8"/>
        <function-ref name="led3Off" scoped="" ref="0x40699898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40699978"/>
        <function-ref name="get" scoped="" ref="0x40699a58"/>
        <function-ref name="led1Off" scoped="" ref="0x40699b38"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40699c18"/>
        <function-ref name="led3On" scoped="" ref="0x40699cf8"/>
        <function-ref name="led0On" scoped="" ref="0x40699dd8"/>
        <function-ref name="led2Off" scoped="" ref="0x40699eb8"/>
        <function-ref name="led2On" scoped="" ref="0x406ac010"/>
        <function-ref name="set" scoped="" ref="0x406ac170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406bb8f0" loc="42:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406bb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406bbac8"/>
        <function-ref name="receive" scoped="" ref="0x406bbba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4069ca88" loc="41:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4069ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4069cc60"/>
        <function-ref name="receivedByte" scoped="" ref="0x4069cd40"/>
        <function-ref name="receive" scoped="" ref="0x4069ce20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4069cf00"/>
        <function-ref name="receiveDone" scoped="" ref="0x406be010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406be0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x406be1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4069c608" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4069c608"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4069c7e0"/>
        <function-ref name="stop" scoped="" ref="0x4069c8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406bd7a0" loc="41:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406bd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406bd978"/>
        <function-ref name="receive" scoped="" ref="0x406bda58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x406bdc20" loc="42:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406bdc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406bddf8"/>
        <function-ref name="receivedByte" scoped="" ref="0x406bded8"/>
        <function-ref name="receive" scoped="" ref="0x406b9010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406b90f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406b91d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406b92b0"/>
        <function-ref name="sendDone" scoped="" ref="0x406b9390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406c8418" loc="43:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406c8418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406c8b68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406b8068"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406c8de0"/>
        <function-ref name="overflow" scoped="" ref="0x406b82e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406bd330" loc="40:/usr/src/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406bd330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bd508"/>
        <function-ref name="stop" scoped="" ref="0x406bd5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406b7ae8" loc="50:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406b7ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406b7cc0"/>
        <function-ref name="receive" scoped="" ref="0x406b7da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x406f47b0" loc="53:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x406f47b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406f4988"/>
        <function-ref name="stop" scoped="" ref="0x406f4a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406b7398" loc="48:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406b7398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406b7570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x406b7f00" loc="51:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406b7f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406f40f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x406f41d0"/>
        <function-ref name="receive" scoped="" ref="0x406f42b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406f4390"/>
        <function-ref name="receiveDone" scoped="" ref="0x406f4470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406f4550"/>
        <function-ref name="sendDone" scoped="" ref="0x406f4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406f3c88" loc="56:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406f3c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406f23f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406f28e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406f2668"/>
        <function-ref name="overflow" scoped="" ref="0x406f2b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x406f3050" loc="55:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x406f3050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406f3228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406f3308"/>
        <function-ref name="rxDone" scoped="" ref="0x406f33e8"/>
        <function-ref name="txDone" scoped="" ref="0x406f34c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406f35a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406f3688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406f3768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406f3848"/>
        <function-ref name="tx" scoped="" ref="0x406f3928"/>
        <function-ref name="rx" scoped="" ref="0x406f3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406b76d0" loc="49:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406b76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406b78a8"/>
        <function-ref name="stop" scoped="" ref="0x406b7988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x406f4be8" loc="54:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x406f4be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406f4dc0"/>
        <function-ref name="stop" scoped="" ref="0x406f4ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406f50b8" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406f50b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406f5290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406f5370"/>
        <function-ref name="rxDone" scoped="" ref="0x406f5450"/>
        <function-ref name="txDone" scoped="" ref="0x406f5530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406f5610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406f56f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406f57d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406f58b0"/>
        <function-ref name="tx" scoped="" ref="0x406f5990"/>
        <function-ref name="rx" scoped="" ref="0x406f5a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x4070a760" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x4070a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4070a938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4070aa18"/>
        <function-ref name="rxDone" scoped="" ref="0x4070aaf8"/>
        <function-ref name="txDone" scoped="" ref="0x4070abd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4070acb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4070ad98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4070ae78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40709010"/>
        <function-ref name="tx" scoped="" ref="0x407090f0"/>
        <function-ref name="rx" scoped="" ref="0x407091d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406f6b98" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406f6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406f6d70"/>
        <function-ref name="stop" scoped="" ref="0x406f6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406f5cc8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406f5cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406f5ea0"/>
        <function-ref name="stop" scoped="" ref="0x4070a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x4070a268" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x4070a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4070a440"/>
        <function-ref name="stop" scoped="" ref="0x4070a520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406f6688" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406f6688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406f6860"/>
        <function-ref name="stop" scoped="" ref="0x406f6940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x407099f8" loc="114:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x407099f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40709bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x407068c0" loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x407068c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40706a98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40706b78"/>
        <function-ref name="rxDone" scoped="" ref="0x40706c58"/>
        <function-ref name="txDone" scoped="" ref="0x40706d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40706e18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40706ef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40705010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x407050f0"/>
        <function-ref name="tx" scoped="" ref="0x407051d0"/>
        <function-ref name="rx" scoped="" ref="0x407052b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40703010" loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40703010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407031e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x407054c0" loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x407054c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40705698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40704390" loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40704390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40704568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40704648"/>
        <function-ref name="rxDone" scoped="" ref="0x40704728"/>
        <function-ref name="txDone" scoped="" ref="0x40704808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x407048e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x407049c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40704aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40704b88"/>
        <function-ref name="tx" scoped="" ref="0x40704c68"/>
        <function-ref name="rx" scoped="" ref="0x40704d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x407063a8" loc="116:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x407063a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40706580"/>
        <function-ref name="stop" scoped="" ref="0x40706660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40705910" loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40705910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40705ae8"/>
        <function-ref name="stop" scoped="" ref="0x40705bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40705e40" loc="121:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40705e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40704050"/>
        <function-ref name="stop" scoped="" ref="0x40704130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x407033e0" loc="126:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x407033e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x407035b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40703698"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40703778"/>
        <function-ref name="actualMicro" scoped="" ref="0x40703858"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40703938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40703b20" loc="127:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40703b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40703cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40709e48" loc="115:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40709e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40706050"/>
        <function-ref name="stop" scoped="" ref="0x40706130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4040be50" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4040e050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4040d218" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4040d218"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403283d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403283d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4040d3f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4040d4d0"/>
        <function-ref name="led1On" scoped="" ref="0x4040d5b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4040d690"/>
        <function-ref name="led3Off" scoped="" ref="0x4040d770"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4040d850"/>
        <function-ref name="get" scoped="" ref="0x4040d930"/>
        <function-ref name="led1Off" scoped="" ref="0x4040da10"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4040daf0"/>
        <function-ref name="led3On" scoped="" ref="0x4040dbd0"/>
        <function-ref name="led0On" scoped="" ref="0x4040dcb0"/>
        <function-ref name="led2Off" scoped="" ref="0x4040dd90"/>
        <function-ref name="led2On" scoped="" ref="0x4040de70"/>
        <function-ref name="set" scoped="" ref="0x40414010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403324a0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403324a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40332678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4040c1a8" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4040c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406bac48" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406bac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407383b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407388a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40738628"/>
        <function-ref name="overflow" scoped="" ref="0x40738b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4074b6f8" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4074b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4074be48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40750350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407500d8"/>
        <function-ref name="overflow" scoped="" ref="0x407505c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4074c490" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4074c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4074cbe0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4074b110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4074ce58"/>
        <function-ref name="overflow" scoped="" ref="0x4074b388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4074f3f0" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4074f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4074fb40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40763048"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4074fdb8"/>
        <function-ref name="overflow" scoped="" ref="0x407632c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40760b60" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40760b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4075f308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4075f7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4075f580"/>
        <function-ref name="overflow" scoped="" ref="0x4075fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40762918" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40762918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40760088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40760578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40760300"/>
        <function-ref name="overflow" scoped="" ref="0x407607f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4075eb68" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4075eb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4075b308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4075b7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4075b580"/>
        <function-ref name="overflow" scoped="" ref="0x4075ba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4076f010" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4076f010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4076f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4076f448" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4076f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4076fb98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407770a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4076fe10"/>
        <function-ref name="overflow" scoped="" ref="0x40777320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x407775f0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x407775f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40775068"/>
        <function-ref name="test" scoped="" ref="0x407763e8"/>
        <function-ref name="get" scoped="" ref="0x40777c38"/>
        <function-ref name="reset" scoped="" ref="0x40776660"/>
        <function-ref name="getMode" scoped="" ref="0x40775308"/>
        <function-ref name="overflow" scoped="" ref="0x40776170"/>
        <function-ref name="isOn" scoped="" ref="0x40776dc8"/>
        <function-ref name="set" scoped="" ref="0x40777eb0"/>
        <function-ref name="start" scoped="" ref="0x407768d8"/>
        <function-ref name="stop" scoped="" ref="0x40776b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407911d8" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407911d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4077ec68"/>
        <function-ref name="test" scoped="" ref="0x4077e010"/>
        <function-ref name="fired" scoped="" ref="0x40791d38"/>
        <function-ref name="get" scoped="" ref="0x40791820"/>
        <function-ref name="reset" scoped="" ref="0x4077e288"/>
        <function-ref name="getMode" scoped="" ref="0x4077ef08"/>
        <function-ref name="isOn" scoped="" ref="0x4077e9f0"/>
        <function-ref name="set" scoped="" ref="0x40791a98"/>
        <function-ref name="start" scoped="" ref="0x4077e500"/>
        <function-ref name="stop" scoped="" ref="0x4077e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40774878" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40774878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407872e0"/>
        <function-ref name="test" scoped="" ref="0x40770668"/>
        <function-ref name="get" scoped="" ref="0x40774ec0"/>
        <function-ref name="reset" scoped="" ref="0x407708e0"/>
        <function-ref name="getMode" scoped="" ref="0x40787580"/>
        <function-ref name="overflow" scoped="" ref="0x407703f0"/>
        <function-ref name="isOn" scoped="" ref="0x40787068"/>
        <function-ref name="set" scoped="" ref="0x40770150"/>
        <function-ref name="start" scoped="" ref="0x40770b58"/>
        <function-ref name="stop" scoped="" ref="0x40770dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40781f08" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40781f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407859f0"/>
        <function-ref name="test" scoped="" ref="0x40786d08"/>
        <function-ref name="fired" scoped="" ref="0x40786a90"/>
        <function-ref name="force" scoped="" ref="0x40785f08"/>
        <function-ref name="get" scoped="" ref="0x40786578"/>
        <function-ref name="reset" scoped="" ref="0x40785010"/>
        <function-ref name="getMode" scoped="" ref="0x40785c90"/>
        <function-ref name="isOn" scoped="" ref="0x40785778"/>
        <function-ref name="set" scoped="" ref="0x407867f0"/>
        <function-ref name="start" scoped="" ref="0x40785288"/>
        <function-ref name="stop" scoped="" ref="0x40785500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4078cb98" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4078cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40789600"/>
        <function-ref name="test" scoped="" ref="0x4078b990"/>
        <function-ref name="fired" scoped="" ref="0x4078b718"/>
        <function-ref name="force" scoped="" ref="0x40789b18"/>
        <function-ref name="get" scoped="" ref="0x4078b200"/>
        <function-ref name="reset" scoped="" ref="0x4078bc08"/>
        <function-ref name="getMode" scoped="" ref="0x407898a0"/>
        <function-ref name="isOn" scoped="" ref="0x40789388"/>
        <function-ref name="set" scoped="" ref="0x4078b478"/>
        <function-ref name="start" scoped="" ref="0x4078be80"/>
        <function-ref name="stop" scoped="" ref="0x40789110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4079b6a8" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4079b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407981a0"/>
        <function-ref name="test" scoped="" ref="0x4079a528"/>
        <function-ref name="fired" scoped="" ref="0x4079a2b0"/>
        <function-ref name="get" scoped="" ref="0x4079bcf0"/>
        <function-ref name="reset" scoped="" ref="0x4079a7a0"/>
        <function-ref name="getMode" scoped="" ref="0x40798440"/>
        <function-ref name="isOn" scoped="" ref="0x4079af08"/>
        <function-ref name="set" scoped="" ref="0x4079a010"/>
        <function-ref name="start" scoped="" ref="0x4079aa18"/>
        <function-ref name="stop" scoped="" ref="0x4079ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407986f8" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407986f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407988d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40789f10" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40789f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4079f9f0"/>
        <function-ref name="test" scoped="" ref="0x40788d08"/>
        <function-ref name="fired" scoped="" ref="0x40788a90"/>
        <function-ref name="force" scoped="" ref="0x4079ff08"/>
        <function-ref name="get" scoped="" ref="0x40788578"/>
        <function-ref name="reset" scoped="" ref="0x4079f010"/>
        <function-ref name="getMode" scoped="" ref="0x4079fc90"/>
        <function-ref name="isOn" scoped="" ref="0x4079f778"/>
        <function-ref name="set" scoped="" ref="0x407887f0"/>
        <function-ref name="start" scoped="" ref="0x4079f288"/>
        <function-ref name="stop" scoped="" ref="0x4079f500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40798ae8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40798ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40798cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4079d320" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4079d320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4079cd68"/>
        <function-ref name="test" scoped="" ref="0x4079c110"/>
        <function-ref name="fired" scoped="" ref="0x4079de80"/>
        <function-ref name="force" scoped="" ref="0x4079b2c0"/>
        <function-ref name="get" scoped="" ref="0x4079d968"/>
        <function-ref name="reset" scoped="" ref="0x4079c388"/>
        <function-ref name="getMode" scoped="" ref="0x4079b048"/>
        <function-ref name="isOn" scoped="" ref="0x4079caf0"/>
        <function-ref name="set" scoped="" ref="0x4079dbe0"/>
        <function-ref name="start" scoped="" ref="0x4079c600"/>
        <function-ref name="stop" scoped="" ref="0x4079c878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4077da80" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4077da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4078c500"/>
        <function-ref name="test" scoped="" ref="0x4078d888"/>
        <function-ref name="get" scoped="" ref="0x4078d0f8"/>
        <function-ref name="reset" scoped="" ref="0x4078db00"/>
        <function-ref name="getMode" scoped="" ref="0x4078c7a0"/>
        <function-ref name="overflow" scoped="" ref="0x4078d610"/>
        <function-ref name="isOn" scoped="" ref="0x4078c288"/>
        <function-ref name="set" scoped="" ref="0x4078d370"/>
        <function-ref name="start" scoped="" ref="0x4078dd78"/>
        <function-ref name="stop" scoped="" ref="0x4078c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x4074db80" loc="47:/usr/src/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x4074db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4074dd58"/>
        <function-ref name="offset" scoped="" ref="0x4074de38"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4074df18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x407ee010" loc="43:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407ee1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x407ee2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407ee3a8"/>
        <function-ref name="cancel" scoped="" ref="0x407ee488"/>
        <function-ref name="sendDone" scoped="" ref="0x407ee568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x407ee6f0" loc="44:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407ee6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407ee8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407eea38" loc="45:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407eea38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407eec10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407eecf0"/>
        <function-ref name="led1On" scoped="" ref="0x407eedd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407eeeb0"/>
        <function-ref name="led3Off" scoped="" ref="0x407ed010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407ed0f0"/>
        <function-ref name="get" scoped="" ref="0x407ed1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407ed2b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407ed390"/>
        <function-ref name="led3On" scoped="" ref="0x407ed470"/>
        <function-ref name="led0On" scoped="" ref="0x407ed550"/>
        <function-ref name="led2Off" scoped="" ref="0x407ed630"/>
        <function-ref name="led2On" scoped="" ref="0x407ed710"/>
        <function-ref name="set" scoped="" ref="0x407ed870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x407ec218" loc="54:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x407ec218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407ec3f0"/>
        <function-ref name="runTask" scoped="" ref="0x407ec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x407f1a28" loc="38:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x407f1a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x407f1c00"/>
        <function-ref name="offset" scoped="" ref="0x407f1ce0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x407f1dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407f0a20" loc="42:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407f0a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407f0bf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407f0cd8"/>
        <function-ref name="led1On" scoped="" ref="0x407f0db8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407f0e98"/>
        <function-ref name="led3Off" scoped="" ref="0x407f7010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407f70f0"/>
        <function-ref name="get" scoped="" ref="0x407f71d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407f72b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407f7390"/>
        <function-ref name="led3On" scoped="" ref="0x407f7470"/>
        <function-ref name="led0On" scoped="" ref="0x407f7550"/>
        <function-ref name="led2Off" scoped="" ref="0x407f7630"/>
        <function-ref name="led2On" scoped="" ref="0x407f7710"/>
        <function-ref name="set" scoped="" ref="0x407f7870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4080d480" loc="50:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4080d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080d658"/>
        <function-ref name="isInput" scoped="" ref="0x4080d738"/>
        <function-ref name="toggle" scoped="" ref="0x4080d818"/>
        <function-ref name="isOutput" scoped="" ref="0x4080d8f8"/>
        <function-ref name="get" scoped="" ref="0x4080d9d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080dab8"/>
        <function-ref name="set" scoped="" ref="0x4080db98"/>
        <function-ref name="clr" scoped="" ref="0x4080dc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x4080a2e0" loc="53:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x4080a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080a4b8"/>
        <function-ref name="isInput" scoped="" ref="0x4080a598"/>
        <function-ref name="toggle" scoped="" ref="0x4080a678"/>
        <function-ref name="isOutput" scoped="" ref="0x4080a758"/>
        <function-ref name="get" scoped="" ref="0x4080a838"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080a918"/>
        <function-ref name="set" scoped="" ref="0x4080a9f8"/>
        <function-ref name="clr" scoped="" ref="0x4080aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4080e128" loc="46:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4080e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4080e300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4080de68" loc="51:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4080de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080b050"/>
        <function-ref name="isInput" scoped="" ref="0x4080b130"/>
        <function-ref name="toggle" scoped="" ref="0x4080b210"/>
        <function-ref name="isOutput" scoped="" ref="0x4080b2f0"/>
        <function-ref name="get" scoped="" ref="0x4080b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080b4b0"/>
        <function-ref name="set" scoped="" ref="0x4080b590"/>
        <function-ref name="clr" scoped="" ref="0x4080b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4080e470" loc="47:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4080e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4080e648"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4080e728"/>
        <function-ref name="led1On" scoped="" ref="0x4080e808"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4080e8e8"/>
        <function-ref name="led3Off" scoped="" ref="0x4080e9c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4080eaa8"/>
        <function-ref name="get" scoped="" ref="0x4080eb88"/>
        <function-ref name="led1Off" scoped="" ref="0x4080ec68"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4080ed48"/>
        <function-ref name="led3On" scoped="" ref="0x4080ee28"/>
        <function-ref name="led0On" scoped="" ref="0x4080ef08"/>
        <function-ref name="led2Off" scoped="" ref="0x4080d010"/>
        <function-ref name="led2On" scoped="" ref="0x4080d0f0"/>
        <function-ref name="set" scoped="" ref="0x4080d250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4080b860" loc="52:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4080b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080ba38"/>
        <function-ref name="isInput" scoped="" ref="0x4080bb18"/>
        <function-ref name="toggle" scoped="" ref="0x4080bbf8"/>
        <function-ref name="isOutput" scoped="" ref="0x4080bcd8"/>
        <function-ref name="get" scoped="" ref="0x4080bdb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080be98"/>
        <function-ref name="set" scoped="" ref="0x4080a010"/>
        <function-ref name="clr" scoped="" ref="0x4080a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x407f6c20" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407f6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f6df8"/>
        <function-ref name="isInput" scoped="" ref="0x407f6ed8"/>
        <function-ref name="toggle" scoped="" ref="0x40811010"/>
        <function-ref name="isOutput" scoped="" ref="0x408110f0"/>
        <function-ref name="get" scoped="" ref="0x408111d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408112b0"/>
        <function-ref name="set" scoped="" ref="0x40811390"/>
        <function-ref name="clr" scoped="" ref="0x40811470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x40810a48" loc="42:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x40810a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40810c20"/>
        <function-ref name="isInput" scoped="" ref="0x40810d00"/>
        <function-ref name="toggle" scoped="" ref="0x40810de0"/>
        <function-ref name="isOutput" scoped="" ref="0x40810ec0"/>
        <function-ref name="get" scoped="" ref="0x40829010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408290f0"/>
        <function-ref name="set" scoped="" ref="0x408291d0"/>
        <function-ref name="clr" scoped="" ref="0x408292b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40811660" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40811660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40811838"/>
        <function-ref name="isInput" scoped="" ref="0x40811918"/>
        <function-ref name="toggle" scoped="" ref="0x408119f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40811ad8"/>
        <function-ref name="get" scoped="" ref="0x40811bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40811c98"/>
        <function-ref name="set" scoped="" ref="0x40811d78"/>
        <function-ref name="clr" scoped="" ref="0x40811e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40829450" loc="45:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40829450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40829628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40810060" loc="41:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40810060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40810238"/>
        <function-ref name="isInput" scoped="" ref="0x40810318"/>
        <function-ref name="toggle" scoped="" ref="0x408103f8"/>
        <function-ref name="isOutput" scoped="" ref="0x408104d8"/>
        <function-ref name="get" scoped="" ref="0x408105b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40810698"/>
        <function-ref name="set" scoped="" ref="0x40810778"/>
        <function-ref name="clr" scoped="" ref="0x40810858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40825508" loc="60:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40825508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408256e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4049e778" loc="57:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4049e778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4049e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40825100" loc="59:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40825100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408252d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4049eb10" loc="58:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4049eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049ece8"/>
        <function-ref name="taskLoop" scoped="" ref="0x4049edc8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4049eea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4038a330" loc="48:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4038a508"/>
        <function-ref name="runTask" scoped="" ref="0x4038a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4032fb58" loc="47:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4032fd30"/>
        <function-ref name="taskLoop" scoped="" ref="0x4032fe10"/>
        <function-ref name="runNextTask" scoped="" ref="0x4032fef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403f8010" loc="56:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403f81e8"/>
        <function-ref name="runTask" scoped="" ref="0x403f82c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403f8c70" loc="57:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403f8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403f8e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403f9738" loc="55:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403f9738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f9910"/>
        <function-ref name="taskLoop" scoped="" ref="0x403f99f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403f9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x404a2930" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="UcminiSensorC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x404a2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4094f4c8"/>
        <function-ref name="fired" scoped="" ref="0x40826768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40826e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40826c18"/>
        <function-ref name="getdt" scoped="" ref="0x4094f978"/>
        <function-ref name="gett0" scoped="" ref="0x4094f720"/>
        <function-ref name="isRunning" scoped="" ref="0x408269c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40826010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4094f1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40826290"/>
        <function-ref name="stop" scoped="" ref="0x40826510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40835b58" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40835b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408306a8"/>
        <function-ref name="fired" scoped="" ref="0x40832938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40830068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40832de8"/>
        <function-ref name="getdt" scoped="" ref="0x40830b58"/>
        <function-ref name="gett0" scoped="" ref="0x40830900"/>
        <function-ref name="isRunning" scoped="" ref="0x40832b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408321e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40830388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40832460"/>
        <function-ref name="stop" scoped="" ref="0x408326e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4082e470" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4082e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4082d940"/>
        <function-ref name="fired" scoped="" ref="0x4082d110"/>
        <function-ref name="startAt" scoped="" ref="0x4082d600"/>
        <function-ref name="isRunning" scoped="" ref="0x4082d388"/>
        <function-ref name="getAlarm" scoped="" ref="0x4082dbb8"/>
        <function-ref name="start" scoped="" ref="0x4082ebc0"/>
        <function-ref name="stop" scoped="" ref="0x4082ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e24888" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e24888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045a9d8"/>
            <typename><typedef-ref name="T62khz" ref="0x4045ab80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e23d58"/>
        <function-ref name="fired" scoped="" ref="0x40e23528"/>
        <function-ref name="startAt" scoped="" ref="0x40e23a18"/>
        <function-ref name="isRunning" scoped="" ref="0x40e237a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e22010"/>
        <function-ref name="start" scoped="" ref="0x40e23010"/>
        <function-ref name="stop" scoped="" ref="0x40e232b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x40e132b0" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x40e132b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40e12d00"/>
        <function-ref name="test" scoped="" ref="0x40e120a8"/>
        <function-ref name="fired" scoped="" ref="0x40e13e10"/>
        <function-ref name="force" scoped="" ref="0x40e43288"/>
        <function-ref name="get" scoped="" ref="0x40e138f8"/>
        <function-ref name="reset" scoped="" ref="0x40e12320"/>
        <function-ref name="getMode" scoped="" ref="0x40e43010"/>
        <function-ref name="isOn" scoped="" ref="0x40e12a88"/>
        <function-ref name="set" scoped="" ref="0x40e13b70"/>
        <function-ref name="start" scoped="" ref="0x40e12598"/>
        <function-ref name="stop" scoped="" ref="0x40e12810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e188a8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e188a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045a9d8"/>
            <typename><typedef-ref name="T62khz" ref="0x4045ab80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e17d58"/>
        <function-ref name="fired" scoped="" ref="0x40e17528"/>
        <function-ref name="startAt" scoped="" ref="0x40e17a18"/>
        <function-ref name="isRunning" scoped="" ref="0x40e177a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e16010"/>
        <function-ref name="start" scoped="" ref="0x40e17010"/>
        <function-ref name="stop" scoped="" ref="0x40e172b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e18470" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e18470"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e18648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40e162e0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40e162e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40e15d30"/>
        <function-ref name="test" scoped="" ref="0x40e150d8"/>
        <function-ref name="get" scoped="" ref="0x40e16928"/>
        <function-ref name="reset" scoped="" ref="0x40e15350"/>
        <function-ref name="getMode" scoped="" ref="0x40e13010"/>
        <function-ref name="overflow" scoped="" ref="0x40e16e40"/>
        <function-ref name="isOn" scoped="" ref="0x40e15ab8"/>
        <function-ref name="set" scoped="" ref="0x40e16ba0"/>
        <function-ref name="start" scoped="" ref="0x40e155c8"/>
        <function-ref name="stop" scoped="" ref="0x40e15840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4086b9a0" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4086b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40866418"/>
        <function-ref name="test" scoped="" ref="0x408677a0"/>
        <function-ref name="get" scoped="" ref="0x40867010"/>
        <function-ref name="reset" scoped="" ref="0x40867a18"/>
        <function-ref name="getMode" scoped="" ref="0x408666b8"/>
        <function-ref name="overflow" scoped="" ref="0x40867528"/>
        <function-ref name="isOn" scoped="" ref="0x408661a0"/>
        <function-ref name="set" scoped="" ref="0x40867288"/>
        <function-ref name="start" scoped="" ref="0x40867c90"/>
        <function-ref name="stop" scoped="" ref="0x40867f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40862138" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40862138"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40861b80"/>
        <function-ref name="test" scoped="" ref="0x40862f10"/>
        <function-ref name="fired" scoped="" ref="0x40862c98"/>
        <function-ref name="get" scoped="" ref="0x40862780"/>
        <function-ref name="reset" scoped="" ref="0x408611a0"/>
        <function-ref name="getMode" scoped="" ref="0x40861e20"/>
        <function-ref name="isOn" scoped="" ref="0x40861908"/>
        <function-ref name="set" scoped="" ref="0x408629f8"/>
        <function-ref name="start" scoped="" ref="0x40861418"/>
        <function-ref name="stop" scoped="" ref="0x40861690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40866d80" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40866d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408637f0"/>
        <function-ref name="test" scoped="" ref="0x40865b70"/>
        <function-ref name="fired" scoped="" ref="0x408658f8"/>
        <function-ref name="force" scoped="" ref="0x40863d08"/>
        <function-ref name="get" scoped="" ref="0x408653e0"/>
        <function-ref name="reset" scoped="" ref="0x40865de8"/>
        <function-ref name="getMode" scoped="" ref="0x40863a90"/>
        <function-ref name="isOn" scoped="" ref="0x40863578"/>
        <function-ref name="set" scoped="" ref="0x40865658"/>
        <function-ref name="start" scoped="" ref="0x40863088"/>
        <function-ref name="stop" scoped="" ref="0x40863300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40877b98" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40877b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40874600"/>
        <function-ref name="test" scoped="" ref="0x40876990"/>
        <function-ref name="fired" scoped="" ref="0x40876718"/>
        <function-ref name="force" scoped="" ref="0x40874b18"/>
        <function-ref name="get" scoped="" ref="0x40876200"/>
        <function-ref name="reset" scoped="" ref="0x40876c08"/>
        <function-ref name="getMode" scoped="" ref="0x408748a0"/>
        <function-ref name="isOn" scoped="" ref="0x40874388"/>
        <function-ref name="set" scoped="" ref="0x40876478"/>
        <function-ref name="start" scoped="" ref="0x40876e80"/>
        <function-ref name="stop" scoped="" ref="0x40874110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x408876f8" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x408876f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x408878d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40874f10" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40874f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408729f0"/>
        <function-ref name="test" scoped="" ref="0x40873d08"/>
        <function-ref name="fired" scoped="" ref="0x40873a90"/>
        <function-ref name="force" scoped="" ref="0x40872f08"/>
        <function-ref name="get" scoped="" ref="0x40873578"/>
        <function-ref name="reset" scoped="" ref="0x40872010"/>
        <function-ref name="getMode" scoped="" ref="0x40872c90"/>
        <function-ref name="isOn" scoped="" ref="0x40872778"/>
        <function-ref name="set" scoped="" ref="0x408737f0"/>
        <function-ref name="start" scoped="" ref="0x40872288"/>
        <function-ref name="stop" scoped="" ref="0x40872500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4085f9e0" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4085f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40877500"/>
        <function-ref name="test" scoped="" ref="0x408787d8"/>
        <function-ref name="get" scoped="" ref="0x40878048"/>
        <function-ref name="reset" scoped="" ref="0x40878a50"/>
        <function-ref name="getMode" scoped="" ref="0x408777a0"/>
        <function-ref name="overflow" scoped="" ref="0x40878560"/>
        <function-ref name="isOn" scoped="" ref="0x40877288"/>
        <function-ref name="set" scoped="" ref="0x408782c0"/>
        <function-ref name="start" scoped="" ref="0x40878cc8"/>
        <function-ref name="stop" scoped="" ref="0x40877010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40887ae8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40887ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40887cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x4086e6c8" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x4086e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408871a0"/>
        <function-ref name="test" scoped="" ref="0x4086c528"/>
        <function-ref name="fired" scoped="" ref="0x4086c2b0"/>
        <function-ref name="get" scoped="" ref="0x4086ed10"/>
        <function-ref name="reset" scoped="" ref="0x4086c7a0"/>
        <function-ref name="getMode" scoped="" ref="0x40887440"/>
        <function-ref name="isOn" scoped="" ref="0x4086cf08"/>
        <function-ref name="set" scoped="" ref="0x4086c010"/>
        <function-ref name="start" scoped="" ref="0x4086ca18"/>
        <function-ref name="stop" scoped="" ref="0x4086cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40870320" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40870320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4086fd68"/>
        <function-ref name="test" scoped="" ref="0x4086f110"/>
        <function-ref name="fired" scoped="" ref="0x40870e80"/>
        <function-ref name="force" scoped="" ref="0x4086e2c0"/>
        <function-ref name="get" scoped="" ref="0x40870968"/>
        <function-ref name="reset" scoped="" ref="0x4086f388"/>
        <function-ref name="getMode" scoped="" ref="0x4086e048"/>
        <function-ref name="isOn" scoped="" ref="0x4086faf0"/>
        <function-ref name="set" scoped="" ref="0x40870be0"/>
        <function-ref name="start" scoped="" ref="0x4086f600"/>
        <function-ref name="stop" scoped="" ref="0x4086f878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408c4810" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408c4810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045a9d8"/>
            <typename><typedef-ref name="T62khz" ref="0x4045ab80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408c1010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408c1500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408c1288"/>
        <function-ref name="overflow" scoped="" ref="0x408c1778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408c07f8" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408c07f8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408c09d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408c0c30" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408c0c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045a9d8"/>
            <typename><typedef-ref name="T62khz" ref="0x4045ab80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408db3a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408db890"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408db618"/>
        <function-ref name="overflow" scoped="" ref="0x408dbb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x408dbdd8" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x408dbdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408d8878"/>
        <function-ref name="test" scoped="" ref="0x408d9bf8"/>
        <function-ref name="get" scoped="" ref="0x408d9468"/>
        <function-ref name="reset" scoped="" ref="0x408d9e70"/>
        <function-ref name="getMode" scoped="" ref="0x408d8b18"/>
        <function-ref name="overflow" scoped="" ref="0x408d9980"/>
        <function-ref name="isOn" scoped="" ref="0x408d8600"/>
        <function-ref name="set" scoped="" ref="0x408d96e0"/>
        <function-ref name="start" scoped="" ref="0x408d8110"/>
        <function-ref name="stop" scoped="" ref="0x408d8388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408d21f8" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408d21f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408d2948"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408d2e38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408d2bc0"/>
        <function-ref name="overflow" scoped="" ref="0x408d10d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x408ceae8" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x408ceae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045a9d8"/>
            <typename><typedef-ref name="T62khz" ref="0x4045ab80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ea308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408ea7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408ea580"/>
        <function-ref name="overflow" scoped="" ref="0x408eaa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408cf7f0" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408cf7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ce010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408ce500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408ce288"/>
        <function-ref name="overflow" scoped="" ref="0x408ce778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e21240" loc="61:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e21240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e20708"/>
        <function-ref name="fired" scoped="" ref="0x40e21ea8"/>
        <function-ref name="startAt" scoped="" ref="0x40e203c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e20150"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e20980"/>
        <function-ref name="start" scoped="" ref="0x40e21990"/>
        <function-ref name="stop" scoped="" ref="0x40e21c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40e1ef10" loc="73:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40e1ef10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045a9d8"/>
            <typename><typedef-ref name="T62khz" ref="0x4045ab80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e1c3e8"/>
        <function-ref name="fired" scoped="" ref="0x40e1db98"/>
        <function-ref name="startAt" scoped="" ref="0x40e1c0a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e1de10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e1c660"/>
        <function-ref name="start" scoped="" ref="0x40e1d680"/>
        <function-ref name="stop" scoped="" ref="0x40e1d920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e20cd0" loc="68:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e20cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e1e438"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e1e928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e1e6b0"/>
        <function-ref name="overflow" scoped="" ref="0x40e1eba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40926d08" loc="74:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40926d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40926ee0"/>
        <function-ref name="runTask" scoped="" ref="0x40924010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40909398" loc="49:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40909398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40926840"/>
        <function-ref name="fired" scoped="" ref="0x40926010"/>
        <function-ref name="startAt" scoped="" ref="0x40926500"/>
        <function-ref name="isRunning" scoped="" ref="0x40926288"/>
        <function-ref name="getAlarm" scoped="" ref="0x40926ab8"/>
        <function-ref name="start" scoped="" ref="0x40909ae8"/>
        <function-ref name="stop" scoped="" ref="0x40909d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409020a0" loc="48:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409020a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4090ab88"/>
        <function-ref name="fired" scoped="" ref="0x40902e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4090a548"/>
        <function-ref name="isOneShot" scoped="" ref="0x4090a2f0"/>
        <function-ref name="getdt" scoped="" ref="0x40909048"/>
        <function-ref name="gett0" scoped="" ref="0x4090ade0"/>
        <function-ref name="isRunning" scoped="" ref="0x4090a098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409026c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4090a868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40902948"/>
        <function-ref name="stop" scoped="" ref="0x40902bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40952948" loc="71:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40952948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40952b20"/>
        <function-ref name="runTask" scoped="" ref="0x40952c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40937688" loc="49:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40937688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40952248"/>
        <function-ref name="fired" scoped="" ref="0x409364e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40936bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40936998"/>
        <function-ref name="getdt" scoped="" ref="0x409526f8"/>
        <function-ref name="gett0" scoped="" ref="0x409524a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40936740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40937cb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40936f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40936010"/>
        <function-ref name="stop" scoped="" ref="0x40936290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40921338" loc="48:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40921338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40939ea8"/>
        <function-ref name="fired" scoped="" ref="0x40939110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40939848"/>
        <function-ref name="isOneShot" scoped="" ref="0x409395e0"/>
        <function-ref name="getdt" scoped="" ref="0x40937398"/>
        <function-ref name="gett0" scoped="" ref="0x40937130"/>
        <function-ref name="isRunning" scoped="" ref="0x40939378"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40921970"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40939b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40921c00"/>
        <function-ref name="stop" scoped="" ref="0x40921e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4094da68" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaTemperatureC.nc">
      <component-ref qname="UcminiSensorC.AtmegaTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4094da68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4094c0b8"/>
        <function-ref name="readDone" scoped="" ref="0x4094c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e6b230" loc="25:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaTemperatureC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e6b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e6b408"/>
        <function-ref name="configure" scoped="" ref="0x40e6b4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e6c168" loc="22:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaTemperatureC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e6c168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e6c790"/>
        <function-ref name="readDone" scoped="" ref="0x40e6c9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x40e6cd10" loc="24:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaTemperatureC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcConfigure" scoped="" ref="0x40e6cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40e6cee8"/>
        <function-ref name="getChannel" scoped="" ref="0x40e6b010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40e6b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40945d70" loc="19:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40945d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4095e3c0"/>
        <function-ref name="readDone" scoped="" ref="0x4095e618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x4095d1b8" loc="20:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x4095d1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4095d800"/>
        <function-ref name="readDone" scoped="" ref="0x4095da78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4095a158" loc="23:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4095a158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4095a330"/>
        <function-ref name="getChannel" scoped="" ref="0x4095a410"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4095a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40956b68" loc="24:/usr/src/tinyos/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40956b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40956d40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40956e20"/>
        <function-ref name="request" scoped="" ref="0x40956f00"/>
        <function-ref name="granted" scoped="" ref="0x40959010"/>
        <function-ref name="isOwner" scoped="" ref="0x409590f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40972100" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40972100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409722d8"/>
        <function-ref name="configure" scoped="" ref="0x409723b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x4096b870" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4096b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4096ba48"/>
        <function-ref name="dataReady" scoped="" ref="0x4096bb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x4096e4e0" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4096e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4096e6b8"/>
        <function-ref name="cancel" scoped="" ref="0x4096e798"/>
        <function-ref name="dataReady" scoped="" ref="0x4096e878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40959b68" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40959b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40959d40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40959e20"/>
        <function-ref name="request" scoped="" ref="0x40959f00"/>
        <function-ref name="granted" scoped="" ref="0x40954010"/>
        <function-ref name="isOwner" scoped="" ref="0x409540f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40972d98" loc="87:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40972d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40969010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40965c30" loc="90:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40965c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40965e08"/>
        <function-ref name="dataReady" scoped="" ref="0x40965ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x409656a8" loc="89:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x409656a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40965880"/>
        <function-ref name="cancel" scoped="" ref="0x40965960"/>
        <function-ref name="dataReady" scoped="" ref="0x40965a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x4097c958" loc="93:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x4097c958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x4097cb30"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x4097cc10"/>
        <function-ref name="setPrescaler" scoped="" ref="0x4097ccf0"/>
        <function-ref name="isEnabled" scoped="" ref="0x4097cdd0"/>
        <function-ref name="setChannel" scoped="" ref="0x4097ceb0"/>
        <function-ref name="enableAdc" scoped="" ref="0x40967010"/>
        <function-ref name="setAdlar" scoped="" ref="0x409670f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x409671d0"/>
        <function-ref name="isComplete" scoped="" ref="0x409672b0"/>
        <function-ref name="cancel" scoped="" ref="0x40967390"/>
        <function-ref name="disableAdc" scoped="" ref="0x40967470"/>
        <function-ref name="getRef" scoped="" ref="0x40967550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40967630"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40967790"/>
        <function-ref name="startConversion" scoped="" ref="0x40967870"/>
        <function-ref name="isStarted" scoped="" ref="0x40967950"/>
        <function-ref name="getChannel" scoped="" ref="0x40967a30"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40967b10"/>
        <function-ref name="setRef" scoped="" ref="0x40967bf0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40967cd0"/>
        <function-ref name="setContinuous" scoped="" ref="0x40967db0"/>
        <function-ref name="getValue" scoped="" ref="0x40967e90"/>
        <function-ref name="dataReady" scoped="" ref="0x40964010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40965218" loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40965218"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409653f0"/>
        <function-ref name="stop" scoped="" ref="0x409654d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x409641e8" loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x409641e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x409643c0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x409644a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40964580"/>
        <function-ref name="actualMicro" scoped="" ref="0x40964660"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40964740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x4099f268" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x4099f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x4099f440"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x4099f520"/>
        <function-ref name="setPrescaler" scoped="" ref="0x4099f600"/>
        <function-ref name="isEnabled" scoped="" ref="0x4099f6e0"/>
        <function-ref name="setChannel" scoped="" ref="0x4099f7c0"/>
        <function-ref name="enableAdc" scoped="" ref="0x4099f8a0"/>
        <function-ref name="setAdlar" scoped="" ref="0x4099f980"/>
        <function-ref name="enableInterruption" scoped="" ref="0x4099fa60"/>
        <function-ref name="isComplete" scoped="" ref="0x4099fb40"/>
        <function-ref name="cancel" scoped="" ref="0x4099fc20"/>
        <function-ref name="disableAdc" scoped="" ref="0x4099fd00"/>
        <function-ref name="getRef" scoped="" ref="0x4099fde0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x4099fec0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x4099e090"/>
        <function-ref name="startConversion" scoped="" ref="0x4099e170"/>
        <function-ref name="isStarted" scoped="" ref="0x4099e250"/>
        <function-ref name="getChannel" scoped="" ref="0x4099e330"/>
        <function-ref name="setAdcsra" scoped="" ref="0x4099e410"/>
        <function-ref name="setRef" scoped="" ref="0x4099e4f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x4099e5d0"/>
        <function-ref name="setContinuous" scoped="" ref="0x4099e6b0"/>
        <function-ref name="getValue" scoped="" ref="0x4099e790"/>
        <function-ref name="dataReady" scoped="" ref="0x4099e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40999a78" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40999a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40999c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x4099a2b8" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x4099a2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x4099a490"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x4099a570"/>
        <function-ref name="setPrescaler" scoped="" ref="0x4099a650"/>
        <function-ref name="isEnabled" scoped="" ref="0x4099a730"/>
        <function-ref name="setChannel" scoped="" ref="0x4099a810"/>
        <function-ref name="enableAdc" scoped="" ref="0x4099a8f0"/>
        <function-ref name="setAdlar" scoped="" ref="0x4099a9d0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x4099aab0"/>
        <function-ref name="isComplete" scoped="" ref="0x4099ab90"/>
        <function-ref name="cancel" scoped="" ref="0x4099ac70"/>
        <function-ref name="disableAdc" scoped="" ref="0x4099ad50"/>
        <function-ref name="getRef" scoped="" ref="0x4099ae30"/>
        <function-ref name="disableInterruption" scoped="" ref="0x4099af10"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40999090"/>
        <function-ref name="startConversion" scoped="" ref="0x40999170"/>
        <function-ref name="isStarted" scoped="" ref="0x40999250"/>
        <function-ref name="getChannel" scoped="" ref="0x40999330"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40999410"/>
        <function-ref name="setRef" scoped="" ref="0x409994f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x409995d0"/>
        <function-ref name="setContinuous" scoped="" ref="0x409996b0"/>
        <function-ref name="getValue" scoped="" ref="0x40999790"/>
        <function-ref name="dataReady" scoped="" ref="0x40999870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40999e38" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40999e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40998050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40a111e8" loc="92:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40a111e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40a113d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a114b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40a10208" loc="96:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40a10208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40a103f0"/>
        <function-ref name="configure" scoped="" ref="0x40a104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40a115f0" loc="93:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a115f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a117c8"/>
        <function-ref name="requested" scoped="" ref="0x40a118a8"/>
        <function-ref name="granted" scoped="" ref="0x40a11988"/>
        <function-ref name="isOwner" scoped="" ref="0x40a11a68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a11b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4099ba20" loc="91:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4099ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4099bc08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4099bce8"/>
        <function-ref name="request" scoped="" ref="0x4099bdc8"/>
        <function-ref name="granted" scoped="" ref="0x4099bea8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a11010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40a11c88" loc="94:/usr/src/tinyos/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a11c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a11e60"/>
        <function-ref name="userId" scoped="" ref="0x40a10010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e622d0" loc="44:/usr/src/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e622d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e624a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40e62608" loc="45:/usr/src/tinyos/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40e62608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e627e0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e628c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e629a0"/>
        <function-ref name="dequeue" scoped="" ref="0x40e62a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e61ee0" loc="55:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40e61ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e600e0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e601c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e60e58" loc="60:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e60e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e5e050"/>
        <function-ref name="configure" scoped="" ref="0x40e5e130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40e5e290" loc="61:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e5e290"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e5e468"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e5e548"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e5e628"/>
        <function-ref name="dequeue" scoped="" ref="0x40e5e708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40e60300" loc="56:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e60300"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e604d8"/>
        <function-ref name="requested" scoped="" ref="0x40e605b8"/>
        <function-ref name="granted" scoped="" ref="0x40e60698"/>
        <function-ref name="isOwner" scoped="" ref="0x40e60778"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e60858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e5e848" loc="62:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e5e848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e5ea20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e5eb00"/>
        <function-ref name="led1On" scoped="" ref="0x40e5ebe0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e5ecc0"/>
        <function-ref name="led3Off" scoped="" ref="0x40e5eda0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e5ee80"/>
        <function-ref name="get" scoped="" ref="0x40e5d010"/>
        <function-ref name="led1Off" scoped="" ref="0x40e5d0f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40e5d1d0"/>
        <function-ref name="led3On" scoped="" ref="0x40e5d2b0"/>
        <function-ref name="led0On" scoped="" ref="0x40e5d390"/>
        <function-ref name="led2Off" scoped="" ref="0x40e5d470"/>
        <function-ref name="led2On" scoped="" ref="0x40e5d550"/>
        <function-ref name="set" scoped="" ref="0x40e5d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e617a0" loc="54:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e617a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e61988"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e61a68"/>
        <function-ref name="request" scoped="" ref="0x40e61b48"/>
        <function-ref name="granted" scoped="" ref="0x40e61c28"/>
        <function-ref name="isOwner" scoped="" ref="0x40e61d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e60998" loc="57:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e60998"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e60b70"/>
        <function-ref name="userId" scoped="" ref="0x40e60c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40e5d830" loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40e5d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e5da08"/>
        <function-ref name="runTask" scoped="" ref="0x40e5dae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40a0ede8" loc="72:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40a0ede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40a0d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40a0d150" loc="73:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40a0d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a0d328"/>
        <function-ref name="requested" scoped="" ref="0x40a0d408"/>
        <function-ref name="granted" scoped="" ref="0x40a0d4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40a0d5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a0d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40a0e9f0" loc="70:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a0e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a0ebc8"/>
        <function-ref name="stop" scoped="" ref="0x40a0eca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a0d7e8" loc="74:/usr/src/tinyos/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a0d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a0d9c0"/>
        <function-ref name="userId" scoped="" ref="0x40a0daa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40eac848" loc="62:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40eac848"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40eaca20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40eacb60" loc="63:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40eacb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40eacd38"/>
        <function-ref name="requested" scoped="" ref="0x40eace18"/>
        <function-ref name="granted" scoped="" ref="0x40eacef8"/>
        <function-ref name="isOwner" scoped="" ref="0x40eab010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40eab0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40eac450" loc="60:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40eac450"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40eac628"/>
        <function-ref name="stop" scoped="" ref="0x40eac708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40eab230" loc="64:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40eab230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40eab408"/>
        <function-ref name="userId" scoped="" ref="0x40eab4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40a1a088" loc="54:/usr/src/tinyos/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a1a088"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a1a7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40a1d3d8" loc="48:/usr/src/tinyos/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40a1d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a1da00"/>
        <function-ref name="readDone" scoped="" ref="0x40a1dc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40a1c390" loc="49:/usr/src/tinyos/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40a1c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a1c9d8"/>
        <function-ref name="readDone" scoped="" ref="0x40a1cc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40a1b8b8" loc="53:/usr/src/tinyos/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a1b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40a1ba90"/>
        <function-ref name="getChannel" scoped="" ref="0x40a1bb70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40a1bc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40a1b040" loc="52:/usr/src/tinyos/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40a1b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40a1b218"/>
        <function-ref name="cancel" scoped="" ref="0x40a1b2f8"/>
        <function-ref name="dataReady" scoped="" ref="0x40a1b3d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40a32c70" loc="104:/usr/src/tinyos/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40a32c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a32e48"/>
        <function-ref name="runTask" scoped="" ref="0x40a32f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40a1ee30" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a1ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a46590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40a455d8" loc="53:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40a455d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40a45d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a3c0c0" loc="54:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a3c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a3c810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a3cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a3ca88"/>
        <function-ref name="overflow" scoped="" ref="0x40a3b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40a59268" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40a59268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x4045a220"/>
            <typename><typedef-ref name="TMcu" ref="0x4045a5d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a599b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a59ea8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a59c30"/>
        <function-ref name="overflow" scoped="" ref="0x40a58150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a39010" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a39010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40452450"/>
            <typename><typedef-ref name="TMicro" ref="0x40452618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a39760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a39c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a399d8"/>
        <function-ref name="overflow" scoped="" ref="0x40a39ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40a47af0" loc="24:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40a47af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a571e0"/>
        <function-ref name="readDone" scoped="" ref="0x40a57448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40a578a8" loc="26:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40a578a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a57ee0"/>
        <function-ref name="readDone" scoped="" ref="0x40a49180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40a49500" loc="27:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a49500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a496e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a497c8"/>
        <function-ref name="request" scoped="" ref="0x40a498a8"/>
        <function-ref name="granted" scoped="" ref="0x40a49988"/>
        <function-ref name="isOwner" scoped="" ref="0x40a49a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40a64010" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaTemperatureP.nc">
      <component-ref qname="AtmegaTemperatureP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a64010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40a641e8"/>
        <function-ref name="getChannel" scoped="" ref="0x40a642c8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40a643a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40a5dc60" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <component-ref qname="UcminiSensorC.AtmegaVoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40a5dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a662c8"/>
        <function-ref name="readDone" scoped="" ref="0x40a66520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e98010" loc="25:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e98010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e981e8"/>
        <function-ref name="configure" scoped="" ref="0x40e982c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e9aeb8" loc="22:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e9aeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e99500"/>
        <function-ref name="readDone" scoped="" ref="0x40e99758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x40e99a80" loc="24:/usr/src/tinyos/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcConfigure" scoped="" ref="0x40e99a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40e99c58"/>
        <function-ref name="getChannel" scoped="" ref="0x40e99d38"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40e99e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40a5b200" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/sensors/AtmegaVoltageP.nc">
      <component-ref qname="AtmegaVoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40a5b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40a5b3d8"/>
        <function-ref name="getChannel" scoped="" ref="0x40a5b4b8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40a5b598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40a75ba0" loc="37:/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/LightC.nc">
      <component-ref qname="UcminiSensorC.LightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40a75ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a651e0"/>
        <function-ref name="readDone" scoped="" ref="0x40a65438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e94ba8" loc="38:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviRawLightC.nc">
      <component-ref qname="UcminiSensorC.LightC.Bh1750fviRawLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e94ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e931f0"/>
        <function-ref name="readDone" scoped="" ref="0x40e93448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40a77878" loc="38:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <component-ref qname="Bh1750fviArbitratedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40a77878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a77ea0"/>
        <function-ref name="readDone" scoped="" ref="0x40a74110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Light" ref="0x40a749d8" loc="36:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <component-ref qname="Bh1750fviC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x40a749d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a71010"/>
        <function-ref name="readDone" scoped="" ref="0x40a71268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Light" ref="0x40a71b20" loc="36:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x40a71b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a6d1e0"/>
        <function-ref name="readDone" scoped="" ref="0x40a6d438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusPowerManager" ref="0x40a80e08" loc="41:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40a80e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40a83010"/>
        <function-ref name="requestPower" scoped="" ref="0x40a830f0"/>
        <function-ref name="powerOff" scoped="" ref="0x40a831d0"/>
        <function-ref name="configure" scoped="" ref="0x40a832b0"/>
        <function-ref name="releasePower" scoped="" ref="0x40a83390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimeout" ref="0x40a97010" loc="121:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimeout" scoped="" ref="0x40a97010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a971e8"/>
        <function-ref name="runTask" scoped="" ref="0x40a972c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a83520" loc="42:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a83520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a836f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40a85810" loc="40:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40a85810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a859e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a85ac8"/>
        <function-ref name="request" scoped="" ref="0x40a85ba8"/>
        <function-ref name="granted" scoped="" ref="0x40a85c88"/>
        <function-ref name="isOwner" scoped="" ref="0x40a85d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40a87528" loc="38:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40a87528"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a87b70"/>
        <function-ref name="writeDone" scoped="" ref="0x40a6ce20"/>
        <function-ref name="write" scoped="" ref="0x40a6c1e0"/>
        <function-ref name="readDone" scoped="" ref="0x40a6c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalReadDone" ref="0x40a9c200" loc="102:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalReadDone" scoped="" ref="0x40a9c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a9c3d8"/>
        <function-ref name="runTask" scoped="" ref="0x40a9c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40a8a520" loc="39:/usr/src/tinyos/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a8a520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a85048"/>
        <function-ref name="fired" scoped="" ref="0x40a862c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a869c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a86770"/>
        <function-ref name="getdt" scoped="" ref="0x40a854f8"/>
        <function-ref name="gett0" scoped="" ref="0x40a852a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a86518"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a8ab48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a86ce8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a8adc8"/>
        <function-ref name="stop" scoped="" ref="0x40a86068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ab24c8" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="Bh1750fviC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ab24c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ab0010"/>
        <function-ref name="fired" scoped="" ref="0x40ab1268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ab1970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ab1718"/>
        <function-ref name="getdt" scoped="" ref="0x40ab04c0"/>
        <function-ref name="gett0" scoped="" ref="0x40ab0268"/>
        <function-ref name="isRunning" scoped="" ref="0x40ab14c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ab2af0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ab1c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ab2d70"/>
        <function-ref name="stop" scoped="" ref="0x40ab1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40aaab60" loc="38:/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <component-ref qname="HplBh1750C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40aaab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40aaad38"/>
        <function-ref name="requestPower" scoped="" ref="0x40aaae18"/>
        <function-ref name="powerOff" scoped="" ref="0x40aaaef8"/>
        <function-ref name="configure" scoped="" ref="0x40aa9010"/>
        <function-ref name="releasePower" scoped="" ref="0x40aa90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aaa410" loc="37:/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <component-ref qname="HplBh1750C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40aaa410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aaa5e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aaa6c8"/>
        <function-ref name="request" scoped="" ref="0x40aaa7a8"/>
        <function-ref name="granted" scoped="" ref="0x40aaa888"/>
        <function-ref name="isOwner" scoped="" ref="0x40aaa968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40aaf4e8" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <component-ref qname="HplBh1750C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40aaf4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aafb30"/>
        <function-ref name="writeDone" scoped="" ref="0x40aacda8"/>
        <function-ref name="write" scoped="" ref="0x40aac168"/>
        <function-ref name="readDone" scoped="" ref="0x40aac788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40aa8db0" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplBh1750C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40aa8db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aa7010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aa70f0"/>
        <function-ref name="request" scoped="" ref="0x40aa71d0"/>
        <function-ref name="granted" scoped="" ref="0x40aa72b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40aa7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40aa7580" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplBh1750C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40aa7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aa7bc8"/>
        <function-ref name="writeDone" scoped="" ref="0x40b7ae40"/>
        <function-ref name="write" scoped="" ref="0x40b7a200"/>
        <function-ref name="readDone" scoped="" ref="0x40b7a820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ac3260" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ac3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ac3438"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ac3518"/>
        <function-ref name="request" scoped="" ref="0x40ac35f8"/>
        <function-ref name="granted" scoped="" ref="0x40ac36d8"/>
        <function-ref name="isOwner" scoped="" ref="0x40ac37b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40ac3d98" loc="46:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40ac3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ac1400"/>
        <function-ref name="writeDone" scoped="" ref="0x40ac0688"/>
        <function-ref name="write" scoped="" ref="0x40ac1a20"/>
        <function-ref name="readDone" scoped="" ref="0x40ac0068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40abce98" loc="92:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40abce98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ac70c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ac71a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ac7e28" loc="96:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ac7e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ac6050"/>
        <function-ref name="configure" scoped="" ref="0x40ac6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40ac72e0" loc="93:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ac72e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ac74b8"/>
        <function-ref name="requested" scoped="" ref="0x40ac7598"/>
        <function-ref name="granted" scoped="" ref="0x40ac7678"/>
        <function-ref name="isOwner" scoped="" ref="0x40ac7758"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ac7838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40abc758" loc="91:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40abc758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40abc940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40abca20"/>
        <function-ref name="request" scoped="" ref="0x40abcb00"/>
        <function-ref name="granted" scoped="" ref="0x40abcbe0"/>
        <function-ref name="isOwner" scoped="" ref="0x40abccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ac7978" loc="94:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ac7978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ac7b50"/>
        <function-ref name="userId" scoped="" ref="0x40ac7c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ebb010" loc="44:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ebb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ebb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40ebb348" loc="45:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40ebb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ebb520"/>
        <function-ref name="isEmpty" scoped="" ref="0x40ebb600"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40ebb6e0"/>
        <function-ref name="dequeue" scoped="" ref="0x40ebb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40eb9c00" loc="55:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40eb9c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40eb9de8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40eb9ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40eb8b88" loc="60:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40eb8b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40eb8d70"/>
        <function-ref name="configure" scoped="" ref="0x40eb8e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40eb7010" loc="61:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40eb7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40eb71e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40eb72c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40eb73a8"/>
        <function-ref name="dequeue" scoped="" ref="0x40eb7488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40eb8030" loc="56:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40eb8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40eb8208"/>
        <function-ref name="requested" scoped="" ref="0x40eb82e8"/>
        <function-ref name="granted" scoped="" ref="0x40eb83c8"/>
        <function-ref name="isOwner" scoped="" ref="0x40eb84a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40eb8588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40eb75c8" loc="62:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40eb75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40eb77a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40eb7880"/>
        <function-ref name="led1On" scoped="" ref="0x40eb7960"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40eb7a40"/>
        <function-ref name="led3Off" scoped="" ref="0x40eb7b20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40eb7c00"/>
        <function-ref name="get" scoped="" ref="0x40eb7ce0"/>
        <function-ref name="led1Off" scoped="" ref="0x40eb7dc0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40eb7ea0"/>
        <function-ref name="led3On" scoped="" ref="0x40eb6010"/>
        <function-ref name="led0On" scoped="" ref="0x40eb60f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40eb61d0"/>
        <function-ref name="led2On" scoped="" ref="0x40eb62b0"/>
        <function-ref name="set" scoped="" ref="0x40eb6410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40eb94c0" loc="54:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40eb94c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40eb96a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40eb9788"/>
        <function-ref name="request" scoped="" ref="0x40eb9868"/>
        <function-ref name="granted" scoped="" ref="0x40eb9948"/>
        <function-ref name="isOwner" scoped="" ref="0x40eb9a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40eb86c8" loc="57:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40eb86c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40eb88a0"/>
        <function-ref name="userId" scoped="" ref="0x40eb8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40eb6590" loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40eb6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40eb6768"/>
        <function-ref name="runTask" scoped="" ref="0x40eb6848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40aea408" loc="62:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40aea408"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40aea5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40aea720" loc="63:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40aea720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aea8f8"/>
        <function-ref name="requested" scoped="" ref="0x40aea9d8"/>
        <function-ref name="granted" scoped="" ref="0x40aeaab8"/>
        <function-ref name="isOwner" scoped="" ref="0x40aeab98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40aeac78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40aea010" loc="60:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40aea010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40aea1e8"/>
        <function-ref name="stop" scoped="" ref="0x40aea2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40aeadb8" loc="64:/usr/src/tinyos/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40aeadb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ae9010"/>
        <function-ref name="userId" scoped="" ref="0x40ae90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x40b0f240" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40b0f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40b0f418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40aec300" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40aec300"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40aec948"/>
        <function-ref name="writeDone" scoped="" ref="0x40aebc50"/>
        <function-ref name="write" scoped="" ref="0x40aeb010"/>
        <function-ref name="readDone" scoped="" ref="0x40aeb630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40b0f578" loc="46:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b0f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b0f750"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b0f830"/>
        <function-ref name="led1On" scoped="" ref="0x40b0f910"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b0f9f0"/>
        <function-ref name="led3Off" scoped="" ref="0x40b0fad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b0fbb0"/>
        <function-ref name="get" scoped="" ref="0x40b0fc90"/>
        <function-ref name="led1Off" scoped="" ref="0x40b0fd70"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40b0fe50"/>
        <function-ref name="led3On" scoped="" ref="0x40b0e010"/>
        <function-ref name="led0On" scoped="" ref="0x40b0e0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40b0e1d0"/>
        <function-ref name="led2On" scoped="" ref="0x40b0e2b0"/>
        <function-ref name="set" scoped="" ref="0x40b0e410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ae82f0" loc="41:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ae82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ae84d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ae85b8"/>
        <function-ref name="request" scoped="" ref="0x40ae8698"/>
        <function-ref name="granted" scoped="" ref="0x40ae8778"/>
        <function-ref name="isOwner" scoped="" ref="0x40ae8858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40ae8ae0" loc="42:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40ae8ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ae7200"/>
        <function-ref name="writeDone" scoped="" ref="0x40aed4b8"/>
        <function-ref name="write" scoped="" ref="0x40ae7830"/>
        <function-ref name="readDone" scoped="" ref="0x40ae7e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40aedb38" loc="43:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40aedb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40aedd20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40aede00"/>
        <function-ref name="request" scoped="" ref="0x40aedee0"/>
        <function-ref name="granted" scoped="" ref="0x40aec010"/>
        <function-ref name="isOwner" scoped="" ref="0x40aec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x40b43d20" loc="79:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40b43d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40b43ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x40b42090" loc="81:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40b42090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40b42268"/>
        <function-ref name="sendCommand" scoped="" ref="0x40b42348"/>
        <function-ref name="setStart" scoped="" ref="0x40b42428"/>
        <function-ref name="status" scoped="" ref="0x40b42508"/>
        <function-ref name="hasAcks" scoped="" ref="0x40b425e8"/>
        <function-ref name="isEnabled" scoped="" ref="0x40b426c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b427a8"/>
        <function-ref name="read" scoped="" ref="0x40b42888"/>
        <function-ref name="init" scoped="" ref="0x40b42968"/>
        <function-ref name="enableAck" scoped="" ref="0x40b42a48"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b42b28"/>
        <function-ref name="hasStart" scoped="" ref="0x40b42c08"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b42ce8"/>
        <function-ref name="commandComplete" scoped="" ref="0x40b42e48"/>
        <function-ref name="enable" scoped="" ref="0x40b42f28"/>
        <function-ref name="write" scoped="" ref="0x40b41018"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40b410f8"/>
        <function-ref name="off" scoped="" ref="0x40b411d8"/>
        <function-ref name="setStop" scoped="" ref="0x40b412b8"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40b41398"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b41478"/>
        <function-ref name="hasStop" scoped="" ref="0x40b41558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x40b416d8" loc="82:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x40b416d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b418b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b41990"/>
        <function-ref name="led1On" scoped="" ref="0x40b41a70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b41b50"/>
        <function-ref name="led3Off" scoped="" ref="0x40b41c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b41d10"/>
        <function-ref name="get" scoped="" ref="0x40b41df0"/>
        <function-ref name="led1Off" scoped="" ref="0x40b41ed0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40b40010"/>
        <function-ref name="led3On" scoped="" ref="0x40b400f0"/>
        <function-ref name="led0On" scoped="" ref="0x40b401d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40b402b0"/>
        <function-ref name="led2On" scoped="" ref="0x40b40390"/>
        <function-ref name="set" scoped="" ref="0x40b404f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x40b40670" loc="83:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x40b40670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b40848"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b40928"/>
        <function-ref name="led1On" scoped="" ref="0x40b40a08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b40ae8"/>
        <function-ref name="led3Off" scoped="" ref="0x40b40bc8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b40ca8"/>
        <function-ref name="get" scoped="" ref="0x40b40d88"/>
        <function-ref name="led1Off" scoped="" ref="0x40b40e68"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40b3f010"/>
        <function-ref name="led3On" scoped="" ref="0x40b3f0f0"/>
        <function-ref name="led0On" scoped="" ref="0x40b3f1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40b3f2b0"/>
        <function-ref name="led2On" scoped="" ref="0x40b3f390"/>
        <function-ref name="set" scoped="" ref="0x40b3f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40b0c978" loc="77:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b0c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b0cb50"/>
        <function-ref name="stop" scoped="" ref="0x40b0cc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40b0ce20" loc="78:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40b0ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b44488"/>
        <function-ref name="writeDone" scoped="" ref="0x40b43748"/>
        <function-ref name="write" scoped="" ref="0x40b44aa8"/>
        <function-ref name="readDone" scoped="" ref="0x40b43128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40b3ef00" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40b3ef00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40b3b0f0"/>
        <function-ref name="sendCommand" scoped="" ref="0x40b3b1d0"/>
        <function-ref name="setStart" scoped="" ref="0x40b3b2b0"/>
        <function-ref name="status" scoped="" ref="0x40b3b390"/>
        <function-ref name="hasAcks" scoped="" ref="0x40b3b470"/>
        <function-ref name="isEnabled" scoped="" ref="0x40b3b550"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b3b630"/>
        <function-ref name="read" scoped="" ref="0x40b3b710"/>
        <function-ref name="init" scoped="" ref="0x40b3b7f0"/>
        <function-ref name="enableAck" scoped="" ref="0x40b3b8d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b3b9b0"/>
        <function-ref name="hasStart" scoped="" ref="0x40b3ba90"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b3bb70"/>
        <function-ref name="commandComplete" scoped="" ref="0x40b3bcd0"/>
        <function-ref name="enable" scoped="" ref="0x40b3bdb0"/>
        <function-ref name="write" scoped="" ref="0x40b3be90"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40b3a010"/>
        <function-ref name="off" scoped="" ref="0x40b3a0f0"/>
        <function-ref name="setStop" scoped="" ref="0x40b3a1d0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40b3a2b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b3a390"/>
        <function-ref name="hasStop" scoped="" ref="0x40b3a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40b37010" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40b37010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40b371e8"/>
        <function-ref name="sendCommand" scoped="" ref="0x40b372c8"/>
        <function-ref name="setStart" scoped="" ref="0x40b373a8"/>
        <function-ref name="status" scoped="" ref="0x40b37488"/>
        <function-ref name="hasAcks" scoped="" ref="0x40b37568"/>
        <function-ref name="isEnabled" scoped="" ref="0x40b37648"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40b37728"/>
        <function-ref name="read" scoped="" ref="0x40b37808"/>
        <function-ref name="init" scoped="" ref="0x40b378e8"/>
        <function-ref name="enableAck" scoped="" ref="0x40b379c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40b37aa8"/>
        <function-ref name="hasStart" scoped="" ref="0x40b37b88"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40b37c68"/>
        <function-ref name="commandComplete" scoped="" ref="0x40b37dc8"/>
        <function-ref name="enable" scoped="" ref="0x40b37ea8"/>
        <function-ref name="write" scoped="" ref="0x40b5c010"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40b5c0f0"/>
        <function-ref name="off" scoped="" ref="0x40b5c1d0"/>
        <function-ref name="setStop" scoped="" ref="0x40b5c2b0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40b5c390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40b5c470"/>
        <function-ref name="hasStop" scoped="" ref="0x40b5c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40b5c758" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40b5c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40b5c930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x40b5cb60" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x40b5cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b5cd38"/>
        <function-ref name="isInput" scoped="" ref="0x40b5ce18"/>
        <function-ref name="toggle" scoped="" ref="0x40b5cef8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b5b010"/>
        <function-ref name="get" scoped="" ref="0x40b5b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b5b1d0"/>
        <function-ref name="set" scoped="" ref="0x40b5b2b0"/>
        <function-ref name="clr" scoped="" ref="0x40b5b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40b5a010" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40b5a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40b5a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x40b5b598" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x40b5b598"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b5b770"/>
        <function-ref name="isInput" scoped="" ref="0x40b5b850"/>
        <function-ref name="toggle" scoped="" ref="0x40b5b930"/>
        <function-ref name="isOutput" scoped="" ref="0x40b5ba10"/>
        <function-ref name="get" scoped="" ref="0x40b5baf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b5bbd0"/>
        <function-ref name="set" scoped="" ref="0x40b5bcb0"/>
        <function-ref name="clr" scoped="" ref="0x40b5bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b3c8c0" loc="46:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b3c8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b3ca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40b3cc28" loc="47:/usr/src/tinyos/tos/platforms/ucmini/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b3cc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b3ce00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b3cee0"/>
        <function-ref name="led1On" scoped="" ref="0x40b60010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b600f0"/>
        <function-ref name="led3Off" scoped="" ref="0x40b601d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b602b0"/>
        <function-ref name="get" scoped="" ref="0x40b60390"/>
        <function-ref name="led1Off" scoped="" ref="0x40b60470"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40b60550"/>
        <function-ref name="led3On" scoped="" ref="0x40b60630"/>
        <function-ref name="led0On" scoped="" ref="0x40b60710"/>
        <function-ref name="led2Off" scoped="" ref="0x40b607f0"/>
        <function-ref name="led2On" scoped="" ref="0x40b608d0"/>
        <function-ref name="set" scoped="" ref="0x40b60a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40b79f10" loc="36:/usr/src/tinyos/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40b79f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40b76108"/>
        <function-ref name="requestPower" scoped="" ref="0x40b761e8"/>
        <function-ref name="powerOff" scoped="" ref="0x40b762c8"/>
        <function-ref name="configure" scoped="" ref="0x40b763a8"/>
        <function-ref name="releasePower" scoped="" ref="0x40b76488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40b74730" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40b74730"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40b74908"/>
        <function-ref name="requestPower" scoped="" ref="0x40b749e8"/>
        <function-ref name="powerOff" scoped="" ref="0x40b74ac8"/>
        <function-ref name="configure" scoped="" ref="0x40b74ba8"/>
        <function-ref name="releasePower" scoped="" ref="0x40b74c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40b74de8" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40b74de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ba8010"/>
        <function-ref name="isInput" scoped="" ref="0x40ba80f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ba81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ba82b0"/>
        <function-ref name="get" scoped="" ref="0x40ba8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ba8470"/>
        <function-ref name="set" scoped="" ref="0x40ba8550"/>
        <function-ref name="clr" scoped="" ref="0x40ba8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40f0e5e0" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40f0e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40f0e7b8"/>
        <function-ref name="requestPower" scoped="" ref="0x40f0e898"/>
        <function-ref name="powerOff" scoped="" ref="0x40f0e978"/>
        <function-ref name="configure" scoped="" ref="0x40f0ea58"/>
        <function-ref name="releasePower" scoped="" ref="0x40f0eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f0a968" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f0a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f0ab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40f0a010" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40f0a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f0a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f0a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f0a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f0a488"/>
        <function-ref name="get" scoped="" ref="0x40f0a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f0a648"/>
        <function-ref name="set" scoped="" ref="0x40f0a728"/>
        <function-ref name="clr" scoped="" ref="0x40f0a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40f0ed28" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f0ed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f0b8a8"/>
        <function-ref name="fired" scoped="" ref="0x40f0dac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f0b268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f0b010"/>
        <function-ref name="getdt" scoped="" ref="0x40f0bd58"/>
        <function-ref name="gett0" scoped="" ref="0x40f0bb00"/>
        <function-ref name="isRunning" scoped="" ref="0x40f0dd20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f0d370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f0b588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f0d5f0"/>
        <function-ref name="stop" scoped="" ref="0x40f0d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f09ad0" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f09ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f07650"/>
        <function-ref name="fired" scoped="" ref="0x40f08860"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f07010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f08d10"/>
        <function-ref name="getdt" scoped="" ref="0x40f07b00"/>
        <function-ref name="gett0" scoped="" ref="0x40f078a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40f08ab8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f08108"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f07330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f08388"/>
        <function-ref name="stop" scoped="" ref="0x40f08608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40a72e18" loc="24:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Bh1750fviArbitratedC.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40a72e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b77468"/>
        <function-ref name="readDone" scoped="" ref="0x40b776d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40b77b30" loc="26:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Bh1750fviArbitratedC.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40b77b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ba61e0"/>
        <function-ref name="readDone" scoped="" ref="0x40ba6448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40ba67c8" loc="27:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Bh1750fviArbitratedC.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ba67c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ba69b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ba6a90"/>
        <function-ref name="request" scoped="" ref="0x40ba6b70"/>
        <function-ref name="granted" scoped="" ref="0x40ba6c50"/>
        <function-ref name="isOwner" scoped="" ref="0x40ba6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ba4618" loc="92:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ba4618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ba4800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ba48e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ba3600" loc="96:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ba3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ba37e8"/>
        <function-ref name="configure" scoped="" ref="0x40ba38c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40ba4a20" loc="93:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ba4a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ba4bf8"/>
        <function-ref name="requested" scoped="" ref="0x40ba4cd8"/>
        <function-ref name="granted" scoped="" ref="0x40ba4db8"/>
        <function-ref name="isOwner" scoped="" ref="0x40ba4e98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ba3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ba5eb8" loc="91:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ba5eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ba40c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ba41a0"/>
        <function-ref name="request" scoped="" ref="0x40ba4280"/>
        <function-ref name="granted" scoped="" ref="0x40ba4360"/>
        <function-ref name="isOwner" scoped="" ref="0x40ba4440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ba3150" loc="94:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ba3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ba3328"/>
        <function-ref name="userId" scoped="" ref="0x40ba3408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f2deb8" loc="44:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f2deb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f2b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40f2b220" loc="45:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40f2b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f2b3f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f2b4d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f2b5b8"/>
        <function-ref name="dequeue" scoped="" ref="0x40f2b698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f29ac8" loc="55:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f29ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f29cb0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f29d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f28a40" loc="60:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f28a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f28c28"/>
        <function-ref name="configure" scoped="" ref="0x40f28d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40f28e68" loc="61:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f28e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f27050"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f27130"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f27210"/>
        <function-ref name="dequeue" scoped="" ref="0x40f272f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40f29ed0" loc="56:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f29ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f280c0"/>
        <function-ref name="requested" scoped="" ref="0x40f281a0"/>
        <function-ref name="granted" scoped="" ref="0x40f28280"/>
        <function-ref name="isOwner" scoped="" ref="0x40f28360"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f28440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f27430" loc="62:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f27430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f27608"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f276e8"/>
        <function-ref name="led1On" scoped="" ref="0x40f277c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f278a8"/>
        <function-ref name="led3Off" scoped="" ref="0x40f27988"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f27a68"/>
        <function-ref name="get" scoped="" ref="0x40f27b48"/>
        <function-ref name="led1Off" scoped="" ref="0x40f27c28"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40f27d08"/>
        <function-ref name="led3On" scoped="" ref="0x40f27de8"/>
        <function-ref name="led0On" scoped="" ref="0x40f27ec8"/>
        <function-ref name="led2Off" scoped="" ref="0x40f26010"/>
        <function-ref name="led2On" scoped="" ref="0x40f260f0"/>
        <function-ref name="set" scoped="" ref="0x40f26250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f29388" loc="54:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f29388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f29570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f29650"/>
        <function-ref name="request" scoped="" ref="0x40f29730"/>
        <function-ref name="granted" scoped="" ref="0x40f29810"/>
        <function-ref name="isOwner" scoped="" ref="0x40f298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f28580" loc="57:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f28580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f28758"/>
        <function-ref name="userId" scoped="" ref="0x40f28838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f263d0" loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f263d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f265a8"/>
        <function-ref name="runTask" scoped="" ref="0x40f26688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b9f010" loc="36:/usr/src/tinyos/tos/system/ReadClientP.nc">
      <component-ref qname="Bh1750fviArbitratedC.ReadClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b9f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b9f648"/>
        <function-ref name="readDone" scoped="" ref="0x40b9f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40b9fc68" loc="37:/usr/src/tinyos/tos/system/ReadClientP.nc">
      <component-ref qname="Bh1750fviArbitratedC.ReadClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40b9fc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc02c8"/>
        <function-ref name="readDone" scoped="" ref="0x40bc0520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c8db38" loc="37:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/PressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c8db38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a5c1e0"/>
        <function-ref name="readDone" scoped="" ref="0x40a5c438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40a5c7e0" loc="39:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/PressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40a5c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40a5ce08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f410f0" loc="36:/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f410f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f41718"/>
        <function-ref name="readDone" scoped="" ref="0x40f41970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40f41d18" loc="38:/usr/src/tinyos/tos/chips/ms5607/Ms5607PressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40f41d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40f40350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f3e590" loc="39:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f3e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f3ebb8"/>
        <function-ref name="readDone" scoped="" ref="0x40f3ee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40f3d1d8" loc="41:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40f3d1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40f3d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPressure" ref="0x40bafdd0" loc="40:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPressure" scoped="" ref="0x40bafdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bae448"/>
        <function-ref name="readDone" scoped="" ref="0x40bae6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemperature" ref="0x40bb2d78" loc="39:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemperature" scoped="" ref="0x40bb2d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40baf3c0"/>
        <function-ref name="readDone" scoped="" ref="0x40baf618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadCalibration" ref="0x40baeeb8" loc="41:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadCalibration" scoped="" ref="0x40baeeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd4500"/>
        <function-ref name="readDone" scoped="" ref="0x40bd4890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bd3010" loc="43:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bd3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bd31e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bd32c8"/>
        <function-ref name="request" scoped="" ref="0x40bd33a8"/>
        <function-ref name="granted" scoped="" ref="0x40bd3488"/>
        <function-ref name="isOwner" scoped="" ref="0x40bd3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40bd3860" loc="45:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40bd3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40bd3e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPressure" ref="0x40bd26e8" loc="38:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <component-ref qname="Ms5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPressure" scoped="" ref="0x40bd26e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd2d10"/>
        <function-ref name="readDone" scoped="" ref="0x40bce010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemperature" ref="0x40bce4d8" loc="39:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <component-ref qname="Ms5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemperature" scoped="" ref="0x40bce4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bceb00"/>
        <function-ref name="readDone" scoped="" ref="0x40bced58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadCalibration" ref="0x40bcd2a8" loc="42:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <component-ref qname="Ms5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadCalibration" scoped="" ref="0x40bcd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bcd8d0"/>
        <function-ref name="readDone" scoped="" ref="0x40bcdc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40bcc228" loc="43:/usr/src/tinyos/tos/chips/ms5607/Ms5607C.nc">
      <component-ref qname="Ms5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40bcc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40bcc850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalReadDone" ref="0x40bdf778" loc="104:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalReadDone" scoped="" ref="0x40bdf778"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bdf950"/>
        <function-ref name="runTask" scoped="" ref="0x40bdfa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPressure" ref="0x40bc9df8" loc="41:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPressure" scoped="" ref="0x40bc9df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc7448"/>
        <function-ref name="readDone" scoped="" ref="0x40bc76a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x40bf5320" loc="210:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x40bf5320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bf54f8"/>
        <function-ref name="runTask" scoped="" ref="0x40bf55d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusPowerManager" ref="0x40be73c8" loc="48:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40be73c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40be75a0"/>
        <function-ref name="requestPower" scoped="" ref="0x40be7680"/>
        <function-ref name="powerOff" scoped="" ref="0x40be7760"/>
        <function-ref name="configure" scoped="" ref="0x40be7840"/>
        <function-ref name="releasePower" scoped="" ref="0x40be7920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bc5468" loc="44:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bc5468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bc5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40be8bb8" loc="47:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40be8bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40be8d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40be8e70"/>
        <function-ref name="request" scoped="" ref="0x40be7010"/>
        <function-ref name="granted" scoped="" ref="0x40be70f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40be71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemperature" ref="0x40bc90c8" loc="40:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemperature" scoped="" ref="0x40bc90c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc96f0"/>
        <function-ref name="readDone" scoped="" ref="0x40bc9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadCalibration" ref="0x40bc7bb0" loc="42:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadCalibration" scoped="" ref="0x40bc7bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc61f0"/>
        <function-ref name="readDone" scoped="" ref="0x40bc6580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40bc6b20" loc="43:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40bc6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40bc51e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40bc2c00" loc="46:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40bc2c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bc1278"/>
        <function-ref name="writeDone" scoped="" ref="0x40be84f8"/>
        <function-ref name="write" scoped="" ref="0x40bc1898"/>
        <function-ref name="readDone" scoped="" ref="0x40bc1eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40bc58a8" loc="45:/usr/src/tinyos/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bc58a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bc23a8"/>
        <function-ref name="fired" scoped="" ref="0x40bc4648"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bc4d50"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bc4af8"/>
        <function-ref name="getdt" scoped="" ref="0x40bc2858"/>
        <function-ref name="gett0" scoped="" ref="0x40bc2600"/>
        <function-ref name="isRunning" scoped="" ref="0x40bc48a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40bc5ed0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bc2088"/>
        <function-ref name="startOneShot" scoped="" ref="0x40bc4170"/>
        <function-ref name="stop" scoped="" ref="0x40bc43f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40c01a90" loc="38:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <component-ref qname="HplMs5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40c01a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40c01c68"/>
        <function-ref name="requestPower" scoped="" ref="0x40c01d48"/>
        <function-ref name="powerOff" scoped="" ref="0x40c01e28"/>
        <function-ref name="configure" scoped="" ref="0x40c01f08"/>
        <function-ref name="releasePower" scoped="" ref="0x40c00010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c01340" loc="37:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <component-ref qname="HplMs5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c01340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c01518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c015f8"/>
        <function-ref name="request" scoped="" ref="0x40c016d8"/>
        <function-ref name="granted" scoped="" ref="0x40c017b8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c01898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40c06428" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <component-ref qname="HplMs5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40c06428"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c06a70"/>
        <function-ref name="writeDone" scoped="" ref="0x40c02ce8"/>
        <function-ref name="write" scoped="" ref="0x40c020a8"/>
        <function-ref name="readDone" scoped="" ref="0x40c026c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c008d8" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMs5607C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c008d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c00ab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c00b90"/>
        <function-ref name="request" scoped="" ref="0x40c00c70"/>
        <function-ref name="granted" scoped="" ref="0x40c00d50"/>
        <function-ref name="isOwner" scoped="" ref="0x40c00e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40bff030" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMs5607C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40bff030"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bff678"/>
        <function-ref name="writeDone" scoped="" ref="0x40bfe900"/>
        <function-ref name="write" scoped="" ref="0x40bffc98"/>
        <function-ref name="readDone" scoped="" ref="0x40bfe2e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c04010" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="Ms5607C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c04010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c25b00"/>
        <function-ref name="fired" scoped="" ref="0x40c04d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c254c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c25268"/>
        <function-ref name="getdt" scoped="" ref="0x40c24010"/>
        <function-ref name="gett0" scoped="" ref="0x40c25d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40c25010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c04638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c257e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c048b8"/>
        <function-ref name="stop" scoped="" ref="0x40c04b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40c223a8" loc="92:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40c223a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40c22590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c22670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c20328" loc="96:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c20328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c20510"/>
        <function-ref name="configure" scoped="" ref="0x40c205f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40c227b0" loc="93:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c227b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c22988"/>
        <function-ref name="requested" scoped="" ref="0x40c22a68"/>
        <function-ref name="granted" scoped="" ref="0x40c22b48"/>
        <function-ref name="isOwner" scoped="" ref="0x40c22c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c22d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bd0bc8" loc="91:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bd0bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bd0db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bd0e90"/>
        <function-ref name="request" scoped="" ref="0x40c22010"/>
        <function-ref name="granted" scoped="" ref="0x40c220f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c221d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40c22e48" loc="94:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c22e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c20050"/>
        <function-ref name="userId" scoped="" ref="0x40c20130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f57368" loc="44:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f57368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f57540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40f576a0" loc="45:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40f576a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f57878"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f57958"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f57a38"/>
        <function-ref name="dequeue" scoped="" ref="0x40f57b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f54010" loc="55:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f54010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f541f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f542d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f53010" loc="60:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f53010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f531f8"/>
        <function-ref name="configure" scoped="" ref="0x40f532d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40f53438" loc="61:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f53438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f53610"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f536f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f537d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f538b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40f54418" loc="56:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f54418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f545f0"/>
        <function-ref name="requested" scoped="" ref="0x40f546d0"/>
        <function-ref name="granted" scoped="" ref="0x40f547b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40f54890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f54970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f539f0" loc="62:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f539f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f53bc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f53ca8"/>
        <function-ref name="led1On" scoped="" ref="0x40f53d88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f53e68"/>
        <function-ref name="led3Off" scoped="" ref="0x40f52010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f520f0"/>
        <function-ref name="get" scoped="" ref="0x40f521d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40f522b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40f52390"/>
        <function-ref name="led3On" scoped="" ref="0x40f52470"/>
        <function-ref name="led0On" scoped="" ref="0x40f52550"/>
        <function-ref name="led2Off" scoped="" ref="0x40f52630"/>
        <function-ref name="led2On" scoped="" ref="0x40f52710"/>
        <function-ref name="set" scoped="" ref="0x40f52870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f56810" loc="54:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f56810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f569f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f56ad8"/>
        <function-ref name="request" scoped="" ref="0x40f56bb8"/>
        <function-ref name="granted" scoped="" ref="0x40f56c98"/>
        <function-ref name="isOwner" scoped="" ref="0x40f56d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f54ab0" loc="57:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f54ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f54c88"/>
        <function-ref name="userId" scoped="" ref="0x40f54d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f529f0" loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f529f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f52bc8"/>
        <function-ref name="runTask" scoped="" ref="0x40f52ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c1fb68" loc="36:/usr/src/tinyos/tos/system/ReadClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadTempClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c1fb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1e1e0"/>
        <function-ref name="readDone" scoped="" ref="0x40c1e448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40c1e800" loc="37:/usr/src/tinyos/tos/system/ReadClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadTempClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40c1e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1ee28"/>
        <function-ref name="readDone" scoped="" ref="0x40c1d098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c1c668" loc="36:/usr/src/tinyos/tos/system/ReadClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadPresClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c1c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1cca0"/>
        <function-ref name="readDone" scoped="" ref="0x40c1cf08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40c1a2d8" loc="37:/usr/src/tinyos/tos/system/ReadClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadPresClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40c1a2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c1a900"/>
        <function-ref name="readDone" scoped="" ref="0x40c1ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRef" ref="0x40c39dc8" loc="36:/usr/src/tinyos/tos/chips/ms5607/ReadRefClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadCalibClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRef" scoped="" ref="0x40c39dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c18448"/>
        <function-ref name="readDone" scoped="" ref="0x40c187e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40c18cb0" loc="37:/usr/src/tinyos/tos/chips/ms5607/ReadRefClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadCalibClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40c18cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c382e8"/>
        <function-ref name="readDone" scoped="" ref="0x40c38678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f63298" loc="25:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f63298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f638c0"/>
        <function-ref name="readDone" scoped="" ref="0x40f63b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40f63ed0" loc="27:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40f63ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f62558"/>
        <function-ref name="readDone" scoped="" ref="0x40f627b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40f62a88" loc="28:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f62a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f62c60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f62d40"/>
        <function-ref name="request" scoped="" ref="0x40f62e20"/>
        <function-ref name="granted" scoped="" ref="0x40f62f00"/>
        <function-ref name="isOwner" scoped="" ref="0x40f61010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f3c2e8" loc="40:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f3c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f3c910"/>
        <function-ref name="readDone" scoped="" ref="0x40f3cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40f3b170" loc="42:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40f3b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40f3b798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40fa7868" loc="27:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40fa7868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa7e90"/>
        <function-ref name="readDone" scoped="" ref="0x40fa5240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRef" ref="0x40fa8918" loc="25:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRef" scoped="" ref="0x40fa8918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa7010"/>
        <function-ref name="readDone" scoped="" ref="0x40fa73a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40fa5628" loc="28:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fa5628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fa5800"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fa58e0"/>
        <function-ref name="request" scoped="" ref="0x40fa59c0"/>
        <function-ref name="granted" scoped="" ref="0x40fa5aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x40fa5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f3a260" loc="39:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f3a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f3a888"/>
        <function-ref name="readDone" scoped="" ref="0x40f3aae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40f3ae88" loc="41:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40f3ae88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40f394d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f9e0a0" loc="25:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f9e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f9e6c8"/>
        <function-ref name="readDone" scoped="" ref="0x40f9e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40f9ecd8" loc="27:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40f9ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f9d350"/>
        <function-ref name="readDone" scoped="" ref="0x40f9d5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40f9d880" loc="28:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f9d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f9da58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f9db38"/>
        <function-ref name="request" scoped="" ref="0x40f9dc18"/>
        <function-ref name="granted" scoped="" ref="0x40f9dcf8"/>
        <function-ref name="isOwner" scoped="" ref="0x40f9ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadRawPress" ref="0x40f36878" loc="38:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionPressP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRawPress" scoped="" ref="0x40f36878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f36ea0"/>
        <function-ref name="readDone" scoped="" ref="0x40f35110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f38010" loc="36:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionPressP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f38010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f38638"/>
        <function-ref name="readDone" scoped="" ref="0x40f38890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDt" ref="0x40f38c38" loc="37:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionPressP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDt" scoped="" ref="0x40f38c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="long" size="I:4" alignment="I:1">
            <typename><typedef-ref name="int32_t" ref="0x401ea500"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f36278"/>
        <function-ref name="readDone" scoped="" ref="0x40f364d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x40f35530" loc="39:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionPressP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x40f35530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f35b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadCalib" ref="0x40f333b8" loc="39:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadCalib" scoped="" ref="0x40f333b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f339e0"/>
        <function-ref name="readDone" scoped="" ref="0x40f33d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f32220" loc="40:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f32220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="long" size="I:4" alignment="I:1">
            <typename><typedef-ref name="int32_t" ref="0x401ea500"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f32848"/>
        <function-ref name="readDone" scoped="" ref="0x40f32aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadRawTemp" ref="0x40f34780" loc="38:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRawTemp" scoped="" ref="0x40f34780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f34da8"/>
        <function-ref name="readDone" scoped="" ref="0x40f33010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x40f32ec0" loc="41:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x40f32ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f66558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c8cda8" loc="36:/usr/src/tinyos/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c8cda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x40039e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca13e0"/>
        <function-ref name="readDone" scoped="" ref="0x40ca1638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40ca19e0" loc="38:/usr/src/tinyos/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40ca19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40ca0048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f90c90" loc="39:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f90c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f8e2c8"/>
        <function-ref name="readDone" scoped="" ref="0x40f8e520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40f8e8c8" loc="41:/usr/src/tinyos/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40f8e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40f8eef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40fb9b60" loc="25:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40fb9b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fb81e0"/>
        <function-ref name="readDone" scoped="" ref="0x40fb8438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40fb87f0" loc="27:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40fb87f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fb8e18"/>
        <function-ref name="readDone" scoped="" ref="0x40fb7088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40fb7360" loc="28:/usr/src/tinyos/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fb7360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fb7538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fb7618"/>
        <function-ref name="request" scoped="" ref="0x40fb76f8"/>
        <function-ref name="granted" scoped="" ref="0x40fb77d8"/>
        <function-ref name="isOwner" scoped="" ref="0x40fb78b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f8d9e0" loc="40:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f8d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc4048"/>
        <function-ref name="readDone" scoped="" ref="0x40fc43d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40fc4890" loc="42:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40fc4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40fc4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40fb0868" loc="27:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40fb0868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fb0e90"/>
        <function-ref name="readDone" scoped="" ref="0x40faf240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRef" ref="0x40fb1918" loc="25:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRef" scoped="" ref="0x40fb1918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fb0010"/>
        <function-ref name="readDone" scoped="" ref="0x40fb03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40faf628" loc="28:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40faf628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40faf800"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40faf8e0"/>
        <function-ref name="request" scoped="" ref="0x40faf9c0"/>
        <function-ref name="granted" scoped="" ref="0x40fafaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x40fafb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadCalib" ref="0x40fc1610" loc="39:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadCalib" scoped="" ref="0x40fc1610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc1c38"/>
        <function-ref name="readDone" scoped="" ref="0x40fc0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40fc04a8" loc="40:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40fc04a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="long" size="I:4" alignment="I:1">
            <typename><typedef-ref name="int32_t" ref="0x401ea500"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc0ad0"/>
        <function-ref name="readDone" scoped="" ref="0x40fc0d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadRawTemp" ref="0x40fc39a0" loc="38:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRawTemp" scoped="" ref="0x40fc39a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fc1010"/>
        <function-ref name="readDone" scoped="" ref="0x40fc1268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x40fbf188" loc="41:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x40fbf188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fbf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40fbe3c8" loc="36:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionTempP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40fbe3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x40039e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fbe9f0"/>
        <function-ref name="readDone" scoped="" ref="0x40fbec48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDt" ref="0x40fbd010" loc="37:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionTempP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDt" scoped="" ref="0x40fbd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="long" size="I:4" alignment="I:1">
            <typename><typedef-ref name="int32_t" ref="0x401ea500"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fbd638"/>
        <function-ref name="readDone" scoped="" ref="0x40fbd890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x40fbdcb0" loc="38:/usr/src/tinyos/tos/chips/ms5607/Ms5607ConversionTempP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x40fbdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fbb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40ca0ca0" loc="40:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40ca0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9f2e8"/>
        <function-ref name="readDone" scoped="" ref="0x40c9f678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40c9fb30" loc="42:/usr/src/tinyos/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40c9fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40c9e1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40fd92d8" loc="27:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40fd92d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fd9900"/>
        <function-ref name="readDone" scoped="" ref="0x40fd9c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRef" ref="0x40fda440" loc="25:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRef" scoped="" ref="0x40fda440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40422b08"/>
            <typename><typedef-ref name="calibration_t" ref="0x40422cd0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fdaa68"/>
        <function-ref name="readDone" scoped="" ref="0x40fdadf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40fd80a0" loc="28:/usr/src/tinyos/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fd80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fd8278"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fd8358"/>
        <function-ref name="request" scoped="" ref="0x40fd8438"/>
        <function-ref name="granted" scoped="" ref="0x40fd8518"/>
        <function-ref name="isOwner" scoped="" ref="0x40fd85f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c9d5a8" loc="37:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/TemperatureC.nc">
      <component-ref qname="UcminiSensorC.TemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c9d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9dbd0"/>
        <function-ref name="readDone" scoped="" ref="0x40c9de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40fd2520" loc="39:/usr/src/tinyos/tos/chips/sht21/Sht21RawTemperatureC.nc">
      <component-ref qname="UcminiSensorC.TemperatureC.Sht21RawTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40fd2520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fd2b48"/>
        <function-ref name="readDone" scoped="" ref="0x40fd2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadHumidity" ref="0x40cbe2f0" loc="39:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <component-ref qname="Sht21ArbitratedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadHumidity" scoped="" ref="0x40cbe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cbe918"/>
        <function-ref name="readDone" scoped="" ref="0x40cbeb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemperature" ref="0x40c93290" loc="38:/usr/src/tinyos/tos/chips/sht21/Sht21ArbitratedC.nc">
      <component-ref qname="Sht21ArbitratedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemperature" scoped="" ref="0x40c93290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c938b8"/>
        <function-ref name="readDone" scoped="" ref="0x40c93b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x40cba1a0" loc="37:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <component-ref qname="Sht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x40cba1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cba7c8"/>
        <function-ref name="readDone" scoped="" ref="0x40cbaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x40cbd450" loc="36:/usr/src/tinyos/tos/chips/sht21/Sht21C.nc">
      <component-ref qname="Sht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x40cbd450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cbda78"/>
        <function-ref name="readDone" scoped="" ref="0x40cbdcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalReadDone" ref="0x40cc9d60" loc="153:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalReadDone" scoped="" ref="0x40cc9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cc8010"/>
        <function-ref name="runTask" scoped="" ref="0x40cc80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x40cc22a0" loc="192:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x40cc22a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cc2478"/>
        <function-ref name="runTask" scoped="" ref="0x40cc2558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusPowerManager" ref="0x40caf7f0" loc="43:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40caf7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40caf9c8"/>
        <function-ref name="requestPower" scoped="" ref="0x40cafaa8"/>
        <function-ref name="powerOff" scoped="" ref="0x40cafb88"/>
        <function-ref name="configure" scoped="" ref="0x40cafc68"/>
        <function-ref name="releasePower" scoped="" ref="0x40cafd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x40cb5010" loc="38:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x40cb5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb5638"/>
        <function-ref name="readDone" scoped="" ref="0x40cb5890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cafed8" loc="44:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cafed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cae0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40caf0a0" loc="42:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40caf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40caf278"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40caf358"/>
        <function-ref name="request" scoped="" ref="0x40caf438"/>
        <function-ref name="granted" scoped="" ref="0x40caf518"/>
        <function-ref name="isOwner" scoped="" ref="0x40caf5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x40cb82e0" loc="37:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x40cb82e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb8908"/>
        <function-ref name="readDone" scoped="" ref="0x40cb8b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40cb5d00" loc="40:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40cb5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb4370"/>
        <function-ref name="writeDone" scoped="" ref="0x40cb3630"/>
        <function-ref name="write" scoped="" ref="0x40cb4990"/>
        <function-ref name="readDone" scoped="" ref="0x40cb3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40cb3d10" loc="41:/usr/src/tinyos/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40cb3d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40cb08a8"/>
        <function-ref name="fired" scoped="" ref="0x40cb1aa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40cb0268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40cb0010"/>
        <function-ref name="getdt" scoped="" ref="0x40cb0d58"/>
        <function-ref name="gett0" scoped="" ref="0x40cb0b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40cb1d00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40cb1350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40cb0588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40cb15d0"/>
        <function-ref name="stop" scoped="" ref="0x40cb1850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ce4330" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="Sht21C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ce4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40453bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40453d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ce3e38"/>
        <function-ref name="fired" scoped="" ref="0x40ce30f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ce37f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ce35a0"/>
        <function-ref name="getdt" scoped="" ref="0x40ce2310"/>
        <function-ref name="gett0" scoped="" ref="0x40ce20b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40ce3348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ce4958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ce3b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ce4bd8"/>
        <function-ref name="stop" scoped="" ref="0x40ce4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40cdcea8" loc="38:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40cdcea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40cdb0c0"/>
        <function-ref name="requestPower" scoped="" ref="0x40cdb1a0"/>
        <function-ref name="powerOff" scoped="" ref="0x40cdb280"/>
        <function-ref name="configure" scoped="" ref="0x40cdb360"/>
        <function-ref name="releasePower" scoped="" ref="0x40cdb440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cdc758" loc="37:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cdc758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cdc930"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cdca10"/>
        <function-ref name="request" scoped="" ref="0x40cdcaf0"/>
        <function-ref name="granted" scoped="" ref="0x40cdcbd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40cdccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40ce17f8" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40ce17f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ce1e40"/>
        <function-ref name="writeDone" scoped="" ref="0x40cdc128"/>
        <function-ref name="write" scoped="" ref="0x40cdd498"/>
        <function-ref name="readDone" scoped="" ref="0x40cddab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cdbd08" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplSht21C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cdbd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cdbee0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cda010"/>
        <function-ref name="request" scoped="" ref="0x40cda0f0"/>
        <function-ref name="granted" scoped="" ref="0x40cda1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40cda2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40cda4a0" loc="45:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplSht21C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40cda4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40a6dda8"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40a6df10"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cdaae8"/>
        <function-ref name="writeDone" scoped="" ref="0x40cd9d68"/>
        <function-ref name="write" scoped="" ref="0x40cd9128"/>
        <function-ref name="readDone" scoped="" ref="0x40cd9748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40cdf800" loc="24:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedTemp"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40cdf800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cdfe38"/>
        <function-ref name="readDone" scoped="" ref="0x40cd60b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40cd6518" loc="26:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedTemp"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40cd6518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cd6b50"/>
        <function-ref name="readDone" scoped="" ref="0x40cd6db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40cd5160" loc="27:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedTemp"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cd5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cd5348"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cd5428"/>
        <function-ref name="request" scoped="" ref="0x40cd5508"/>
        <function-ref name="granted" scoped="" ref="0x40cd55e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40cd56c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40cff010" loc="92:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40cff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40cff1f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40cff2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40cfe010" loc="96:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40cfe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40cfe1f8"/>
        <function-ref name="configure" scoped="" ref="0x40cfe2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40cff418" loc="93:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cff418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cff5f0"/>
        <function-ref name="requested" scoped="" ref="0x40cff6d0"/>
        <function-ref name="granted" scoped="" ref="0x40cff7b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40cff890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40cff970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d01838" loc="91:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d01838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d01a20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d01b00"/>
        <function-ref name="request" scoped="" ref="0x40d01be0"/>
        <function-ref name="granted" scoped="" ref="0x40d01cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d01da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40cffab0" loc="94:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40cffab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40cffc88"/>
        <function-ref name="userId" scoped="" ref="0x40cffd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ffd668" loc="44:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ffd668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ffd840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40ffd9a0" loc="45:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40ffd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ffdb78"/>
        <function-ref name="isEmpty" scoped="" ref="0x40ffdc58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40ffdd38"/>
        <function-ref name="dequeue" scoped="" ref="0x40ffde18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ffa3a8" loc="55:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ffa3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ffa590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ffa670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ff9338" loc="60:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ff9338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ff9520"/>
        <function-ref name="configure" scoped="" ref="0x40ff9600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40ff9760" loc="61:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40ff9760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ff9938"/>
        <function-ref name="isEmpty" scoped="" ref="0x40ff9a18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40ff9af8"/>
        <function-ref name="dequeue" scoped="" ref="0x40ff9bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40ffa7b0" loc="56:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ffa7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ffa988"/>
        <function-ref name="requested" scoped="" ref="0x40ffaa68"/>
        <function-ref name="granted" scoped="" ref="0x40ffab48"/>
        <function-ref name="isOwner" scoped="" ref="0x40ffac28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ffad08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ff9d18" loc="62:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ff9d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ff9ef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ff8010"/>
        <function-ref name="led1On" scoped="" ref="0x40ff80f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ff81d0"/>
        <function-ref name="led3Off" scoped="" ref="0x40ff82b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ff8390"/>
        <function-ref name="get" scoped="" ref="0x40ff8470"/>
        <function-ref name="led1Off" scoped="" ref="0x40ff8550"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40ff8630"/>
        <function-ref name="led3On" scoped="" ref="0x40ff8710"/>
        <function-ref name="led0On" scoped="" ref="0x40ff87f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40ff88d0"/>
        <function-ref name="led2On" scoped="" ref="0x40ff89b0"/>
        <function-ref name="set" scoped="" ref="0x40ff8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ffcbc0" loc="54:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ffcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ffcda8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ffce88"/>
        <function-ref name="request" scoped="" ref="0x40ffa010"/>
        <function-ref name="granted" scoped="" ref="0x40ffa0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ffa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ffae48" loc="57:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ffae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ff9050"/>
        <function-ref name="userId" scoped="" ref="0x40ff9130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40ff8c90" loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40ff8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ff8e68"/>
        <function-ref name="runTask" scoped="" ref="0x40ff7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40cfd480" loc="36:/usr/src/tinyos/tos/system/ReadClientP.nc">
      <component-ref qname="Sht21ArbitratedC.TempClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40cfd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cfdab8"/>
        <function-ref name="readDone" scoped="" ref="0x40cfdd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40cfc110" loc="37:/usr/src/tinyos/tos/system/ReadClientP.nc">
      <component-ref qname="Sht21ArbitratedC.TempClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40cfc110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cfc738"/>
        <function-ref name="readDone" scoped="" ref="0x40cfc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40cfa468" loc="24:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedHumi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40cfa468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cfaaa0"/>
        <function-ref name="readDone" scoped="" ref="0x40cfad08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40cf8188" loc="26:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedHumi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40cf8188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cf87c0"/>
        <function-ref name="readDone" scoped="" ref="0x40cf8a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40cf8da8" loc="27:/usr/src/tinyos/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedHumi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cf8da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cf7010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cf70f0"/>
        <function-ref name="request" scoped="" ref="0x40cf71d0"/>
        <function-ref name="granted" scoped="" ref="0x40cf72b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40cf7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40cf6c40" loc="92:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40cf6c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40cf6e28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40cf6f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40cf5bb8" loc="96:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40cf5bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40cf5da0"/>
        <function-ref name="configure" scoped="" ref="0x40cf5e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40cf5070" loc="93:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40cf5070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cf5248"/>
        <function-ref name="requested" scoped="" ref="0x40cf5328"/>
        <function-ref name="granted" scoped="" ref="0x40cf5408"/>
        <function-ref name="isOwner" scoped="" ref="0x40cf54e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40cf55c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cf6500" loc="91:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cf6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cf66e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cf67c8"/>
        <function-ref name="request" scoped="" ref="0x40cf68a8"/>
        <function-ref name="granted" scoped="" ref="0x40cf6988"/>
        <function-ref name="isOwner" scoped="" ref="0x40cf6a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40cf5708" loc="94:/usr/src/tinyos/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40cf5708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40cf58e0"/>
        <function-ref name="userId" scoped="" ref="0x40cf59c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41013cf0" loc="44:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41013cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41013ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41011050" loc="45:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41011050"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41011228"/>
        <function-ref name="isEmpty" scoped="" ref="0x41011308"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410113e8"/>
        <function-ref name="dequeue" scoped="" ref="0x410114c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410108f8" loc="55:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410108f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41010ae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41010bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4100e8b0" loc="60:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4100e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4100ea98"/>
        <function-ref name="configure" scoped="" ref="0x4100eb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4100ecd8" loc="61:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4100ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4100eeb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x4100d010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4100d0f0"/>
        <function-ref name="dequeue" scoped="" ref="0x4100d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41010d00" loc="56:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41010d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41010ed8"/>
        <function-ref name="requested" scoped="" ref="0x4100e010"/>
        <function-ref name="granted" scoped="" ref="0x4100e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4100e1d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4100e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4100d310" loc="62:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4100d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4100d4e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4100d5c8"/>
        <function-ref name="led1On" scoped="" ref="0x4100d6a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4100d788"/>
        <function-ref name="led3Off" scoped="" ref="0x4100d868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4100d948"/>
        <function-ref name="get" scoped="" ref="0x4100da28"/>
        <function-ref name="led1Off" scoped="" ref="0x4100db08"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4100dbe8"/>
        <function-ref name="led3On" scoped="" ref="0x4100dcc8"/>
        <function-ref name="led0On" scoped="" ref="0x4100dda8"/>
        <function-ref name="led2Off" scoped="" ref="0x4100de88"/>
        <function-ref name="led2On" scoped="" ref="0x4100c010"/>
        <function-ref name="set" scoped="" ref="0x4100c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410101b8" loc="54:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410101b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410103a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41010480"/>
        <function-ref name="request" scoped="" ref="0x41010560"/>
        <function-ref name="granted" scoped="" ref="0x41010640"/>
        <function-ref name="isOwner" scoped="" ref="0x41010720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4100e3f0" loc="57:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4100e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4100e5c8"/>
        <function-ref name="userId" scoped="" ref="0x4100e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4100c2f0" loc="75:/usr/src/tinyos/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4100c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4100c4c8"/>
        <function-ref name="runTask" scoped="" ref="0x4100c5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40cf20a8" loc="36:/usr/src/tinyos/tos/system/ReadClientP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40cf20a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cf26e0"/>
        <function-ref name="readDone" scoped="" ref="0x40cf2948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40cf2d00" loc="37:/usr/src/tinyos/tos/system/ReadClientP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40cf2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cf1350"/>
        <function-ref name="readDone" scoped="" ref="0x40cf15a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c995f8" loc="37:/usr/src/tinyos/tos/platforms/ucmini/chips/sht21/HumidityC.nc">
      <component-ref qname="UcminiSensorC.HumidityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c995f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c99c20"/>
        <function-ref name="readDone" scoped="" ref="0x40c99e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4102b010" loc="38:/usr/src/tinyos/tos/chips/sht21/Sht21RawHumidityC.nc">
      <component-ref qname="UcminiSensorC.HumidityC.Sht21RawHumidityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4102b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4102b638"/>
        <function-ref name="readDone" scoped="" ref="0x4102b890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40ceef08" loc="39:/usr/src/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40ceef08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40d120f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40d12358" loc="40:/usr/src/tinyos/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40d12358"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d12530"/>
        <function-ref name="stopDone" scoped="" ref="0x40d12610"/>
        <function-ref name="start" scoped="" ref="0x40d126f0"/>
        <function-ref name="stop" scoped="" ref="0x40d127d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d13920" loc="49:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.MeasSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d13920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d13af8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d13bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d13cb8"/>
        <function-ref name="cancel" scoped="" ref="0x40d13d98"/>
        <function-ref name="sendDone" scoped="" ref="0x40d13e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d57010" loc="50:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.MeasSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d57010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d571e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d572c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d573a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d57488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d57568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d576a8" loc="51:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.MeasSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d576a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d57880"/>
        <function-ref name="source" scoped="" ref="0x40d57960"/>
        <function-ref name="address" scoped="" ref="0x40d57a40"/>
        <function-ref name="destination" scoped="" ref="0x40d57b20"/>
        <function-ref name="setSource" scoped="" ref="0x40d57c00"/>
        <function-ref name="setDestination" scoped="" ref="0x40d57ce0"/>
        <function-ref name="type" scoped="" ref="0x40d57dc0"/>
        <function-ref name="setType" scoped="" ref="0x40d57ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d56010"/>
        <function-ref name="setGroup" scoped="" ref="0x40d560f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40d561d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d56330" loc="52:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.MeasSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d56330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d56508"/>
        <function-ref name="noAck" scoped="" ref="0x40d565e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d566c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41026420" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.MeasSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41026420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410265f8"/>
        <function-ref name="getPayload" scoped="" ref="0x410266d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410267b8"/>
        <function-ref name="cancel" scoped="" ref="0x41026898"/>
        <function-ref name="sendDone" scoped="" ref="0x41026978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41026ae8" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.MeasSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41026ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41026cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x41026da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41026e80"/>
        <function-ref name="cancel" scoped="" ref="0x41025010"/>
        <function-ref name="sendDone" scoped="" ref="0x410250f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41025230" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.MeasSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41025230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41025408"/>
        <function-ref name="source" scoped="" ref="0x410254e8"/>
        <function-ref name="address" scoped="" ref="0x410255c8"/>
        <function-ref name="destination" scoped="" ref="0x410256a8"/>
        <function-ref name="setSource" scoped="" ref="0x41025788"/>
        <function-ref name="setDestination" scoped="" ref="0x41025868"/>
        <function-ref name="type" scoped="" ref="0x41025948"/>
        <function-ref name="setType" scoped="" ref="0x41025a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41025b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41025be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41025cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d2b010" loc="44:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d2b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d2b1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d2b2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d2b3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40d2b488"/>
        <function-ref name="sendDone" scoped="" ref="0x40d2b568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40d5d780" loc="48:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d5d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d5d968"/>
        <function-ref name="getPayload" scoped="" ref="0x40d5da48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d5db28"/>
        <function-ref name="cancel" scoped="" ref="0x40d5dc08"/>
        <function-ref name="sendDone" scoped="" ref="0x40d5dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d5d010" loc="46:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d5d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d5d1f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d5d2d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d5d3b8"/>
        <function-ref name="cancel" scoped="" ref="0x40d5d498"/>
        <function-ref name="sendDone" scoped="" ref="0x40d5d578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40d5ca50" loc="50:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d5ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d5cc28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d5cd08"/>
        <function-ref name="getPayload" scoped="" ref="0x40d5cde8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d5cec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d5b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40d5b190" loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40d5b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d5b368"/>
        <function-ref name="runTask" scoped="" ref="0x40d5b448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40d5b5c8" loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40d5b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d5b7a0"/>
        <function-ref name="runTask" scoped="" ref="0x40d5b880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40d5de28" loc="49:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d5de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d5c050"/>
        <function-ref name="source" scoped="" ref="0x40d5c130"/>
        <function-ref name="address" scoped="" ref="0x40d5c210"/>
        <function-ref name="destination" scoped="" ref="0x40d5c2f0"/>
        <function-ref name="setSource" scoped="" ref="0x40d5c3d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40d5c4b0"/>
        <function-ref name="type" scoped="" ref="0x40d5c590"/>
        <function-ref name="setType" scoped="" ref="0x40d5c670"/>
        <function-ref name="isForMe" scoped="" ref="0x40d5c750"/>
        <function-ref name="setGroup" scoped="" ref="0x40d5c830"/>
        <function-ref name="localGroup" scoped="" ref="0x40d5c910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d55920" loc="49:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.CalibSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d55920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d55af8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d55bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d55cb8"/>
        <function-ref name="cancel" scoped="" ref="0x40d55d98"/>
        <function-ref name="sendDone" scoped="" ref="0x40d55e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d54010" loc="50:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.CalibSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d54010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d541e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d542c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d543a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d54488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d54568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d546a8" loc="51:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.CalibSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d546a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d54880"/>
        <function-ref name="source" scoped="" ref="0x40d54960"/>
        <function-ref name="address" scoped="" ref="0x40d54a40"/>
        <function-ref name="destination" scoped="" ref="0x40d54b20"/>
        <function-ref name="setSource" scoped="" ref="0x40d54c00"/>
        <function-ref name="setDestination" scoped="" ref="0x40d54ce0"/>
        <function-ref name="type" scoped="" ref="0x40d54dc0"/>
        <function-ref name="setType" scoped="" ref="0x40d54ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d52010"/>
        <function-ref name="setGroup" scoped="" ref="0x40d520f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40d521d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d52330" loc="52:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.CalibSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d52330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d52508"/>
        <function-ref name="noAck" scoped="" ref="0x40d525e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d526c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x410713b0" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.CalibSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410713b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41071588"/>
        <function-ref name="getPayload" scoped="" ref="0x41071668"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41071748"/>
        <function-ref name="cancel" scoped="" ref="0x41071828"/>
        <function-ref name="sendDone" scoped="" ref="0x41071908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41071a78" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.CalibSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41071a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41071c50"/>
        <function-ref name="getPayload" scoped="" ref="0x41071d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41071e10"/>
        <function-ref name="cancel" scoped="" ref="0x41071ef0"/>
        <function-ref name="sendDone" scoped="" ref="0x41070010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41070150" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.CalibSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41070150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41070328"/>
        <function-ref name="source" scoped="" ref="0x41070408"/>
        <function-ref name="address" scoped="" ref="0x410704e8"/>
        <function-ref name="destination" scoped="" ref="0x410705c8"/>
        <function-ref name="setSource" scoped="" ref="0x410706a8"/>
        <function-ref name="setDestination" scoped="" ref="0x41070788"/>
        <function-ref name="type" scoped="" ref="0x41070868"/>
        <function-ref name="setType" scoped="" ref="0x41070948"/>
        <function-ref name="isForMe" scoped="" ref="0x41070a28"/>
        <function-ref name="setGroup" scoped="" ref="0x41070b08"/>
        <function-ref name="localGroup" scoped="" ref="0x41070be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d4f010" loc="46:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="UcminiSensorC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d4f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4f1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4f2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d4f3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4f488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d50c60" loc="45:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="UcminiSensorC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d50c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d50e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d4f6a8" loc="47:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="UcminiSensorC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d4f6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d4f880"/>
        <function-ref name="source" scoped="" ref="0x40d4f960"/>
        <function-ref name="address" scoped="" ref="0x40d4fa40"/>
        <function-ref name="destination" scoped="" ref="0x40d4fb20"/>
        <function-ref name="setSource" scoped="" ref="0x40d4fc00"/>
        <function-ref name="setDestination" scoped="" ref="0x40d4fce0"/>
        <function-ref name="type" scoped="" ref="0x40d4fdc0"/>
        <function-ref name="setType" scoped="" ref="0x40d4fea0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d4c010"/>
        <function-ref name="setGroup" scoped="" ref="0x40d4c0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40d4c1d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="53:/usr/src/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40476aa0" loc="53:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40476aa0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40480210" loc="136:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40483090" loc="83:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404821e8" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40483e88" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40482088" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404839e0" loc="98:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40480b88" loc="151:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40480658" loc="144:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40483520" loc="92:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40484168" loc="64:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40484010" loc="64:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40482bd0" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40482888" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40482a70" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40484800" loc="73:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404846a8" loc="73:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40484cd0" loc="78:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/usr/src/tinyos/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40471e98" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4045ccf0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40471938" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4045ccf0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40471b50" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40471d30" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40479a88" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40479728" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40479908" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404791c8" loc="123:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4046eb80" loc="96:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4046ea28" loc="96:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40478898" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40478540" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40478738" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/usr/src/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40427818" loc="60:/usr/src/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/usr/src/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/usr/src/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404428d8" loc="65:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40442780" loc="65:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4047d2e0" loc="78:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4047d188" loc="78:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4047b370" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4047b010" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4047b1f0" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4047c9a8" loc="106:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4047c010" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4047dc00" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4047dde0" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/usr/src/tinyos/tos/interfaces/Read.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4042d328" loc="49:/usr/src/tinyos/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4042d328"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4042d7d8" loc="55:/usr/src/tinyos/tos/interfaces/Read.nc">
        <documentation loc="50:/usr/src/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4042c010" loc="63:/usr/src/tinyos/tos/interfaces/Read.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4042d328"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4042dc58" loc="63:/usr/src/tinyos/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4042de28" loc="63:/usr/src/tinyos/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4042d328"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/usr/src/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40443dd0" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
              <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40443888" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40443a68" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40443c48" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
      <documentation loc="33:/usr/src/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40412438" loc="63:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="60:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40412880" loc="69:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="65:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40412d00" loc="74:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="71:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40411580" loc="85:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="81:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x40419b40" loc="113:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="110:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40419298" loc="102:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="98:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404184b8" loc="134:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="122:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40411138" loc="79:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="76:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40418010" loc="119:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="115:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x40419718" loc="108:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="105:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40412010" loc="58:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="55:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40411e28" loc="96:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="93:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40411a00" loc="91:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="88:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40418c30" loc="149:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="137:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40418ad8" loc="149:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadRef" loc="50:/usr/src/tinyos/tos/interfaces/ReadRef.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/ReadRef.nc">
        <short>&#10; The ReadRef interface is intended for split-phase low-rate or&#10; high-latency reading of large values.</short>
        <long>&#10; The ReadRef interface is intended for split-phase low-rate or&#10; high-latency reading of large values. The type of the value is&#10; given as a template argument. When a value is too large to be&#10; comfortably passed on the stack, the caller should allocate space&#10; for the value and pass the pointer to read(). When the readDone()&#10; comes back, the space will be filled with the new value.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4042f2e0" loc="50:/usr/src/tinyos/tos/interfaces/ReadRef.nc">
          <interfacedef-ref qname="ReadRef"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4042f2e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4042f910" loc="58:/usr/src/tinyos/tos/interfaces/ReadRef.nc">
        <documentation loc="51:/usr/src/tinyos/tos/interfaces/ReadRef.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @param 'val_t* ONE val' a pointer to space that will be filled by the value&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadRef"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4042f2e0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4042f7b8" loc="58:/usr/src/tinyos/tos/interfaces/ReadRef.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4042f2e0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4042e418" loc="67:/usr/src/tinyos/tos/interfaces/ReadRef.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/ReadRef.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read(). The returned pointer will&#10; be the same as the original pointer passed to read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param 'val_t* ONE val' a pointer to the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadRef"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4042f2e0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4042e0c8" loc="67:/usr/src/tinyos/tos/interfaces/ReadRef.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4042e2b8" loc="67:/usr/src/tinyos/tos/interfaces/ReadRef.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4042f2e0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DiagMsg" loc="43:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <short>&#10; The DiagMsg interface allows messages to be sent back to the base station&#10; containing several values and their type information, like in &#10; &#60;code>printf(...)&#60;/code>.</short>
        <long>&#10; The DiagMsg interface allows messages to be sent back to the base station&#10; containing several values and their type information, like in &#10; &#60;code>printf(...)&#60;/code>. The base station must be connected to a PC using &#10; a serial cable. On the PC a Java application (net.tinyos.util.DiagMsg) &#10; decodes the message and displays its content using the correct type &#10; information. See the implementation for the format of the message.&#10;</long>
      </documentation>
      <function command="" provided="0" name="int32s" ref="0x40440bf8" loc="81:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int32_t" ref="0x401ea500"/></typename>
                <type-int cname="long" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x404408b8" loc="81:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int32_t" ref="0x401ea500"/></typename>
                <type-int cname="long" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40440a98" loc="81:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="str" ref="0x40444010" loc="92:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="89:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; This is a shorthand method for &#60;code>chrs&#60;/code>&#10;</short>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40446e20" loc="92:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="send" ref="0x404443f8" loc="97:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="94:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Initiates the sending of the recorded message.</short>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="int16" ref="0x40434698" loc="58:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x40039e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40434540" loc="58:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x40039e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex32" ref="0x4043bbf0" loc="65:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043ba98" loc="65:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int32" ref="0x4043c698" loc="61:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="int32_t" ref="0x401ea500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043c540" loc="61:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="int32_t" ref="0x401ea500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="chr" ref="0x4043a6b8" loc="67:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043a560" loc="67:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint32s" ref="0x4043e3a8" loc="82:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043e068" loc="82:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4043e248" loc="82:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="real" ref="0x4043a168" loc="66:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="float" size="I:4" alignment="I:1"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043a010" loc="66:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-float cname="float" size="I:4" alignment="I:1"></type-float>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex8" ref="0x40434168" loc="57:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40434010" loc="57:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint16" ref="0x40434be0" loc="59:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40434a88" loc="59:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint64s" ref="0x4043dac8" loc="85:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint64_t" ref="0x401eaea8"/></typename>
                <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043d788" loc="85:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint64_t" ref="0x401eaea8"/></typename>
                <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4043d968" loc="85:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint32" ref="0x4043b6b0" loc="64:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043b558" loc="64:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint8" ref="0x40435c00" loc="56:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40435aa8" loc="56:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex8s" ref="0x40438de8" loc="77:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40438aa8" loc="77:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40438c88" loc="77:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="record" ref="0x40435038" loc="49:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Initiates the recording of a new DiagMsg.</short>
          <long>&#10; Initiates the recording of a new DiagMsg. It returns FALSE if&#10; the component is busy recording or sending another message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="uint8s" ref="0x40438690" loc="76:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40438350" loc="76:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40438530" loc="76:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reals" ref="0x40446350" loc="86:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-float cname="float" size="I:4" alignment="I:1"></type-float>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40446010" loc="86:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-float cname="float" size="I:4" alignment="I:1"></type-float>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404461f0" loc="86:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int64" ref="0x4043cbc8" loc="62:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:1">
              <typename><typedef-ref name="int64_t" ref="0x401eab60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043ca70" loc="62:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="long long" size="I:8" alignment="I:1">
              <typename><typedef-ref name="int64_t" ref="0x401eab60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint16s" ref="0x40441cd0" loc="79:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
                <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40441990" loc="79:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
                <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40441b70" loc="79:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int64s" ref="0x4043d350" loc="84:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int64_t" ref="0x401eab60"/></typename>
                <type-int cname="long long" size="I:8" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043d010" loc="84:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int64_t" ref="0x401eab60"/></typename>
                <type-int cname="long long" size="I:8" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4043d1f0" loc="84:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex16" ref="0x4043c168" loc="60:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043c010" loc="60:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint64" ref="0x4043b168" loc="63:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1">
              <typename><typedef-ref name="uint64_t" ref="0x401eaea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043b010" loc="63:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1">
              <typename><typedef-ref name="uint64_t" ref="0x401eaea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int16s" ref="0x40441558" loc="78:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int16_t" ref="0x40039e90"/></typename>
                <type-int cname="short" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40441218" loc="78:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int16_t" ref="0x40039e90"/></typename>
                <type-int cname="short" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404413f8" loc="78:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int8" ref="0x40435618" loc="55:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Adds a new value to the end of the message.</short>
          <long>&#10; Adds a new value to the end of the message. If the message &#10; cannot hold more information, then the new value is simply dropped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40039640"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x404354c0" loc="55:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40039640"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex16s" ref="0x40440498" loc="80:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
                <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40440158" loc="80:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
                <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40440338" loc="80:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex32s" ref="0x4043eb18" loc="83:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043e7d8" loc="83:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4043e9b8" loc="83:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="chrs" ref="0x40446a58" loc="87:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40446718" loc="87:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404468f8" loc="87:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int8s" ref="0x4043ae18" loc="75:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="69:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Adds an array of values to the end of the message.</short>
          <long>&#10; Adds an array of values to the end of the message. &#10; The maximum length of the array is &#60;code>15&#60;/code>.&#10; If the message cannot hold all elements of the array,&#10; then no value is stored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int8_t" ref="0x40039640"/></typename>
                <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4043aad8" loc="75:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int8_t" ref="0x40039640"/></typename>
                <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4043acb8" loc="75:/usr/src/tinyos/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/usr/src/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404a1938" loc="62:/usr/src/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/usr/src/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404a5a38" loc="60:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404a58e0" loc="60:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404a60c8" loc="31:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404a6700" loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404a65a8" loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404a6dc8" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404a6c70" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x404a5338" loc="53:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x404d6a70" loc="44:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404d6e58" loc="45:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404d62e0" loc="42:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404d5670" loc="47:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404d66a0" loc="43:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404d5278" loc="46:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404d0b78" loc="40:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404d0f08" loc="41:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40553d58" loc="113:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40553c00" loc="113:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40552ae0" loc="138:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40552988" loc="138:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40553518" loc="104:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405522a8" loc="130:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40333888" loc="67:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40333da0" loc="75:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4055d880" loc="68:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x4055d420" loc="61:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x4055d010" loc="54:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40555a00" loc="53:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x4056a8e8" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4056a508" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40566458" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40566868" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4056aca0" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x40575218" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405750c0" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40566090" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x40575638" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x40566c88" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4059d020" loc="59:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058aeb0" loc="59:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4059db18" loc="71:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059d9c0" loc="71:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4059b5b8" loc="85:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059b460" loc="85:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x40592310" loc="177:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4045ca90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405921b8" loc="177:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40588bc0" loc="88:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4045ccf0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40588a68" loc="88:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4058baf0" loc="68:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4045ccf0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405881c0" loc="78:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4045ccf0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40588068" loc="78:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40586500" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4045ccf0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40586198" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405863a0" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4045ccf0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x405957d0" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4045ccf0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40595468" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40595670" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4045ccf0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40594ca0" loc="147:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40594b48" loc="147:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40591808" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405914d8" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x405916a8" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4045c838"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40594168" loc="136:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40594010" loc="136:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40590010" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4045ca90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40592c30" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40592e30" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4045ca90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40590888" loc="195:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4045ca90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/usr/src/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40596e80" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40596b40" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40596d20" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405a2a18" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a26b8" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405a2898" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x405a2158" loc="112:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405a3b38" loc="89:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a39e0" loc="89:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405a1820" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a14c8" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405a16c0" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x405dcd28" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dc998" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x405dcbc8" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x405cea80" loc="15:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x405dc388" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dc010" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40472678"/>
                <typename><typedef-ref name="message_t" ref="0x404714a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x405dc228" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/usr/src/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x405f7c98" loc="95:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/usr/src/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405f11a8" loc="105:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/usr/src/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40602368" loc="54:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x405f1f18" loc="49:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x405ec6b8" loc="56:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x405f6408" loc="72:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x405f4520" loc="94:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405f43c8" loc="94:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x405f6930" loc="79:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x405ecde8" loc="65:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405ecc90" loc="65:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x405f4a28" loc="100:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x405f6e90" loc="85:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x405ea798" loc="71:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x405ead60" loc="81:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x405ea188" loc="62:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x405ea030" loc="62:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x405e84c0" loc="91:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405e8368" loc="91:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x405f9640" loc="62:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x405f9e28" loc="69:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405f9cd0" loc="69:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x405f8570" loc="80:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x405f8418" loc="80:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/usr/src/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4069a940" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4069a5f0" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4069a7e0" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x406aacf0" loc="79:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x406aab98" loc="79:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x406a8530" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406a81e0" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406a83d0" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x406aa158" loc="65:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x406a73c8" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406a8e58" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406a7068" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x406a7260" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x406aa6e0" loc="72:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406ab7f0" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406ab2a0" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406ab490" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x406ab688" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/usr/src/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x406bea70" loc="46:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x406be918" loc="46:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x406bb378" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x406bb010" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x406bb218" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406b9b80" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406b9b80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406b9ce8" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406b9ce8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406ca1f0" loc="64:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406b9ce8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x406cac18" loc="76:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x406ca718" loc="71:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406c8038" loc="82:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x406c1720" loc="44:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x406c4ec0" loc="42:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x406d3d08" loc="49:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406d3bb0" loc="49:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x406d3408" loc="47:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x406c4648" loc="40:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x406c4a88" loc="41:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x406c1320" loc="43:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x406c1b20" loc="45:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x406d3058" loc="46:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406c1ed0" loc="46:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x406d37d8" loc="48:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4040baf0" loc="62:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403e7470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40332ed0" loc="52:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403f8a98" loc="76:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x4076dd18" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4076dd18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40767490" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40767338" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40768010" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4076a230" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4076dd18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407683c8" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x407678a0" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4076ab58" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40768f20" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4076a770" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4076dd18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4076a618" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4076dd18"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40768790" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40768b40" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4077f478" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4077f478"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40792ae0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40792988" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4077c668" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4077c288" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4077f970" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4077f478"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4077ca20" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40792ef0" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40792588" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4077feb0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4077f478"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4077fd58" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4077f478"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4077cde8" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407921a8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40787ad0" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40787ad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40781188" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40781030" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40784cf8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40784918" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x40781960" loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40784010" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40787ad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407830c8" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40781598" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40783c20" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40784550" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40787ad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x407843f8" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40787ad0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40783490" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40783840" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4032f010" loc="57:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4032f918" loc="72:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4032f450" loc="65:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4082f9b8" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4082f9b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4082fb20" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082fb20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40842db0" loc="109:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082fb20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4082aaa8" loc="78:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40842768" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082fb20"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082fb20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40842418" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082fb20"/></type-var>
          </variable>
          <variable name="dt" ref="0x40842608" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082fb20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4082aef0" loc="88:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40841268" loc="116:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082fb20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4082a168" loc="66:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082fb20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4082a010" loc="66:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082fb20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4082a648" loc="73:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40947d50" loc="65:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40947890" loc="59:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40962300" loc="32:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40948db0" loc="25:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x409627f0" loc="39:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/usr/src/tinyos/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4095eec0" loc="52:/usr/src/tinyos/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4095eec0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4095b3b8" loc="58:/usr/src/tinyos/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/usr/src/tinyos/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4095bb88" loc="66:/usr/src/tinyos/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4095eec0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4095b858" loc="66:/usr/src/tinyos/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4095ba28" loc="66:/usr/src/tinyos/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4095eec0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/usr/src/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40957e28" loc="120:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40957508" loc="97:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4095ae00" loc="88:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x409579b8" loc="102:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x409565f0" loc="128:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x4096c070" loc="100:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4096d860" loc="100:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4096da88" loc="100:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4096dcb0" loc="101:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x4096ded0" loc="101:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4096b3f0" loc="119:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4096c990" loc="119:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x4096cb80" loc="119:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x4096cd88" loc="119:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x4096b010" loc="120:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x4096b278" loc="120:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x409701a0" loc="70:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x409549b0" loc="70:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40954bd8" loc="70:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40954e00" loc="71:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40970030" loc="71:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4096e1f0" loc="91:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40970c50" loc="81:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40970900" loc="81:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40970af0" loc="81:/usr/src/tinyos/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
      <documentation loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x4097e698" loc="140:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="137:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAdlarOn" ref="0x409638d0" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns ADLAR (ADC left adjust result) status&#10; </short>
          <long>&#10; Returns ADLAR (ADC left adjust result) status&#10; @returns TRUE if ADLAR is on.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x4097db60" loc="166:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="161:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4097da08" loc="166:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x4097ead8" loc="148:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="144:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x409689c8" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Sets the ADC channel&#10; </short>
          <long>&#10; Sets the ADC channel&#10; @param mux New channel&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mux" ref="0x40968870" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40981760" loc="108:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="105:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdlar" ref="0x40963428" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Turns ADLAR (ADC left adjust result) on/off&#10; </short>
          <long>&#10; Turns ADLAR (ADC left adjust result) on/off&#10; @param adlarOn TRUE turns on ADLAR, FALSE turns it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adlarOn" ref="0x409632d0" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x4097f010" loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="114:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x4097d4b8" loc="159:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="154:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4097c038" loc="176:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="168:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40981b60" loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="109:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRef" ref="0x40982308" loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns the current reference voltage&#10; </short>
          <long>&#10; Returns the current reference voltage&#10; @returns the current reference voltage&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x4097f468" loc="121:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="118:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x4097f918" loc="125:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x4097fd50" loc="132:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="127:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x4097d010" loc="153:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="149:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40968e48" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns the current ADC channel&#10; </short>
          <long>&#10; Returns the current ADC channel&#10; @return Current channel&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40982e30" loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403fb658"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403fba00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x40982cd8" loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403fb658"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403fba00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRef" ref="0x40963e88" loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="74:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Sets the reference voltage&#10; </short>
          <long>&#10; Sets the reference voltage&#10; @param ref New reference voltage&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ref" ref="0x40963d30" loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40982800" loc="90:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403fb658"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403fba00"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x4097e298" loc="136:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="133:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40981300" loc="101:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="97:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4097c788" loc="182:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="178:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4097c630" loc="182:/usr/src/tinyos/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x409699e8" loc="95:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40969ed0" loc="105:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/usr/src/tinyos/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x409d1e08" loc="53:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x409ce458" loc="61:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x409d0af8" loc="56:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x409cb510" loc="73:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x409d05c8" loc="46:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x409cb038" loc="65:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x409cbae8" loc="81:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/usr/src/tinyos/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x409cfd10" loc="90:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x409c9250" loc="98:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x409e2168" loc="79:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409cda50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409e2010" loc="79:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409cda50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x409c7d40" loc="53:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x409c4468" loc="62:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409cda50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409c4310" loc="62:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x409cda50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x409c4a18" loc="70:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x409cda50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40a0a680" loc="62:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a184c0" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a184c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a18628" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a18628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40a18c40" loc="66:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a18628"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a18ae8" loc="66:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a18628"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusPowerManager" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
      <function event="" provided="0" name="powerOn" ref="0x40a806d8" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; This event is called when the bus is powered on and the maximum &#10; specified startup time has elapsed.</short>
          <long>&#10; This event is called when the bus is powered on and the maximum &#10; specified startup time has elapsed. Implementations should&#10; initialize the chip or go into power down mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestPower" ref="0x40a84d70" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Requests to power up this bus.</short>
          <long>&#10; Requests to power up this bus. The bus might be already powered&#10; up, in which case the powerOn event will not come.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="powerOff" ref="0x40a80bb0" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; This event is called when there are no outstanding power requests&#10; and the keepalive timeout value has expired.</short>
          <long>&#10; This event is called when there are no outstanding power requests&#10; and the keepalive timeout value has expired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40a84888" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Sets the startup and keepalive timeout values in milliseconds.</short>
          <long>&#10; Sets the startup and keepalive timeout values in milliseconds.&#10; Only the largest numbers are remembered, as the bus might not&#10; be operational if one of the chips on it is not operational.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startup" ref="0x40a844f8" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="keepalive" ref="0x40a84728" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="releasePower" ref="0x40a80210" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Releases the power up request.</short>
          <long>&#10; Releases the power up request. You must call this command exactly&#10; the same number of times as you have called requestPower. If other&#10; chips still want to keep the power (e.g. a measurement is in&#10; progress), then powerOff will not be called.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x40a8eaf0" loc="59:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x40a8eaf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40a8d7b0" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40a8e190"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40a8d030" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40a8e190"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40a8d230" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40a8d430" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40a8d640" loc="76:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40a88d50" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40a885d0" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40a887d0" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40a889d0" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40a88be0" loc="112:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a8ca88" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40a8e190"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40a8c308" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40a8e190"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40a8c508" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40a8c708" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40a8c918" loc="92:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40a89c78" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40a894f8" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40a896f8" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40a898f8" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40a89b08" loc="102:/usr/src/tinyos/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x40ae0de0" loc="46:/usr/src/tinyos/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x40b04708" loc="54:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x40b04ae8" loc="55:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x40b03438" loc="60:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40b032e0" loc="60:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x40b04328" loc="52:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x40b02a68" loc="65:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40affd20" loc="84:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40b00010" loc="67:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40b02e90" loc="67:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40afeac8" loc="89:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40b08b80" loc="49:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x40b08a28" loc="49:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x40b02680" loc="64:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40b02528" loc="64:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40b004e8" loc="68:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x40b03830" loc="61:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40b00df0" loc="75:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x40b04ef0" loc="56:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40aff920" loc="83:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40aff7c8" loc="83:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40afe6e0" loc="88:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40afe588" loc="88:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x40b00988" loc="72:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40b08f10" loc="50:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x40b03d38" loc="62:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40b03be0" loc="62:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x40aff420" loc="81:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40aff2c8" loc="81:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40afe1a8" loc="85:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x40b02138" loc="63:/usr/src/tinyos/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Set" loc="49:/usr/src/tinyos/tos/interfaces/Set.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/Set.nc">
        <short>&#10; The Set interface is intended for synchronous writing of small&#10; values.</short>
        <long>&#10; The Set interface is intended for synchronous writing of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the set() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40bba038" loc="49:/usr/src/tinyos/tos/interfaces/Set.nc">
          <interfacedef-ref qname="Set"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40bba038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="set" ref="0x40bba5f0" loc="55:/usr/src/tinyos/tos/interfaces/Set.nc">
        <documentation loc="50:/usr/src/tinyos/tos/interfaces/Set.nc">
          <short>&#10; Stores a value of type val_t.</short>
          <long>&#10; Stores a value of type val_t.&#10;&#10; @param val the value to be stored&#10;</long>
        </documentation>
        <interfacedef-ref qname="Set"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40bba038"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40bba498" loc="55:/usr/src/tinyos/tos/interfaces/Set.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40bba038"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/usr/src/tinyos/tos/interfaces/Get.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40c55ae8" loc="49:/usr/src/tinyos/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c55ae8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40c52010" loc="55:/usr/src/tinyos/tos/interfaces/Get.nc">
        <documentation loc="50:/usr/src/tinyos/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c55ae8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
