<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="7:UerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4040fa38"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40428078"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40428078"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4041f778"/></to>
    </wire>
    <wire loc="9:UerAppC.nc">
      <from><interface-ref name="ESP8266" scoped="" ref="0x407f4928"/></from>
      <to><interface-ref name="ESP8266" scoped="" ref="0x40422908"/></to>
    </wire>
    <wire loc="21:ESP8266C.nc">
      <from><interface-ref name="ESP8266" scoped="" ref="0x40422908"/></from>
      <to><interface-ref name="ESP8266" scoped="" ref="0x407f15a0"/></to>
    </wire>
    <wire loc="11:UerAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4040fda0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a6a20"/></to>
    </wire>
    <wire loc="47:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407a6a20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407c1470"/></to>
    </wire>
    <wire loc="12:UerAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407de760"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4098a4c8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4098a4c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40859018"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x406bf9f8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x406bb4c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40673398"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4058a970"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404e9860"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4041fb10"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403f9738"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407d4100"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40420508"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40420508"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4042aa48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x407d4508"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042dd98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4044c960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404265b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d9450"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x40429238"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x404265b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x4042ae38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40425608"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40425608"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40446e00"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x40429608"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40466010"/></to>
    </wire>
    <wire loc="40:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x40466010"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40466850"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40425a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408efd70"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40425a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a62900"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40425a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4071c010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40443628"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x40425a10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404439d8"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x40425dc0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x40443da0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x4044f240"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40443260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4044c5b0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Toggle" scoped="" ref="0x4046cda0"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x40469688"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x40469688"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40483c08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4046a1d0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404798e0"/></to>
    </wire>
    <wire loc="117:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404798e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x4046abd8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x404d5438"/></to>
    </wire>
    <wire loc="145:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40483c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4048e2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x4047a830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4048bea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404910a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40497830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4046e4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40487c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4047e0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40484750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40489ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40471120"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40477750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4047dea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40481670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40490ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x4048c3d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40480a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4046f010"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40475750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4048eee8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40474c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404852f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4048a8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40491a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4046eea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404782f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4047ea98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x40483210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40488750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40471b18"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40476210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4047c8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4048f8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4047bce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4048b4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40486670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4048cdc8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4046fa08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x40474210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40487210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4047f670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40485ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404892f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404904b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bbc68"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404686f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40478ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4047d4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4048d900"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b65c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404800a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b2440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4047b2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40470590"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40494190"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40476c88"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a6a70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x404f3708"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x40502758"/></to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x40502758"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x404fe010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x404f3dc8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40502d90"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40502d90"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x40476c88"/></to>
    </wire>
    <wire loc="43:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x404e7980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405250e0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405250e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4058ad08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x404f1ab0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x404f4388"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x404fe010"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x404fc9b8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40518eb8"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40505428"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4058ad08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4059f0f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40535be0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40553be8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40541010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058c310"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40523100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405523a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40547010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058c9a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405526d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4058a970"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405a0d48"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40591840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40547548"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4058ced0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40587c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4058b5a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40587618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40591338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40713b78"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40587c20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4064c710"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40587618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4064c350"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x4064cea0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40591338"/></to>
    </wire>
    <wire loc="70:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405a8720"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40591840"/></to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4065de50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40591840"/></to>
    </wire>
    <wire loc="72:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40656340"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40591840"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4065d3c0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405a9bd8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x4065d898"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x405ab7f8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x405b5e88"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x4065a710"/></to>
    </wire>
    <wire loc="78:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x405b2760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40659608"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40659608"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4067a328"/></to>
    </wire>
    <wire loc="80:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406639e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40659a88"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40659a88"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4067ac18"/></to>
    </wire>
    <wire loc="332:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x405e77a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x405c3b28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x405e8010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x405e4428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x4065cdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x4065b270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406788f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x4067a798"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x4067a798"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40673ae8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4067ac18"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40673f00"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4067a328"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406736d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406853f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40676c48"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40676c48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406fd490"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406adc88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406853f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x406847b0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x406ae688"/></to>
    </wire>
    <wire loc="60:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x406ae688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x406bfe48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40684be8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x406aeb98"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x406aeb98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x406bc3a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x406ad050"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x406c10b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x406c10b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x406bc8c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x406c0760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x406b9390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x406c1cc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x406bb910"/></to>
    </wire>
    <wire loc="65:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x406c0268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x406bbe40"/></to>
    </wire>
    <wire loc="68:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x406b83e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042dd98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406b8b20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406b8b20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x408b3a90"/></to>
    </wire>
    <wire loc="57:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407536f8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406b8010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407176f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407153e8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407153e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40710918"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4070fb60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40722b60"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40722b60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4071c448"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x407385f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40734878"/></to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40734878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4074da80"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4074e1d8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407556a8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40740f08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40749b98"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40740f08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40746f10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40740f08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40758320"/></to>
    </wire>
    <wire loc="56:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40753ae8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407a4a38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a6a20"/></to>
    </wire>
    <wire loc="46:/opt/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407a4010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40587c20"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407a46f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40587618"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40591338"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x407a7a28"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x407a2218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407d9450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407c1128"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407c0480"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x407c3c20"/></to>
    </wire>
    <wire loc="61:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407c3c20"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x40475750"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407c0e68"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x407db660"/></to>
    </wire>
    <wire loc="62:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407db660"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40474210"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407bf860"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x407da060"/></to>
    </wire>
    <wire loc="63:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407da060"/></from>
      <to><interface-ref name="PortB6" scoped="" ref="0x40475750"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x407be2e0"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x407daa48"/></to>
    </wire>
    <wire loc="64:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x407daa48"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40474210"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403f8010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403f8c68"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40332498"/></to>
    </wire>
    <wire loc="22:ESP8266C.nc">
      <from><interface-ref name="ESP_INIT" scoped="" ref="0x407f1c28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4085f0a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4085f0a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40859018"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:ESP8266C.nc">
      <from><interface-ref name="ESP_RESET" scoped="" ref="0x407eb010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40985e20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40985e20"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40859018"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:ESP8266C.nc">
      <from><interface-ref name="ESP_MODE_1" scoped="" ref="0x408033b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40982bf8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40982bf8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40859018"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:ESP8266C.nc">
      <from><interface-ref name="ESP_CON_AP" scoped="" ref="0x40800708"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4097eab0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4097eab0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40859018"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:ESP8266C.nc">
      <from><interface-ref name="ESP_SERVER" scoped="" ref="0x407fea98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4097a8f0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4097a8f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40859018"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:ESP8266C.nc">
      <from><interface-ref name="ESP_SENDING" scoped="" ref="0x407fbea8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409776f8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x409776f8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40859018"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:ESP8266C.nc">
      <from><interface-ref name="ESP_SEND_PRESENT" scoped="" ref="0x40811278"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409935a8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x409935a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40859018"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:ESP8266C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4080f4a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a6a20"/></to>
    </wire>
    <wire loc="32:ESP8266C.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x4080e590"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40659608"/></to>
    </wire>
    <wire loc="33:ESP8266C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4080e9f0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40659a88"/></to>
    </wire>
    <wire loc="82:ESP8266P.nc">
      <from><interface-ref name="AT_REV_COMP" scoped="" ref="0x4081e908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40859018"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40953a60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4093b8d8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40855750"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40855750"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a486b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4096ce30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409345d8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40a673b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a4bd18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a4bd18"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a62d38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a68180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409055f8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409055f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40901b70"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40a60750"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40897cd0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40897cd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4088bd48"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x40a5d7c8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x4088e490"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x4089aac0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x408a3e88"/></to>
    </wire>
    <wire loc="53:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4089f248"/></to>
    </wire>
    <wire loc="54:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40891100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4089c680"/></to>
    </wire>
    <wire loc="58:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x408b3e80"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408f3e30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408ee270"/></to>
    </wire>
    <wire loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4090a420"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40897cd0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x408ffde0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408f3e30"/></to>
    </wire>
    <wire loc="74:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40939298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40968050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos/tos/platforms/ucmini/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/opt/tinyos/tos/system/NoPinC.nc">
      <documentation loc="10:/opt/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="41:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <documentation loc="35:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Jan Beutel&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos/tos/platforms/ucmini/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="UerC" loc="2:UerC.nc">
      <module/>
    </component>
    <component qname="ESP8266C" loc="3:ESP8266C.nc">
      <configuration/>
    </component>
    <component qname="ESP8266P" loc="9:ESP8266P.nc" safe="">
      <documentation loc="1:ESP8266P.nc">
        <short>&#10; Implementation for ESP8266P Driver.</short>
        <long>&#10; Implementation for ESP8266P Driver.&#10; Create by TJ, TaeHaun&#10; Date 2015. 02. 06&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="ESP8266C.ESP_INIT" loc="44(ESP8266C.ESP_INIT):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ESP8266C.ESP_RESET" loc="44(ESP8266C.ESP_RESET):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ESP8266C.ESP_MODE_1" loc="44(ESP8266C.ESP_MODE_1):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ESP8266C.ESP_CON_AP" loc="44(ESP8266C.ESP_CON_AP):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ESP8266C.ESP_SERVER" loc="44(ESP8266C.ESP_SERVER):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ESP8266C.ESP_SENDING" loc="44(ESP8266C.ESP_SENDING):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ESP8266C.ESP_SEND_PRESENT" loc="44(ESP8266C.ESP_SEND_PRESENT):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UerAppC.T1" loc="44(UerAppC.T1):/opt/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x40495558" loc="36:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40495780" loc="37:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404959a8" loc="38:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/opt/tinyos/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/opt/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406feca8" loc="55:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406feca8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406f9148" loc="56:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406f9148"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406f93b0" loc="57:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406f93b0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406f9820" loc="58:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406f9820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406f9a88" loc="59:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x406f9f10" loc="60:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x406f9f10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4071e6f8" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4071e6f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4071eb28" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4071eb28"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4071ed18" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40864ed8" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40864ed8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40860340" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40860340"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40860530" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x40860738" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40904ec8" loc="52:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40904ec8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40918360" loc="53:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40918360"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x409185c8" loc="54:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x409185c8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40918a38" loc="55:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40918a38"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40918ca0" loc="56:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40933010" loc="46:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40933010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40938b40" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40938b40"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40938d20" loc="46:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x40428d18" loc="58:/opt/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40428d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40428ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40428078" loc="57:/opt/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40428078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40428250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40420508" loc="39:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40420508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404206e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4042dd98" loc="40:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40426010"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404260f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404261d0"/>
        <function-ref name="actualMicro" scoped="" ref="0x404262b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40426390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404265b8" loc="43:/opt/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404265b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40426790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4042aa48" loc="39:/opt/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4042aa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042ac20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x40429608" loc="45:/opt/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x40429608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404297e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x40429238" loc="44:/opt/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x40429238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40429410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x4042ae38" loc="43:/opt/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x4042ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40429050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40425608" loc="37:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40425608"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404257e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x40425dc0" loc="42:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x40425dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40425a10" loc="41:/opt/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40425a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40425be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x40443da0" loc="45:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x40443da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40446e00" loc="38:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40446e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40443010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404439d8" loc="44:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404439d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40443bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40443260" loc="42:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40443260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40443438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40443628" loc="43:/opt/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40443628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40443800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4044c5b0" loc="60:/opt/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4044c5b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044c788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4044c960" loc="61:/opt/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4044c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4044cb38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4044cc18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4044ccf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x4044cdd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4044ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x4044f240" loc="35:/opt/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x4044f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044f418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40466010" loc="36:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40466010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404661e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Toggle" ref="0x4046cda0" loc="38:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Toggle" scoped="" ref="0x4046cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463010"/>
        <function-ref name="isInput" scoped="" ref="0x404630f0"/>
        <function-ref name="toggle" scoped="" ref="0x404631d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404632b0"/>
        <function-ref name="get" scoped="" ref="0x40463390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40463470"/>
        <function-ref name="set" scoped="" ref="0x40463550"/>
        <function-ref name="clr" scoped="" ref="0x40463630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40466850" loc="36:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40466850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40466a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x4046a1d0" loc="42:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4046a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a3a8"/>
        <function-ref name="isInput" scoped="" ref="0x4046a488"/>
        <function-ref name="toggle" scoped="" ref="0x4046a568"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a648"/>
        <function-ref name="get" scoped="" ref="0x4046a728"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a808"/>
        <function-ref name="set" scoped="" ref="0x4046a8e8"/>
        <function-ref name="clr" scoped="" ref="0x4046a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x4046abd8" loc="43:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x4046abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046adb0"/>
        <function-ref name="isInput" scoped="" ref="0x4046ae90"/>
        <function-ref name="toggle" scoped="" ref="0x40469010"/>
        <function-ref name="isOutput" scoped="" ref="0x404690f0"/>
        <function-ref name="get" scoped="" ref="0x404691d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404692b0"/>
        <function-ref name="set" scoped="" ref="0x40469390"/>
        <function-ref name="clr" scoped="" ref="0x40469470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x40469688" loc="45:/opt/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x40469688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469860"/>
        <function-ref name="isInput" scoped="" ref="0x40469940"/>
        <function-ref name="toggle" scoped="" ref="0x40469a20"/>
        <function-ref name="isOutput" scoped="" ref="0x40469b00"/>
        <function-ref name="get" scoped="" ref="0x40469be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469cc0"/>
        <function-ref name="set" scoped="" ref="0x40469da0"/>
        <function-ref name="clr" scoped="" ref="0x40469e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4048e2f0" loc="93:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4048e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4048e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4048e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4048e968"/>
        <function-ref name="get" scoped="" ref="0x4048ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048eb28"/>
        <function-ref name="set" scoped="" ref="0x4048ec08"/>
        <function-ref name="clr" scoped="" ref="0x4048ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x4047a830" loc="67:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x4047a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047aa08"/>
        <function-ref name="isInput" scoped="" ref="0x4047aae8"/>
        <function-ref name="toggle" scoped="" ref="0x4047abc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047aca8"/>
        <function-ref name="get" scoped="" ref="0x4047ad88"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047ae68"/>
        <function-ref name="set" scoped="" ref="0x40485010"/>
        <function-ref name="clr" scoped="" ref="0x404850f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4048bea8" loc="78:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4048bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4048a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4048a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4048a360"/>
        <function-ref name="get" scoped="" ref="0x4048a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a520"/>
        <function-ref name="set" scoped="" ref="0x4048a600"/>
        <function-ref name="clr" scoped="" ref="0x4048a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404910a0" loc="87:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404910a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491278"/>
        <function-ref name="isInput" scoped="" ref="0x40491358"/>
        <function-ref name="toggle" scoped="" ref="0x40491438"/>
        <function-ref name="isOutput" scoped="" ref="0x40491518"/>
        <function-ref name="get" scoped="" ref="0x404915f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404916d8"/>
        <function-ref name="set" scoped="" ref="0x404917b8"/>
        <function-ref name="clr" scoped="" ref="0x40491898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40497830" loc="98:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40497830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497a08"/>
        <function-ref name="isInput" scoped="" ref="0x40497ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40497bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40497ca8"/>
        <function-ref name="get" scoped="" ref="0x40497d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497e68"/>
        <function-ref name="set" scoped="" ref="0x40496010"/>
        <function-ref name="clr" scoped="" ref="0x404960f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4046e4b0" loc="45:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4046e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e688"/>
        <function-ref name="isInput" scoped="" ref="0x4046e768"/>
        <function-ref name="toggle" scoped="" ref="0x4046e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e928"/>
        <function-ref name="get" scoped="" ref="0x4046ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046eae8"/>
        <function-ref name="set" scoped="" ref="0x4046ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4046eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40487c08" loc="85:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40487c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487de0"/>
        <function-ref name="isInput" scoped="" ref="0x40487ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40486010"/>
        <function-ref name="isOutput" scoped="" ref="0x404860f0"/>
        <function-ref name="get" scoped="" ref="0x404861d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404862b0"/>
        <function-ref name="set" scoped="" ref="0x40486390"/>
        <function-ref name="clr" scoped="" ref="0x40486470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404798e0" loc="48:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404798e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40479b98"/>
        <function-ref name="toggle" scoped="" ref="0x40479c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40479d58"/>
        <function-ref name="get" scoped="" ref="0x40479e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40479f18"/>
        <function-ref name="set" scoped="" ref="0x40478010"/>
        <function-ref name="clr" scoped="" ref="0x404780f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4047e0a0" loc="59:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4047e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e278"/>
        <function-ref name="isInput" scoped="" ref="0x4047e358"/>
        <function-ref name="toggle" scoped="" ref="0x4047e438"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e518"/>
        <function-ref name="get" scoped="" ref="0x4047e5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e6d8"/>
        <function-ref name="set" scoped="" ref="0x4047e7b8"/>
        <function-ref name="clr" scoped="" ref="0x4047e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40484750" loc="70:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40484750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40484928"/>
        <function-ref name="isInput" scoped="" ref="0x40484a08"/>
        <function-ref name="toggle" scoped="" ref="0x40484ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40484bc8"/>
        <function-ref name="get" scoped="" ref="0x40484ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484d88"/>
        <function-ref name="set" scoped="" ref="0x40484e68"/>
        <function-ref name="clr" scoped="" ref="0x40483010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40489ce8" loc="81:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40489ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40489ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40488010"/>
        <function-ref name="toggle" scoped="" ref="0x404880f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404881d0"/>
        <function-ref name="get" scoped="" ref="0x404882b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488390"/>
        <function-ref name="set" scoped="" ref="0x40488470"/>
        <function-ref name="clr" scoped="" ref="0x40488550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40471120" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40471120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404712f8"/>
        <function-ref name="isInput" scoped="" ref="0x404713d8"/>
        <function-ref name="toggle" scoped="" ref="0x404714b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40471598"/>
        <function-ref name="get" scoped="" ref="0x40471678"/>
        <function-ref name="makeOutput" scoped="" ref="0x40471758"/>
        <function-ref name="set" scoped="" ref="0x40471838"/>
        <function-ref name="clr" scoped="" ref="0x40471918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40477750" loc="51:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40477750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477928"/>
        <function-ref name="isInput" scoped="" ref="0x40477a08"/>
        <function-ref name="toggle" scoped="" ref="0x40477ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40477bc8"/>
        <function-ref name="get" scoped="" ref="0x40477ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477d88"/>
        <function-ref name="set" scoped="" ref="0x40477e68"/>
        <function-ref name="clr" scoped="" ref="0x40476010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4047dea8" loc="62:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4047dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4047c1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4047c280"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c360"/>
        <function-ref name="get" scoped="" ref="0x4047c440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047c520"/>
        <function-ref name="set" scoped="" ref="0x4047c600"/>
        <function-ref name="clr" scoped="" ref="0x4047c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40481670" loc="73:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40481670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40481848"/>
        <function-ref name="isInput" scoped="" ref="0x40481928"/>
        <function-ref name="toggle" scoped="" ref="0x40481a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40481ae8"/>
        <function-ref name="get" scoped="" ref="0x40481bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40481ca8"/>
        <function-ref name="set" scoped="" ref="0x40481d88"/>
        <function-ref name="clr" scoped="" ref="0x40481e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40490ea8" loc="90:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40490ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4048f1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4048f280"/>
        <function-ref name="isOutput" scoped="" ref="0x4048f360"/>
        <function-ref name="get" scoped="" ref="0x4048f440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f520"/>
        <function-ref name="set" scoped="" ref="0x4048f600"/>
        <function-ref name="clr" scoped="" ref="0x4048f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x4048c3d0" loc="96:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x4048c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c5a8"/>
        <function-ref name="isInput" scoped="" ref="0x4048c688"/>
        <function-ref name="toggle" scoped="" ref="0x4048c768"/>
        <function-ref name="isOutput" scoped="" ref="0x4048c848"/>
        <function-ref name="get" scoped="" ref="0x4048c928"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048ca08"/>
        <function-ref name="set" scoped="" ref="0x4048cae8"/>
        <function-ref name="clr" scoped="" ref="0x4048cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40480a98" loc="76:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40480a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480c70"/>
        <function-ref name="isInput" scoped="" ref="0x40480d50"/>
        <function-ref name="toggle" scoped="" ref="0x40480e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40480f10"/>
        <function-ref name="get" scoped="" ref="0x4048b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b0f0"/>
        <function-ref name="set" scoped="" ref="0x4048b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4048b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4046f010" loc="43:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4046f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4046f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4046f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f488"/>
        <function-ref name="get" scoped="" ref="0x4046f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f648"/>
        <function-ref name="set" scoped="" ref="0x4046f728"/>
        <function-ref name="clr" scoped="" ref="0x4046f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40475750" loc="54:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40475750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475928"/>
        <function-ref name="isInput" scoped="" ref="0x40475a08"/>
        <function-ref name="toggle" scoped="" ref="0x40475ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40475bc8"/>
        <function-ref name="get" scoped="" ref="0x40475ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475d88"/>
        <function-ref name="set" scoped="" ref="0x40475e68"/>
        <function-ref name="clr" scoped="" ref="0x40474010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4048eee8" loc="94:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4048eee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x4048d1c0"/>
        <function-ref name="toggle" scoped="" ref="0x4048d2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048d380"/>
        <function-ref name="get" scoped="" ref="0x4048d460"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048d540"/>
        <function-ref name="set" scoped="" ref="0x4048d620"/>
        <function-ref name="clr" scoped="" ref="0x4048d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40474c08" loc="57:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40474c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40474de0"/>
        <function-ref name="isInput" scoped="" ref="0x40474ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4047f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f0f0"/>
        <function-ref name="get" scoped="" ref="0x4047f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f2b0"/>
        <function-ref name="set" scoped="" ref="0x4047f390"/>
        <function-ref name="clr" scoped="" ref="0x4047f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404852f0" loc="68:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404852f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404854c8"/>
        <function-ref name="isInput" scoped="" ref="0x404855a8"/>
        <function-ref name="toggle" scoped="" ref="0x40485688"/>
        <function-ref name="isOutput" scoped="" ref="0x40485768"/>
        <function-ref name="get" scoped="" ref="0x40485848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485928"/>
        <function-ref name="set" scoped="" ref="0x40485a08"/>
        <function-ref name="clr" scoped="" ref="0x40485ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4048a8e0" loc="79:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4048a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048aab8"/>
        <function-ref name="isInput" scoped="" ref="0x4048ab98"/>
        <function-ref name="toggle" scoped="" ref="0x4048ac78"/>
        <function-ref name="isOutput" scoped="" ref="0x4048ad58"/>
        <function-ref name="get" scoped="" ref="0x4048ae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048af18"/>
        <function-ref name="set" scoped="" ref="0x40489010"/>
        <function-ref name="clr" scoped="" ref="0x404890f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40491a98" loc="88:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40491a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491c70"/>
        <function-ref name="isInput" scoped="" ref="0x40491d50"/>
        <function-ref name="toggle" scoped="" ref="0x40491e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40491f10"/>
        <function-ref name="get" scoped="" ref="0x40490010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404900f0"/>
        <function-ref name="set" scoped="" ref="0x404901d0"/>
        <function-ref name="clr" scoped="" ref="0x404902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4046eea8" loc="46:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4046eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404790c0"/>
        <function-ref name="isInput" scoped="" ref="0x404791a0"/>
        <function-ref name="toggle" scoped="" ref="0x40479280"/>
        <function-ref name="isOutput" scoped="" ref="0x40479360"/>
        <function-ref name="get" scoped="" ref="0x40479440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40479520"/>
        <function-ref name="set" scoped="" ref="0x40479600"/>
        <function-ref name="clr" scoped="" ref="0x404796e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404782f0" loc="49:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404784c8"/>
        <function-ref name="isInput" scoped="" ref="0x404785a8"/>
        <function-ref name="toggle" scoped="" ref="0x40478688"/>
        <function-ref name="isOutput" scoped="" ref="0x40478768"/>
        <function-ref name="get" scoped="" ref="0x40478848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478928"/>
        <function-ref name="set" scoped="" ref="0x40478a08"/>
        <function-ref name="clr" scoped="" ref="0x40478ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4047ea98" loc="60:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4047ea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047ec70"/>
        <function-ref name="isInput" scoped="" ref="0x4047ed50"/>
        <function-ref name="toggle" scoped="" ref="0x4047ee30"/>
        <function-ref name="isOutput" scoped="" ref="0x4047ef10"/>
        <function-ref name="get" scoped="" ref="0x4047d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047d0f0"/>
        <function-ref name="set" scoped="" ref="0x4047d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4047d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x40483210" loc="71:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x40483210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404833e8"/>
        <function-ref name="isInput" scoped="" ref="0x404834c8"/>
        <function-ref name="toggle" scoped="" ref="0x404835a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40483688"/>
        <function-ref name="get" scoped="" ref="0x40483768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483848"/>
        <function-ref name="set" scoped="" ref="0x40483928"/>
        <function-ref name="clr" scoped="" ref="0x40483a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40488750" loc="82:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40488750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40488928"/>
        <function-ref name="isInput" scoped="" ref="0x40488a08"/>
        <function-ref name="toggle" scoped="" ref="0x40488ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40488bc8"/>
        <function-ref name="get" scoped="" ref="0x40488ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488d88"/>
        <function-ref name="set" scoped="" ref="0x40488e68"/>
        <function-ref name="clr" scoped="" ref="0x40487010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40471b18" loc="41:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40471b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40471dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40471eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40470010"/>
        <function-ref name="get" scoped="" ref="0x404700f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404701d0"/>
        <function-ref name="set" scoped="" ref="0x404702b0"/>
        <function-ref name="clr" scoped="" ref="0x40470390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40476210" loc="52:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40476210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476468"/>
        <function-ref name="isInput" scoped="" ref="0x40476548"/>
        <function-ref name="toggle" scoped="" ref="0x40476628"/>
        <function-ref name="isOutput" scoped="" ref="0x40476708"/>
        <function-ref name="get" scoped="" ref="0x404767e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404768c8"/>
        <function-ref name="set" scoped="" ref="0x404769a8"/>
        <function-ref name="clr" scoped="" ref="0x40476a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4047c8e0" loc="63:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4047c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047cab8"/>
        <function-ref name="isInput" scoped="" ref="0x4047cb98"/>
        <function-ref name="toggle" scoped="" ref="0x4047cc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4047cd58"/>
        <function-ref name="get" scoped="" ref="0x4047ce38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047cf18"/>
        <function-ref name="set" scoped="" ref="0x4047b010"/>
        <function-ref name="clr" scoped="" ref="0x4047b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4048f8e0" loc="91:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4048f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048fab8"/>
        <function-ref name="isInput" scoped="" ref="0x4048fb98"/>
        <function-ref name="toggle" scoped="" ref="0x4048fc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4048fd58"/>
        <function-ref name="get" scoped="" ref="0x4048fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048ff18"/>
        <function-ref name="set" scoped="" ref="0x4048e010"/>
        <function-ref name="clr" scoped="" ref="0x4048e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4047bce8" loc="66:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4047bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a010"/>
        <function-ref name="isInput" scoped="" ref="0x4047a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4047a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a2b0"/>
        <function-ref name="get" scoped="" ref="0x4047a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a470"/>
        <function-ref name="set" scoped="" ref="0x4047a550"/>
        <function-ref name="clr" scoped="" ref="0x4047a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4048b4b0" loc="77:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4048b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b688"/>
        <function-ref name="isInput" scoped="" ref="0x4048b768"/>
        <function-ref name="toggle" scoped="" ref="0x4048b848"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b928"/>
        <function-ref name="get" scoped="" ref="0x4048ba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048bae8"/>
        <function-ref name="set" scoped="" ref="0x4048bbc8"/>
        <function-ref name="clr" scoped="" ref="0x4048bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40486670" loc="86:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40486670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40486848"/>
        <function-ref name="isInput" scoped="" ref="0x40486928"/>
        <function-ref name="toggle" scoped="" ref="0x40486a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40486ae8"/>
        <function-ref name="get" scoped="" ref="0x40486bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40486ca8"/>
        <function-ref name="set" scoped="" ref="0x40486d88"/>
        <function-ref name="clr" scoped="" ref="0x40486e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4048cdc8" loc="97:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4048cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497010"/>
        <function-ref name="isInput" scoped="" ref="0x404970f0"/>
        <function-ref name="toggle" scoped="" ref="0x404971d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404972b0"/>
        <function-ref name="get" scoped="" ref="0x40497390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497470"/>
        <function-ref name="set" scoped="" ref="0x40497550"/>
        <function-ref name="clr" scoped="" ref="0x40497630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4046fa08" loc="44:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4046fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x4046fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x4046fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fe80"/>
        <function-ref name="get" scoped="" ref="0x4046e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e0f0"/>
        <function-ref name="set" scoped="" ref="0x4046e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4046e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x40474210" loc="55:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x40474210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404743e8"/>
        <function-ref name="isInput" scoped="" ref="0x404744c8"/>
        <function-ref name="toggle" scoped="" ref="0x404745a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40474688"/>
        <function-ref name="get" scoped="" ref="0x40474768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474848"/>
        <function-ref name="set" scoped="" ref="0x40474928"/>
        <function-ref name="clr" scoped="" ref="0x40474a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40487210" loc="84:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40487210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404873e8"/>
        <function-ref name="isInput" scoped="" ref="0x404874c8"/>
        <function-ref name="toggle" scoped="" ref="0x404875a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40487688"/>
        <function-ref name="get" scoped="" ref="0x40487768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487848"/>
        <function-ref name="set" scoped="" ref="0x40487928"/>
        <function-ref name="clr" scoped="" ref="0x40487a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4047f670" loc="58:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4047f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f848"/>
        <function-ref name="isInput" scoped="" ref="0x4047f928"/>
        <function-ref name="toggle" scoped="" ref="0x4047fa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4047fae8"/>
        <function-ref name="get" scoped="" ref="0x4047fbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047fca8"/>
        <function-ref name="set" scoped="" ref="0x4047fd88"/>
        <function-ref name="clr" scoped="" ref="0x4047fe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40485ce8" loc="69:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40485ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40484010"/>
        <function-ref name="toggle" scoped="" ref="0x404840f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404841d0"/>
        <function-ref name="get" scoped="" ref="0x404842b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484390"/>
        <function-ref name="set" scoped="" ref="0x40484470"/>
        <function-ref name="clr" scoped="" ref="0x40484550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404892f0" loc="80:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404894c8"/>
        <function-ref name="isInput" scoped="" ref="0x404895a8"/>
        <function-ref name="toggle" scoped="" ref="0x40489688"/>
        <function-ref name="isOutput" scoped="" ref="0x40489768"/>
        <function-ref name="get" scoped="" ref="0x40489848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40489928"/>
        <function-ref name="set" scoped="" ref="0x40489a08"/>
        <function-ref name="clr" scoped="" ref="0x40489ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404904b0" loc="89:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404904b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490688"/>
        <function-ref name="isInput" scoped="" ref="0x40490768"/>
        <function-ref name="toggle" scoped="" ref="0x40490848"/>
        <function-ref name="isOutput" scoped="" ref="0x40490928"/>
        <function-ref name="get" scoped="" ref="0x40490a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490ae8"/>
        <function-ref name="set" scoped="" ref="0x40490bc8"/>
        <function-ref name="clr" scoped="" ref="0x40490ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404686f0" loc="39:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404686f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404688c8"/>
        <function-ref name="isInput" scoped="" ref="0x404689a8"/>
        <function-ref name="toggle" scoped="" ref="0x40468a88"/>
        <function-ref name="isOutput" scoped="" ref="0x40468b68"/>
        <function-ref name="get" scoped="" ref="0x40468c48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468d28"/>
        <function-ref name="set" scoped="" ref="0x40468e08"/>
        <function-ref name="clr" scoped="" ref="0x40468ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40478ce8" loc="50:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40478ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40477010"/>
        <function-ref name="toggle" scoped="" ref="0x404770f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404771d0"/>
        <function-ref name="get" scoped="" ref="0x404772b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477390"/>
        <function-ref name="set" scoped="" ref="0x40477470"/>
        <function-ref name="clr" scoped="" ref="0x40477550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4047d4b0" loc="61:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4047d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047d688"/>
        <function-ref name="isInput" scoped="" ref="0x4047d768"/>
        <function-ref name="toggle" scoped="" ref="0x4047d848"/>
        <function-ref name="isOutput" scoped="" ref="0x4047d928"/>
        <function-ref name="get" scoped="" ref="0x4047da08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047dae8"/>
        <function-ref name="set" scoped="" ref="0x4047dbc8"/>
        <function-ref name="clr" scoped="" ref="0x4047dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40483c08" loc="72:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40483c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483de0"/>
        <function-ref name="isInput" scoped="" ref="0x40483ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40481010"/>
        <function-ref name="isOutput" scoped="" ref="0x404810f0"/>
        <function-ref name="get" scoped="" ref="0x404811d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404812b0"/>
        <function-ref name="set" scoped="" ref="0x40481390"/>
        <function-ref name="clr" scoped="" ref="0x40481470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4048d900" loc="95:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4048d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048dad8"/>
        <function-ref name="isInput" scoped="" ref="0x4048dbb8"/>
        <function-ref name="toggle" scoped="" ref="0x4048dc98"/>
        <function-ref name="isOutput" scoped="" ref="0x4048dd78"/>
        <function-ref name="get" scoped="" ref="0x4048de58"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048c010"/>
        <function-ref name="set" scoped="" ref="0x4048c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4048c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404800a0" loc="75:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480278"/>
        <function-ref name="isInput" scoped="" ref="0x40480358"/>
        <function-ref name="toggle" scoped="" ref="0x40480438"/>
        <function-ref name="isOutput" scoped="" ref="0x40480518"/>
        <function-ref name="get" scoped="" ref="0x404805f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404806d8"/>
        <function-ref name="set" scoped="" ref="0x404807b8"/>
        <function-ref name="clr" scoped="" ref="0x40480898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4047b2f0" loc="64:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4047b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4047b5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4047b688"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b768"/>
        <function-ref name="get" scoped="" ref="0x4047b848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b928"/>
        <function-ref name="set" scoped="" ref="0x4047ba08"/>
        <function-ref name="clr" scoped="" ref="0x4047bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40470590" loc="42:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40470590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470768"/>
        <function-ref name="isInput" scoped="" ref="0x40470848"/>
        <function-ref name="toggle" scoped="" ref="0x40470928"/>
        <function-ref name="isOutput" scoped="" ref="0x40470a08"/>
        <function-ref name="get" scoped="" ref="0x40470ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470bc8"/>
        <function-ref name="set" scoped="" ref="0x40470ca8"/>
        <function-ref name="clr" scoped="" ref="0x40470d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40476c88" loc="53:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40476c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476e60"/>
        <function-ref name="isInput" scoped="" ref="0x40475010"/>
        <function-ref name="toggle" scoped="" ref="0x404750f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404751d0"/>
        <function-ref name="get" scoped="" ref="0x404752b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40475390"/>
        <function-ref name="set" scoped="" ref="0x40475470"/>
        <function-ref name="clr" scoped="" ref="0x40475550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40494190" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40494190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40494378"/>
        <function-ref name="isInput" scoped="" ref="0x40494458"/>
        <function-ref name="toggle" scoped="" ref="0x40494538"/>
        <function-ref name="isOutput" scoped="" ref="0x40494618"/>
        <function-ref name="get" scoped="" ref="0x404946f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404947d8"/>
        <function-ref name="set" scoped="" ref="0x404948b8"/>
        <function-ref name="clr" scoped="" ref="0x40494998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404a6a70" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404a6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a6c58"/>
        <function-ref name="isInput" scoped="" ref="0x404a6d38"/>
        <function-ref name="toggle" scoped="" ref="0x404a6e18"/>
        <function-ref name="isOutput" scoped="" ref="0x404a6ef8"/>
        <function-ref name="get" scoped="" ref="0x404a5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a50f0"/>
        <function-ref name="set" scoped="" ref="0x404a51d0"/>
        <function-ref name="clr" scoped="" ref="0x404a52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404ae2b8" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404ae2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae4a0"/>
        <function-ref name="isInput" scoped="" ref="0x404ae580"/>
        <function-ref name="toggle" scoped="" ref="0x404ae660"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae740"/>
        <function-ref name="get" scoped="" ref="0x404ae820"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae900"/>
        <function-ref name="set" scoped="" ref="0x404ae9e0"/>
        <function-ref name="clr" scoped="" ref="0x404aeac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404aaaf8" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404aaaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aace0"/>
        <function-ref name="isInput" scoped="" ref="0x404aadc0"/>
        <function-ref name="toggle" scoped="" ref="0x404aaea0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5010"/>
        <function-ref name="get" scoped="" ref="0x404b50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b51d0"/>
        <function-ref name="set" scoped="" ref="0x404b52b0"/>
        <function-ref name="clr" scoped="" ref="0x404b5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404b2440" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404b2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2628"/>
        <function-ref name="isInput" scoped="" ref="0x404b2708"/>
        <function-ref name="toggle" scoped="" ref="0x404b27e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b28c8"/>
        <function-ref name="get" scoped="" ref="0x404b29a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2a88"/>
        <function-ref name="set" scoped="" ref="0x404b2b68"/>
        <function-ref name="clr" scoped="" ref="0x404b2c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404bbc68" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404bbc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bbe50"/>
        <function-ref name="isInput" scoped="" ref="0x404ba010"/>
        <function-ref name="toggle" scoped="" ref="0x404ba0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ba1d0"/>
        <function-ref name="get" scoped="" ref="0x404ba2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ba390"/>
        <function-ref name="set" scoped="" ref="0x404ba470"/>
        <function-ref name="clr" scoped="" ref="0x404ba550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404b65c8" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404b65c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b67b0"/>
        <function-ref name="isInput" scoped="" ref="0x404b6890"/>
        <function-ref name="toggle" scoped="" ref="0x404b6970"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6a50"/>
        <function-ref name="get" scoped="" ref="0x404b6b30"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6c10"/>
        <function-ref name="set" scoped="" ref="0x404b6cf0"/>
        <function-ref name="clr" scoped="" ref="0x404b6dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x404d5438" loc="18:/opt/tinyos/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x404d5438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5610"/>
        <function-ref name="isInput" scoped="" ref="0x404d56f0"/>
        <function-ref name="toggle" scoped="" ref="0x404d57d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d58b0"/>
        <function-ref name="get" scoped="" ref="0x404d5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5a70"/>
        <function-ref name="set" scoped="" ref="0x404d5b50"/>
        <function-ref name="clr" scoped="" ref="0x404d5c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x404e7980" loc="34:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404e7980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404e7b58"/>
        <function-ref name="stopDone" scoped="" ref="0x404e7c38"/>
        <function-ref name="start" scoped="" ref="0x404e7d18"/>
        <function-ref name="stop" scoped="" ref="0x404e7df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x404e9860" loc="37:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404e9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e9a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x404f1ab0" loc="57:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x404f1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f1c88"/>
        <function-ref name="runTask" scoped="" ref="0x404f1d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x404f4388" loc="46:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x404f4388"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f4560"/>
        <function-ref name="runTask" scoped="" ref="0x404f4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x404f3708" loc="35:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x404f3708"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x404f38e0"/>
        <function-ref name="disable" scoped="" ref="0x404f39c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x404f3aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x404f3b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x404f3dc8" loc="36:/opt/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x404f3dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9010"/>
        <function-ref name="isInput" scoped="" ref="0x404e90f0"/>
        <function-ref name="toggle" scoped="" ref="0x404e91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e92b0"/>
        <function-ref name="get" scoped="" ref="0x404e9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9470"/>
        <function-ref name="set" scoped="" ref="0x404e9550"/>
        <function-ref name="clr" scoped="" ref="0x404e9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x40502758" loc="35:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x40502758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40502930"/>
        <function-ref name="disable" scoped="" ref="0x40502a10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40502af0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40502bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40502d90" loc="36:/opt/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40502d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501010"/>
        <function-ref name="isInput" scoped="" ref="0x405010f0"/>
        <function-ref name="toggle" scoped="" ref="0x405011d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405012b0"/>
        <function-ref name="get" scoped="" ref="0x40501390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40501470"/>
        <function-ref name="set" scoped="" ref="0x40501550"/>
        <function-ref name="clr" scoped="" ref="0x40501630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x404fe010" loc="37:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x404fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x404fe1e8"/>
        <function-ref name="disable" scoped="" ref="0x404fe2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x404fe3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x404fe488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x40505428" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40505428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40505600"/>
        <function-ref name="fired" scoped="" ref="0x405056e0"/>
        <function-ref name="disable" scoped="" ref="0x405057c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x405058a0"/>
        <function-ref name="reset" scoped="" ref="0x40505980"/>
        <function-ref name="setMask" scoped="" ref="0x40505a60"/>
        <function-ref name="enable" scoped="" ref="0x40505b40"/>
        <function-ref name="getPins" scoped="" ref="0x40505c20"/>
        <function-ref name="getMask" scoped="" ref="0x40505d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x40518eb8" loc="51:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40518eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x404fc0c0"/>
        <function-ref name="fired" scoped="" ref="0x404fc1a0"/>
        <function-ref name="disable" scoped="" ref="0x404fc280"/>
        <function-ref name="isEnabled" scoped="" ref="0x404fc360"/>
        <function-ref name="reset" scoped="" ref="0x404fc440"/>
        <function-ref name="setMask" scoped="" ref="0x404fc520"/>
        <function-ref name="enable" scoped="" ref="0x404fc600"/>
        <function-ref name="getPins" scoped="" ref="0x404fc6e0"/>
        <function-ref name="getMask" scoped="" ref="0x404fc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x404fc9b8" loc="52:/opt/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x404fc9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x404fcba0"/>
        <function-ref name="disable" scoped="" ref="0x404fcc80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x404fcd60"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x404fce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405250e0" loc="46:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405250e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405252b8"/>
        <function-ref name="stopDone" scoped="" ref="0x40525398"/>
        <function-ref name="start" scoped="" ref="0x40525478"/>
        <function-ref name="stop" scoped="" ref="0x40525558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40535be0" loc="47:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40535be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40535db8"/>
        <function-ref name="getPayload" scoped="" ref="0x40535e98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40524010"/>
        <function-ref name="cancel" scoped="" ref="0x405240f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405241d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40541010" loc="49:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40541010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405411e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405412c8"/>
        <function-ref name="getPayload" scoped="" ref="0x405413a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40541488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40541568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40523100" loc="48:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40523100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405232d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40547548" loc="53:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40547548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40547720"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40547800"/>
        <function-ref name="led1On" scoped="" ref="0x405478e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405479c0"/>
        <function-ref name="led3Off" scoped="" ref="0x40547aa0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40547b80"/>
        <function-ref name="get" scoped="" ref="0x40547c60"/>
        <function-ref name="led1Off" scoped="" ref="0x40547d40"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40547e20"/>
        <function-ref name="led3On" scoped="" ref="0x40547f00"/>
        <function-ref name="led0On" scoped="" ref="0x40549010"/>
        <function-ref name="led2Off" scoped="" ref="0x405490f0"/>
        <function-ref name="led2On" scoped="" ref="0x405491d0"/>
        <function-ref name="set" scoped="" ref="0x40549330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40547010" loc="51:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40547010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405471e8"/>
        <function-ref name="noAck" scoped="" ref="0x405472c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x405473a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4054cdf8" loc="50:/opt/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4054cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4053e010"/>
        <function-ref name="source" scoped="" ref="0x4053e0f0"/>
        <function-ref name="address" scoped="" ref="0x4053e1d0"/>
        <function-ref name="destination" scoped="" ref="0x4053e2b0"/>
        <function-ref name="setSource" scoped="" ref="0x4053e390"/>
        <function-ref name="setDestination" scoped="" ref="0x4053e470"/>
        <function-ref name="type" scoped="" ref="0x4053e550"/>
        <function-ref name="setType" scoped="" ref="0x4053e630"/>
        <function-ref name="isForMe" scoped="" ref="0x4053e710"/>
        <function-ref name="setGroup" scoped="" ref="0x4053e7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4053e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4058ced0" loc="54:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4058ced0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4058b0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x4058b1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058b280"/>
        <function-ref name="cancel" scoped="" ref="0x4058b360"/>
        <function-ref name="sendDone" scoped="" ref="0x4058b440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4058b5a0" loc="55:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4058b5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058b778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40553be8" loc="47:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40553be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40553dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40553eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40552010"/>
        <function-ref name="cancel" scoped="" ref="0x405520f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405521d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4058c310" loc="50:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4058c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058c4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4058c5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4058c6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058c788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4058c868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405523a8" loc="48:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405523a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40552590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4058c9a8" loc="51:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058c9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4058cb80"/>
        <function-ref name="noAck" scoped="" ref="0x4058cc60"/>
        <function-ref name="wasAcked" scoped="" ref="0x4058cd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405526d0" loc="49:/opt/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405526d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405528a8"/>
        <function-ref name="source" scoped="" ref="0x40552988"/>
        <function-ref name="address" scoped="" ref="0x40552a68"/>
        <function-ref name="destination" scoped="" ref="0x40552b48"/>
        <function-ref name="setSource" scoped="" ref="0x40552c28"/>
        <function-ref name="setDestination" scoped="" ref="0x40552d08"/>
        <function-ref name="type" scoped="" ref="0x40552de8"/>
        <function-ref name="setType" scoped="" ref="0x40552ec8"/>
        <function-ref name="isForMe" scoped="" ref="0x4058c010"/>
        <function-ref name="setGroup" scoped="" ref="0x4058c0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4058c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4058ad08" loc="50:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4058ad08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4058aee0"/>
        <function-ref name="stopDone" scoped="" ref="0x40587010"/>
        <function-ref name="start" scoped="" ref="0x405870f0"/>
        <function-ref name="stop" scoped="" ref="0x405871d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40587c20" loc="52:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40587c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40587df8"/>
        <function-ref name="getPayload" scoped="" ref="0x40587ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40595010"/>
        <function-ref name="cancel" scoped="" ref="0x405950f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405951d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4058a970" loc="49:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4058a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4058ab48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40587618" loc="51:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40587618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405877f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40591840" loc="56:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40591840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40591a18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40591af8"/>
        <function-ref name="led1On" scoped="" ref="0x40591bd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40591cb8"/>
        <function-ref name="led3Off" scoped="" ref="0x40591d98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40591e78"/>
        <function-ref name="get" scoped="" ref="0x40594010"/>
        <function-ref name="led1Off" scoped="" ref="0x405940f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405941d0"/>
        <function-ref name="led3On" scoped="" ref="0x405942b0"/>
        <function-ref name="led0On" scoped="" ref="0x40594390"/>
        <function-ref name="led2Off" scoped="" ref="0x40594470"/>
        <function-ref name="led2On" scoped="" ref="0x40594550"/>
        <function-ref name="set" scoped="" ref="0x405946b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40591338" loc="55:/opt/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40591338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40591510"/>
        <function-ref name="offset" scoped="" ref="0x405915f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x405916d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4059f0f8" loc="66:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4059f0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4059f2d0"/>
        <function-ref name="stopDone" scoped="" ref="0x4059f3b0"/>
        <function-ref name="start" scoped="" ref="0x4059f490"/>
        <function-ref name="stop" scoped="" ref="0x4059f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x405e77a0" loc="332:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x405e77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e7978"/>
        <function-ref name="runTask" scoped="" ref="0x405e7a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x405b2760" loc="74:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x405b2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405b2938"/>
        <function-ref name="stop" scoped="" ref="0x405b2a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x405c3b28" loc="191:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x405c3b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405c3d00"/>
        <function-ref name="runTask" scoped="" ref="0x405c3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405a0d48" loc="65:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405a0d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405a0f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x405b1740" loc="75:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x405b1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x405b1918"/>
        <function-ref name="flush" scoped="" ref="0x405b19f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x405e8010" loc="322:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x405e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e81e8"/>
        <function-ref name="runTask" scoped="" ref="0x405e82c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x405b5e88" loc="72:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x405b5e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x405a8070"/>
        <function-ref name="resetSend" scoped="" ref="0x405a8150"/>
        <function-ref name="dataReceived" scoped="" ref="0x405a8230"/>
        <function-ref name="resetReceive" scoped="" ref="0x405a8310"/>
        <function-ref name="putData" scoped="" ref="0x405a83f0"/>
        <function-ref name="putDone" scoped="" ref="0x405a84d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x405a85b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405a8720" loc="73:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405a8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405a88f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405a89d8"/>
        <function-ref name="led1On" scoped="" ref="0x405a8ab8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405a8b98"/>
        <function-ref name="led3Off" scoped="" ref="0x405a8c78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405a8d58"/>
        <function-ref name="get" scoped="" ref="0x405a8e38"/>
        <function-ref name="led1Off" scoped="" ref="0x405a8f18"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405a7010"/>
        <function-ref name="led3On" scoped="" ref="0x405a70f0"/>
        <function-ref name="led0On" scoped="" ref="0x405a71d0"/>
        <function-ref name="led2Off" scoped="" ref="0x405a72b0"/>
        <function-ref name="led2On" scoped="" ref="0x405a7390"/>
        <function-ref name="set" scoped="" ref="0x405a74f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x405e4428" loc="341:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x405e4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e4600"/>
        <function-ref name="runTask" scoped="" ref="0x405e46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x405ab7f8" loc="67:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x405ab7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x405ab9d0"/>
        <function-ref name="nextByte" scoped="" ref="0x405abab0"/>
        <function-ref name="startSend" scoped="" ref="0x405abb90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x405abc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x405a9bd8" loc="68:/opt/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405a9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x405a9db0"/>
        <function-ref name="byteReceived" scoped="" ref="0x405a9e90"/>
        <function-ref name="endPacket" scoped="" ref="0x405ad010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x4065cdb0" loc="275:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x4065cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4065b010"/>
        <function-ref name="runTask" scoped="" ref="0x4065b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4064c710" loc="51:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4064c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4064c8f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4064c9d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4064cab8"/>
        <function-ref name="cancel" scoped="" ref="0x4064cb98"/>
        <function-ref name="sendDone" scoped="" ref="0x4064cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x4065b270" loc="158:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x4065b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4065b448"/>
        <function-ref name="runTask" scoped="" ref="0x4065b528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4064c350" loc="50:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4064c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4064c538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x4064cea0" loc="54:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x4064cea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e65d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4065d0c0"/>
        <function-ref name="offset" scoped="" ref="0x4065d1a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4065d280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4065de50" loc="57:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4065de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4065c050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4065c130"/>
        <function-ref name="led1On" scoped="" ref="0x4065c210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4065c2f0"/>
        <function-ref name="led3Off" scoped="" ref="0x4065c3d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4065c4b0"/>
        <function-ref name="get" scoped="" ref="0x4065c590"/>
        <function-ref name="led1Off" scoped="" ref="0x4065c670"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4065c750"/>
        <function-ref name="led3On" scoped="" ref="0x4065c830"/>
        <function-ref name="led0On" scoped="" ref="0x4065c910"/>
        <function-ref name="led2Off" scoped="" ref="0x4065c9f0"/>
        <function-ref name="led2On" scoped="" ref="0x4065cad0"/>
        <function-ref name="set" scoped="" ref="0x4065cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x4065d898" loc="56:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4065d898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4065da70"/>
        <function-ref name="nextByte" scoped="" ref="0x4065db50"/>
        <function-ref name="startSend" scoped="" ref="0x4065dc30"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4065dd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4065d3c0" loc="55:/opt/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4065d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4065d598"/>
        <function-ref name="byteReceived" scoped="" ref="0x4065d678"/>
        <function-ref name="endPacket" scoped="" ref="0x4065d758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x406639e8" loc="50:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406639e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40663bc0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40663ca0"/>
        <function-ref name="receive" scoped="" ref="0x40663d80"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40663e60"/>
        <function-ref name="receiveDone" scoped="" ref="0x40656010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406560f0"/>
        <function-ref name="sendDone" scoped="" ref="0x406561d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x4065a710" loc="48:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x4065a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x4065a8e8"/>
        <function-ref name="resetSend" scoped="" ref="0x4065a9c8"/>
        <function-ref name="dataReceived" scoped="" ref="0x4065aaa8"/>
        <function-ref name="resetReceive" scoped="" ref="0x4065ab88"/>
        <function-ref name="putData" scoped="" ref="0x4065ac68"/>
        <function-ref name="putDone" scoped="" ref="0x4065ad48"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x4065ae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40656340" loc="51:/opt/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40656340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40656518"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406565f8"/>
        <function-ref name="led1On" scoped="" ref="0x406566d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406567b8"/>
        <function-ref name="led3Off" scoped="" ref="0x40656898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40656978"/>
        <function-ref name="get" scoped="" ref="0x40656a58"/>
        <function-ref name="led1Off" scoped="" ref="0x40656b38"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40656c18"/>
        <function-ref name="led3On" scoped="" ref="0x40656cf8"/>
        <function-ref name="led0On" scoped="" ref="0x40656dd8"/>
        <function-ref name="led2Off" scoped="" ref="0x40656eb8"/>
        <function-ref name="led2On" scoped="" ref="0x40655010"/>
        <function-ref name="set" scoped="" ref="0x40655170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406788f0" loc="42:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406788f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40678ac8"/>
        <function-ref name="receive" scoped="" ref="0x40678ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40659a88" loc="41:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40659a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40659c60"/>
        <function-ref name="receivedByte" scoped="" ref="0x40659d40"/>
        <function-ref name="receive" scoped="" ref="0x40659e20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40659f00"/>
        <function-ref name="receiveDone" scoped="" ref="0x4067b010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4067b0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4067b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40659608" loc="40:/opt/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40659608"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406597e0"/>
        <function-ref name="stop" scoped="" ref="0x406598c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x4067a798" loc="41:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4067a798"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4067a970"/>
        <function-ref name="receive" scoped="" ref="0x4067aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4067ac18" loc="42:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4067ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4067adf0"/>
        <function-ref name="receivedByte" scoped="" ref="0x4067aed0"/>
        <function-ref name="receive" scoped="" ref="0x40675010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406750f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406751d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406752b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40675390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406853f8" loc="43:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406853f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40685b48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40674048"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40685dc0"/>
        <function-ref name="overflow" scoped="" ref="0x406742c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4067a328" loc="40:/opt/tinyos/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4067a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4067a500"/>
        <function-ref name="stop" scoped="" ref="0x4067a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40673ae8" loc="50:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40673ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40673cc0"/>
        <function-ref name="receive" scoped="" ref="0x40673da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x406847b0" loc="53:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x406847b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40684988"/>
        <function-ref name="stop" scoped="" ref="0x40684a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40673398" loc="48:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40673398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40673570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40673f00" loc="51:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40673f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406840f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x406841d0"/>
        <function-ref name="receive" scoped="" ref="0x406842b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40684390"/>
        <function-ref name="receiveDone" scoped="" ref="0x40684470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40684550"/>
        <function-ref name="sendDone" scoped="" ref="0x40684630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406adc88" loc="56:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406adc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406ac3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406ac8e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ac668"/>
        <function-ref name="overflow" scoped="" ref="0x406acb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x406ad050" loc="55:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x406ad050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406ad228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406ad308"/>
        <function-ref name="rxDone" scoped="" ref="0x406ad3e8"/>
        <function-ref name="txDone" scoped="" ref="0x406ad4c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406ad5a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406ad688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406ad768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406ad848"/>
        <function-ref name="tx" scoped="" ref="0x406ad928"/>
        <function-ref name="rx" scoped="" ref="0x406ada08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406736d0" loc="49:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406736d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406738a8"/>
        <function-ref name="stop" scoped="" ref="0x40673988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40684be8" loc="54:/opt/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40684be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40684dc0"/>
        <function-ref name="stop" scoped="" ref="0x40684ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406c10b8" loc="49:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406c10b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406c1290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406c1370"/>
        <function-ref name="rxDone" scoped="" ref="0x406c1450"/>
        <function-ref name="txDone" scoped="" ref="0x406c1530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406c1610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406c16f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406c17d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406c18b0"/>
        <function-ref name="tx" scoped="" ref="0x406c1990"/>
        <function-ref name="rx" scoped="" ref="0x406c1a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x406c0760" loc="53:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x406c0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406c0938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406c0a18"/>
        <function-ref name="rxDone" scoped="" ref="0x406c0af8"/>
        <function-ref name="txDone" scoped="" ref="0x406c0bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406c0cb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406c0d98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406c0e78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406bf010"/>
        <function-ref name="tx" scoped="" ref="0x406bf0f0"/>
        <function-ref name="rx" scoped="" ref="0x406bf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406aeb98" loc="48:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406aeb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406aed70"/>
        <function-ref name="stop" scoped="" ref="0x406aee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406c1cc8" loc="51:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406c1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c1ea0"/>
        <function-ref name="stop" scoped="" ref="0x406c0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x406c0268" loc="52:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x406c0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c0440"/>
        <function-ref name="stop" scoped="" ref="0x406c0520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406ae688" loc="47:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406ae688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406ae860"/>
        <function-ref name="stop" scoped="" ref="0x406ae940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x406bf9f8" loc="114:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x406bf9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406bfbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406bc8c0" loc="117:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406bc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406bca98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406bcb78"/>
        <function-ref name="rxDone" scoped="" ref="0x406bcc58"/>
        <function-ref name="txDone" scoped="" ref="0x406bcd38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406bce18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406bcef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406bb010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406bb0f0"/>
        <function-ref name="tx" scoped="" ref="0x406bb1d0"/>
        <function-ref name="rx" scoped="" ref="0x406bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406b8010" loc="124:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406b81e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x406bb4c0" loc="119:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x406bb4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406bb698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x406b9390" loc="122:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x406b9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406b9568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406b9648"/>
        <function-ref name="rxDone" scoped="" ref="0x406b9728"/>
        <function-ref name="txDone" scoped="" ref="0x406b9808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406b98e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406b99c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406b9aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406b9b88"/>
        <function-ref name="tx" scoped="" ref="0x406b9c68"/>
        <function-ref name="rx" scoped="" ref="0x406b9d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406bc3a8" loc="116:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406bc3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bc580"/>
        <function-ref name="stop" scoped="" ref="0x406bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406bb910" loc="120:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406bb910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bbae8"/>
        <function-ref name="stop" scoped="" ref="0x406bbbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x406bbe40" loc="121:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x406bbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406b9050"/>
        <function-ref name="stop" scoped="" ref="0x406b9130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x406b83e0" loc="126:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x406b83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x406b85b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x406b8698"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x406b8778"/>
        <function-ref name="actualMicro" scoped="" ref="0x406b8858"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x406b8938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x406b8b20" loc="127:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x406b8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x406b8cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406bfe48" loc="115:/opt/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406bfe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bc050"/>
        <function-ref name="stop" scoped="" ref="0x406bc130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4040be50" loc="47:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4040be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4040e050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4040d218" loc="48:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4040d218"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403283d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403283d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4040d3f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4040d4d0"/>
        <function-ref name="led1On" scoped="" ref="0x4040d5b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4040d690"/>
        <function-ref name="led3Off" scoped="" ref="0x4040d770"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4040d850"/>
        <function-ref name="get" scoped="" ref="0x4040d930"/>
        <function-ref name="led1Off" scoped="" ref="0x4040da10"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4040daf0"/>
        <function-ref name="led3On" scoped="" ref="0x4040dbd0"/>
        <function-ref name="led0On" scoped="" ref="0x4040dcb0"/>
        <function-ref name="led2Off" scoped="" ref="0x4040dd90"/>
        <function-ref name="led2On" scoped="" ref="0x4040de70"/>
        <function-ref name="set" scoped="" ref="0x40414010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40332498" loc="43:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40332498"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40332670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4040c1a8" loc="44:/opt/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4040c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4040c380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40676c48" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40676c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406ff3b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406ff8a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ff628"/>
        <function-ref name="overflow" scoped="" ref="0x406ffb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407176f8" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407176f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40717e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40716350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407160d8"/>
        <function-ref name="overflow" scoped="" ref="0x407165c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406fd490" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406fd490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d288"/>
            <typename><typedef-ref name="TMicro" ref="0x4043d450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fdbe0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40717110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406fde58"/>
        <function-ref name="overflow" scoped="" ref="0x40717388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407153e8" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407153e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40715b38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40711048"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40715db0"/>
        <function-ref name="overflow" scoped="" ref="0x407112c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4070fb60" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4070fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4070d308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4070d7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4070d580"/>
        <function-ref name="overflow" scoped="" ref="0x4070da70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40710918" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40710918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4070f088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4070f578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4070f300"/>
        <function-ref name="overflow" scoped="" ref="0x4070f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40722b60" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40722b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4071f308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4071f7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4071f580"/>
        <function-ref name="overflow" scoped="" ref="0x4071fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4071c010" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4071c010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4071c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4071c448" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4071c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40446060"/>
            <typename><typedef-ref name="TMcu" ref="0x40446410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4071cb98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407380a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4071ce10"/>
        <function-ref name="overflow" scoped="" ref="0x40738320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x407385f0" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x407385f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40735068"/>
        <function-ref name="test" scoped="" ref="0x407373e8"/>
        <function-ref name="get" scoped="" ref="0x40738c38"/>
        <function-ref name="reset" scoped="" ref="0x40737660"/>
        <function-ref name="getMode" scoped="" ref="0x40735308"/>
        <function-ref name="overflow" scoped="" ref="0x40737170"/>
        <function-ref name="isOn" scoped="" ref="0x40737dc8"/>
        <function-ref name="set" scoped="" ref="0x40738eb0"/>
        <function-ref name="start" scoped="" ref="0x407378d8"/>
        <function-ref name="stop" scoped="" ref="0x40737b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4074e1d8" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4074e1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4073cc68"/>
        <function-ref name="test" scoped="" ref="0x4073c010"/>
        <function-ref name="fired" scoped="" ref="0x4074ed38"/>
        <function-ref name="get" scoped="" ref="0x4074e820"/>
        <function-ref name="reset" scoped="" ref="0x4073c288"/>
        <function-ref name="getMode" scoped="" ref="0x4073cf08"/>
        <function-ref name="isOn" scoped="" ref="0x4073c9f0"/>
        <function-ref name="set" scoped="" ref="0x4074ea98"/>
        <function-ref name="start" scoped="" ref="0x4073c500"/>
        <function-ref name="stop" scoped="" ref="0x4073c778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40734878" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40734878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407302e0"/>
        <function-ref name="test" scoped="" ref="0x40731668"/>
        <function-ref name="get" scoped="" ref="0x40734ec0"/>
        <function-ref name="reset" scoped="" ref="0x407318e0"/>
        <function-ref name="getMode" scoped="" ref="0x40730580"/>
        <function-ref name="overflow" scoped="" ref="0x407313f0"/>
        <function-ref name="isOn" scoped="" ref="0x40730068"/>
        <function-ref name="set" scoped="" ref="0x40731150"/>
        <function-ref name="start" scoped="" ref="0x40731b58"/>
        <function-ref name="stop" scoped="" ref="0x40731dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40740f08" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40740f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4073f9f0"/>
        <function-ref name="test" scoped="" ref="0x4072ed08"/>
        <function-ref name="fired" scoped="" ref="0x4072ea90"/>
        <function-ref name="force" scoped="" ref="0x4073ff08"/>
        <function-ref name="get" scoped="" ref="0x4072e578"/>
        <function-ref name="reset" scoped="" ref="0x4073f010"/>
        <function-ref name="getMode" scoped="" ref="0x4073fc90"/>
        <function-ref name="isOn" scoped="" ref="0x4073f778"/>
        <function-ref name="set" scoped="" ref="0x4072e7f0"/>
        <function-ref name="start" scoped="" ref="0x4073f288"/>
        <function-ref name="stop" scoped="" ref="0x4073f500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40749b98" loc="42:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40749b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40746600"/>
        <function-ref name="test" scoped="" ref="0x40747990"/>
        <function-ref name="fired" scoped="" ref="0x40747718"/>
        <function-ref name="force" scoped="" ref="0x40746b18"/>
        <function-ref name="get" scoped="" ref="0x40747200"/>
        <function-ref name="reset" scoped="" ref="0x40747c08"/>
        <function-ref name="getMode" scoped="" ref="0x407468a0"/>
        <function-ref name="isOn" scoped="" ref="0x40746388"/>
        <function-ref name="set" scoped="" ref="0x40747478"/>
        <function-ref name="start" scoped="" ref="0x40747e80"/>
        <function-ref name="stop" scoped="" ref="0x40746110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407556a8" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407556a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407531a0"/>
        <function-ref name="test" scoped="" ref="0x40754528"/>
        <function-ref name="fired" scoped="" ref="0x407542b0"/>
        <function-ref name="get" scoped="" ref="0x40755cf0"/>
        <function-ref name="reset" scoped="" ref="0x407547a0"/>
        <function-ref name="getMode" scoped="" ref="0x40753440"/>
        <function-ref name="isOn" scoped="" ref="0x40754f08"/>
        <function-ref name="set" scoped="" ref="0x40754010"/>
        <function-ref name="start" scoped="" ref="0x40754a18"/>
        <function-ref name="stop" scoped="" ref="0x40754c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407536f8" loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407536f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407538d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40746f10" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40746f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407599f0"/>
        <function-ref name="test" scoped="" ref="0x40745d08"/>
        <function-ref name="fired" scoped="" ref="0x40745a90"/>
        <function-ref name="force" scoped="" ref="0x40759f08"/>
        <function-ref name="get" scoped="" ref="0x40745578"/>
        <function-ref name="reset" scoped="" ref="0x40759010"/>
        <function-ref name="getMode" scoped="" ref="0x40759c90"/>
        <function-ref name="isOn" scoped="" ref="0x40759778"/>
        <function-ref name="set" scoped="" ref="0x407457f0"/>
        <function-ref name="start" scoped="" ref="0x40759288"/>
        <function-ref name="stop" scoped="" ref="0x40759500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40753ae8" loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40753ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40753cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40758320" loc="44:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40758320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40757d68"/>
        <function-ref name="test" scoped="" ref="0x40757110"/>
        <function-ref name="fired" scoped="" ref="0x40758e80"/>
        <function-ref name="force" scoped="" ref="0x407552c0"/>
        <function-ref name="get" scoped="" ref="0x40758968"/>
        <function-ref name="reset" scoped="" ref="0x40757388"/>
        <function-ref name="getMode" scoped="" ref="0x40755048"/>
        <function-ref name="isOn" scoped="" ref="0x40757af0"/>
        <function-ref name="set" scoped="" ref="0x40758be0"/>
        <function-ref name="start" scoped="" ref="0x40757600"/>
        <function-ref name="stop" scoped="" ref="0x40757878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4074da80" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4074da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40749500"/>
        <function-ref name="test" scoped="" ref="0x4074a888"/>
        <function-ref name="get" scoped="" ref="0x4074a0f8"/>
        <function-ref name="reset" scoped="" ref="0x4074ab00"/>
        <function-ref name="getMode" scoped="" ref="0x407497a0"/>
        <function-ref name="overflow" scoped="" ref="0x4074a610"/>
        <function-ref name="isOn" scoped="" ref="0x40749288"/>
        <function-ref name="set" scoped="" ref="0x4074a370"/>
        <function-ref name="start" scoped="" ref="0x4074ad78"/>
        <function-ref name="stop" scoped="" ref="0x40749010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40713b78" loc="47:/opt/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40713b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40713d50"/>
        <function-ref name="offset" scoped="" ref="0x40713e30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40713f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x407a4010" loc="43:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a41e8"/>
        <function-ref name="getPayload" scoped="" ref="0x407a42c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407a43a8"/>
        <function-ref name="cancel" scoped="" ref="0x407a4488"/>
        <function-ref name="sendDone" scoped="" ref="0x407a4568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x407a46f0" loc="44:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407a46f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407a48c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407a4a38" loc="45:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407a4a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407a4c10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407a4cf0"/>
        <function-ref name="led1On" scoped="" ref="0x407a4dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407a4eb0"/>
        <function-ref name="led3Off" scoped="" ref="0x407a3010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407a30f0"/>
        <function-ref name="get" scoped="" ref="0x407a31d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407a32b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407a3390"/>
        <function-ref name="led3On" scoped="" ref="0x407a3470"/>
        <function-ref name="led0On" scoped="" ref="0x407a3550"/>
        <function-ref name="led2Off" scoped="" ref="0x407a3630"/>
        <function-ref name="led2On" scoped="" ref="0x407a3710"/>
        <function-ref name="set" scoped="" ref="0x407a3870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x407a2218" loc="54:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x407a2218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407a23f0"/>
        <function-ref name="runTask" scoped="" ref="0x407a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x407a7a28" loc="38:/opt/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x407a7a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x407a7c00"/>
        <function-ref name="offset" scoped="" ref="0x407a7ce0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x407a7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407a6a20" loc="42:/opt/tinyos/tos/platforms/ucmini/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407a6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407a6bf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407a6cd8"/>
        <function-ref name="led1On" scoped="" ref="0x407a6db8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407a6e98"/>
        <function-ref name="led3Off" scoped="" ref="0x407c4010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407c40f0"/>
        <function-ref name="get" scoped="" ref="0x407c41d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407c42b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407c4390"/>
        <function-ref name="led3On" scoped="" ref="0x407c4470"/>
        <function-ref name="led0On" scoped="" ref="0x407c4550"/>
        <function-ref name="led2Off" scoped="" ref="0x407c4630"/>
        <function-ref name="led2On" scoped="" ref="0x407c4710"/>
        <function-ref name="set" scoped="" ref="0x407c4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x407c0480" loc="50:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407c0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c0658"/>
        <function-ref name="isInput" scoped="" ref="0x407c0738"/>
        <function-ref name="toggle" scoped="" ref="0x407c0818"/>
        <function-ref name="isOutput" scoped="" ref="0x407c08f8"/>
        <function-ref name="get" scoped="" ref="0x407c09d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c0ab8"/>
        <function-ref name="set" scoped="" ref="0x407c0b98"/>
        <function-ref name="clr" scoped="" ref="0x407c0c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x407be2e0" loc="53:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x407be2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407be4b8"/>
        <function-ref name="isInput" scoped="" ref="0x407be598"/>
        <function-ref name="toggle" scoped="" ref="0x407be678"/>
        <function-ref name="isOutput" scoped="" ref="0x407be758"/>
        <function-ref name="get" scoped="" ref="0x407be838"/>
        <function-ref name="makeOutput" scoped="" ref="0x407be918"/>
        <function-ref name="set" scoped="" ref="0x407be9f8"/>
        <function-ref name="clr" scoped="" ref="0x407bead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407c1128" loc="46:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407c1128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407c1300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x407c0e68" loc="51:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x407c0e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bf050"/>
        <function-ref name="isInput" scoped="" ref="0x407bf130"/>
        <function-ref name="toggle" scoped="" ref="0x407bf210"/>
        <function-ref name="isOutput" scoped="" ref="0x407bf2f0"/>
        <function-ref name="get" scoped="" ref="0x407bf3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bf4b0"/>
        <function-ref name="set" scoped="" ref="0x407bf590"/>
        <function-ref name="clr" scoped="" ref="0x407bf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407c1470" loc="47:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407c1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407c1648"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407c1728"/>
        <function-ref name="led1On" scoped="" ref="0x407c1808"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407c18e8"/>
        <function-ref name="led3Off" scoped="" ref="0x407c19c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407c1aa8"/>
        <function-ref name="get" scoped="" ref="0x407c1b88"/>
        <function-ref name="led1Off" scoped="" ref="0x407c1c68"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407c1d48"/>
        <function-ref name="led3On" scoped="" ref="0x407c1e28"/>
        <function-ref name="led0On" scoped="" ref="0x407c1f08"/>
        <function-ref name="led2Off" scoped="" ref="0x407c0010"/>
        <function-ref name="led2On" scoped="" ref="0x407c00f0"/>
        <function-ref name="set" scoped="" ref="0x407c0250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x407bf860" loc="52:/opt/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x407bf860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bfa38"/>
        <function-ref name="isInput" scoped="" ref="0x407bfb18"/>
        <function-ref name="toggle" scoped="" ref="0x407bfbf8"/>
        <function-ref name="isOutput" scoped="" ref="0x407bfcd8"/>
        <function-ref name="get" scoped="" ref="0x407bfdb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bfe98"/>
        <function-ref name="set" scoped="" ref="0x407be010"/>
        <function-ref name="clr" scoped="" ref="0x407be0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x407c3c20" loc="39:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407c3c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c3df8"/>
        <function-ref name="isInput" scoped="" ref="0x407c3ed8"/>
        <function-ref name="toggle" scoped="" ref="0x407db010"/>
        <function-ref name="isOutput" scoped="" ref="0x407db0f0"/>
        <function-ref name="get" scoped="" ref="0x407db1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407db2b0"/>
        <function-ref name="set" scoped="" ref="0x407db390"/>
        <function-ref name="clr" scoped="" ref="0x407db470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x407daa48" loc="42:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x407daa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407dac20"/>
        <function-ref name="isInput" scoped="" ref="0x407dad00"/>
        <function-ref name="toggle" scoped="" ref="0x407dade0"/>
        <function-ref name="isOutput" scoped="" ref="0x407daec0"/>
        <function-ref name="get" scoped="" ref="0x407d9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d90f0"/>
        <function-ref name="set" scoped="" ref="0x407d91d0"/>
        <function-ref name="clr" scoped="" ref="0x407d92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x407db660" loc="40:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x407db660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407db838"/>
        <function-ref name="isInput" scoped="" ref="0x407db918"/>
        <function-ref name="toggle" scoped="" ref="0x407db9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x407dbad8"/>
        <function-ref name="get" scoped="" ref="0x407dbbb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407dbc98"/>
        <function-ref name="set" scoped="" ref="0x407dbd78"/>
        <function-ref name="clr" scoped="" ref="0x407dbe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x407d9450" loc="45:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407d9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d9628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x407da060" loc="41:/opt/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x407da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407da238"/>
        <function-ref name="isInput" scoped="" ref="0x407da318"/>
        <function-ref name="toggle" scoped="" ref="0x407da3f8"/>
        <function-ref name="isOutput" scoped="" ref="0x407da4d8"/>
        <function-ref name="get" scoped="" ref="0x407da5b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407da698"/>
        <function-ref name="set" scoped="" ref="0x407da778"/>
        <function-ref name="clr" scoped="" ref="0x407da858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x407d4508" loc="60:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x407d4508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4041f778" loc="57:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4041f778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4041f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x407d4100" loc="59:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x407d4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d42d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4041fb10" loc="58:/opt/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4041fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041fce8"/>
        <function-ref name="taskLoop" scoped="" ref="0x4041fdc8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4041fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4038a330" loc="48:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4038a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4038a508"/>
        <function-ref name="runTask" scoped="" ref="0x4038a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4032fb58" loc="47:/opt/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4032fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4032fd30"/>
        <function-ref name="taskLoop" scoped="" ref="0x4032fe10"/>
        <function-ref name="runNextTask" scoped="" ref="0x4032fef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403f8010" loc="56:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403f81e8"/>
        <function-ref name="runTask" scoped="" ref="0x403f82c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403f8c68" loc="57:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403f8c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403f8e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403f9738" loc="55:/opt/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403f9738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f9910"/>
        <function-ref name="taskLoop" scoped="" ref="0x403f99f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403f9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4040fa38" loc="3:UerC.nc">
      <component-ref qname="UerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4040fa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4040fc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4040fda0" loc="4:UerC.nc">
      <component-ref qname="UerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4040fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407e6010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407e60f0"/>
        <function-ref name="led1On" scoped="" ref="0x407e61d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407e62b0"/>
        <function-ref name="led3Off" scoped="" ref="0x407e6390"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407e6470"/>
        <function-ref name="get" scoped="" ref="0x407e6550"/>
        <function-ref name="led1Off" scoped="" ref="0x407e6630"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407e6710"/>
        <function-ref name="led3On" scoped="" ref="0x407e67f0"/>
        <function-ref name="led0On" scoped="" ref="0x407e68d0"/>
        <function-ref name="led2Off" scoped="" ref="0x407e69b0"/>
        <function-ref name="led2On" scoped="" ref="0x407e6a90"/>
        <function-ref name="set" scoped="" ref="0x407e6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ESP8266" ref="0x407f4928" loc="6:UerC.nc">
      <component-ref qname="UerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ESP8266" scoped="" ref="0x407f4928"/></type-interface>
      <instance>
        <interfacedef-ref qname="ESP8266"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x407f4b00"/>
        <function-ref name="init" scoped="" ref="0x407f4be0"/>
        <function-ref name="mode" scoped="" ref="0x407f4cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x407de760" loc="5:UerC.nc">
      <component-ref qname="UerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407de760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407f7330"/>
        <function-ref name="fired" scoped="" ref="0x407e5520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407e5c28"/>
        <function-ref name="isOneShot" scoped="" ref="0x407e59d0"/>
        <function-ref name="getdt" scoped="" ref="0x407f77e0"/>
        <function-ref name="gett0" scoped="" ref="0x407f7588"/>
        <function-ref name="isRunning" scoped="" ref="0x407e5778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407ded88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407f7010"/>
        <function-ref name="startOneShot" scoped="" ref="0x407e5048"/>
        <function-ref name="stop" scoped="" ref="0x407e52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ESP8266" ref="0x40422908" loc="5:ESP8266C.nc">
      <component-ref qname="ESP8266C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ESP8266" scoped="" ref="0x40422908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ESP8266"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x40422ae0"/>
        <function-ref name="init" scoped="" ref="0x40422bc0"/>
        <function-ref name="mode" scoped="" ref="0x40422ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ESP_CON_AP" ref="0x40800708" loc="16:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ESP_CON_AP" scoped="" ref="0x40800708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407fe248"/>
        <function-ref name="fired" scoped="" ref="0x407ff4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407ffbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x407ff998"/>
        <function-ref name="getdt" scoped="" ref="0x407fe6f8"/>
        <function-ref name="gett0" scoped="" ref="0x407fe4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x407ff740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40800d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407fff10"/>
        <function-ref name="startOneShot" scoped="" ref="0x407ff010"/>
        <function-ref name="stop" scoped="" ref="0x407ff290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x4080e590" loc="22:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x4080e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4080e768"/>
        <function-ref name="stop" scoped="" ref="0x4080e848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ESP_RESET" ref="0x407eb010" loc="14:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ESP_RESET" scoped="" ref="0x407eb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40804b00"/>
        <function-ref name="fired" scoped="" ref="0x407ebd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408044c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40804268"/>
        <function-ref name="getdt" scoped="" ref="0x40803010"/>
        <function-ref name="gett0" scoped="" ref="0x40804d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40804010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407eb638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408047e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x407eb8b8"/>
        <function-ref name="stop" scoped="" ref="0x407ebb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ESP_MODE_1" ref="0x408033b0" loc="15:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ESP_MODE_1" scoped="" ref="0x408033b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40802e98"/>
        <function-ref name="fired" scoped="" ref="0x40802150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40802858"/>
        <function-ref name="isOneShot" scoped="" ref="0x40802600"/>
        <function-ref name="getdt" scoped="" ref="0x40800368"/>
        <function-ref name="gett0" scoped="" ref="0x40800110"/>
        <function-ref name="isRunning" scoped="" ref="0x408023a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408039d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40802b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40803c58"/>
        <function-ref name="stop" scoped="" ref="0x40803ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ESP_SENDING" ref="0x407fbea8" loc="18:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ESP_SENDING" scoped="" ref="0x407fbea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407f99a8"/>
        <function-ref name="fired" scoped="" ref="0x407fac40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407f9368"/>
        <function-ref name="isOneShot" scoped="" ref="0x407f9110"/>
        <function-ref name="getdt" scoped="" ref="0x407f9e58"/>
        <function-ref name="gett0" scoped="" ref="0x407f9c00"/>
        <function-ref name="isRunning" scoped="" ref="0x407fae98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407fa4e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407f9688"/>
        <function-ref name="startOneShot" scoped="" ref="0x407fa768"/>
        <function-ref name="stop" scoped="" ref="0x407fa9e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ESP_SERVER" ref="0x407fea98" loc="17:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ESP_SERVER" scoped="" ref="0x407fea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407fb650"/>
        <function-ref name="fired" scoped="" ref="0x407fd830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407fb010"/>
        <function-ref name="isOneShot" scoped="" ref="0x407fdce0"/>
        <function-ref name="getdt" scoped="" ref="0x407fbb00"/>
        <function-ref name="gett0" scoped="" ref="0x407fb8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x407fda88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407fd0d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407fb330"/>
        <function-ref name="startOneShot" scoped="" ref="0x407fd358"/>
        <function-ref name="stop" scoped="" ref="0x407fd5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x4080e9f0" loc="23:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4080e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4080ebc8"/>
        <function-ref name="receivedByte" scoped="" ref="0x4080eca8"/>
        <function-ref name="receive" scoped="" ref="0x4080ed88"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4080ee68"/>
        <function-ref name="receiveDone" scoped="" ref="0x4080d010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4080d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4080d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4080f4a8" loc="20:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4080f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4080f680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4080f760"/>
        <function-ref name="led1On" scoped="" ref="0x4080f840"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4080f920"/>
        <function-ref name="led3Off" scoped="" ref="0x4080fa00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4080fae0"/>
        <function-ref name="get" scoped="" ref="0x4080fbc0"/>
        <function-ref name="led1Off" scoped="" ref="0x4080fca0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4080fd80"/>
        <function-ref name="led3On" scoped="" ref="0x4080fe60"/>
        <function-ref name="led0On" scoped="" ref="0x4080e010"/>
        <function-ref name="led2Off" scoped="" ref="0x4080e0f0"/>
        <function-ref name="led2On" scoped="" ref="0x4080e1d0"/>
        <function-ref name="set" scoped="" ref="0x4080e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AT_REV_COMP" ref="0x4081e908" loc="82:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AT_REV_COMP" scoped="" ref="0x4081e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4081eae0"/>
        <function-ref name="runTask" scoped="" ref="0x4081ebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ESP8266" ref="0x407f15a0" loc="11:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ESP8266" scoped="" ref="0x407f15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ESP8266"/>
      </instance>
      <interface-functions>
        <function-ref name="initDone" scoped="" ref="0x407f1778"/>
        <function-ref name="init" scoped="" ref="0x407f1858"/>
        <function-ref name="mode" scoped="" ref="0x407f1938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ESP_SEND_PRESENT" ref="0x40811278" loc="19:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ESP_SEND_PRESENT" scoped="" ref="0x40811278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40810d58"/>
        <function-ref name="fired" scoped="" ref="0x40810010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40810718"/>
        <function-ref name="isOneShot" scoped="" ref="0x408104c0"/>
        <function-ref name="getdt" scoped="" ref="0x4080f268"/>
        <function-ref name="gett0" scoped="" ref="0x4080f010"/>
        <function-ref name="isRunning" scoped="" ref="0x40810268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408118a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40810a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40811b20"/>
        <function-ref name="stop" scoped="" ref="0x40811da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ESP_INIT" ref="0x407f1c28" loc="13:ESP8266P.nc">
      <component-ref qname="ESP8266P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ESP_INIT" scoped="" ref="0x407f1c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407ed730"/>
        <function-ref name="fired" scoped="" ref="0x407ee9d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407ed0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x407eee80"/>
        <function-ref name="getdt" scoped="" ref="0x407edbe0"/>
        <function-ref name="gett0" scoped="" ref="0x407ed988"/>
        <function-ref name="isRunning" scoped="" ref="0x407eec28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407ee278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407ed410"/>
        <function-ref name="startOneShot" scoped="" ref="0x407ee4f8"/>
        <function-ref name="stop" scoped="" ref="0x407ee778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4085f0a0" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="ESP8266C.ESP_INIT"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4085f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4085ab88"/>
        <function-ref name="fired" scoped="" ref="0x4085fe20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4085a548"/>
        <function-ref name="isOneShot" scoped="" ref="0x4085a2f0"/>
        <function-ref name="getdt" scoped="" ref="0x40985048"/>
        <function-ref name="gett0" scoped="" ref="0x4085ade0"/>
        <function-ref name="isRunning" scoped="" ref="0x4085a098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4085f6c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4085a868"/>
        <function-ref name="startOneShot" scoped="" ref="0x4085f948"/>
        <function-ref name="stop" scoped="" ref="0x4085fbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40859018" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40859018"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40857b00"/>
        <function-ref name="fired" scoped="" ref="0x40859d98"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408574c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40857268"/>
        <function-ref name="getdt" scoped="" ref="0x40856010"/>
        <function-ref name="gett0" scoped="" ref="0x40857d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40857010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40859640"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408577e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x408598c0"/>
        <function-ref name="stop" scoped="" ref="0x40859b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40855750" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40855750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40854c18"/>
        <function-ref name="fired" scoped="" ref="0x408543e8"/>
        <function-ref name="startAt" scoped="" ref="0x408548d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40854660"/>
        <function-ref name="getAlarm" scoped="" ref="0x40854e90"/>
        <function-ref name="start" scoped="" ref="0x40855ea0"/>
        <function-ref name="stop" scoped="" ref="0x40854170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a4bd18" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a4bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a491e8"/>
        <function-ref name="fired" scoped="" ref="0x40a4a990"/>
        <function-ref name="startAt" scoped="" ref="0x40a4ae80"/>
        <function-ref name="isRunning" scoped="" ref="0x40a4ac08"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a49460"/>
        <function-ref name="start" scoped="" ref="0x40a4a478"/>
        <function-ref name="stop" scoped="" ref="0x40a4a718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x40a5d7c8" loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x40a5d7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40a5b288"/>
        <function-ref name="test" scoped="" ref="0x40a5c5c0"/>
        <function-ref name="fired" scoped="" ref="0x40a5c348"/>
        <function-ref name="force" scoped="" ref="0x40a5b7a0"/>
        <function-ref name="get" scoped="" ref="0x40a5de10"/>
        <function-ref name="reset" scoped="" ref="0x40a5c838"/>
        <function-ref name="getMode" scoped="" ref="0x40a5b528"/>
        <function-ref name="isOn" scoped="" ref="0x40a5b010"/>
        <function-ref name="set" scoped="" ref="0x40a5c0a8"/>
        <function-ref name="start" scoped="" ref="0x40a5cab0"/>
        <function-ref name="stop" scoped="" ref="0x40a5cd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a62d38" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a62d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a60208"/>
        <function-ref name="fired" scoped="" ref="0x40a619b0"/>
        <function-ref name="startAt" scoped="" ref="0x40a61ea0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a61c28"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a60480"/>
        <function-ref name="start" scoped="" ref="0x40a61498"/>
        <function-ref name="stop" scoped="" ref="0x40a61738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a62900" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a62900"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a62ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40a60750" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40a60750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40a5d288"/>
        <function-ref name="test" scoped="" ref="0x40a5f560"/>
        <function-ref name="get" scoped="" ref="0x40a60d98"/>
        <function-ref name="reset" scoped="" ref="0x40a5f7d8"/>
        <function-ref name="getMode" scoped="" ref="0x40a5d528"/>
        <function-ref name="overflow" scoped="" ref="0x40a5f2e8"/>
        <function-ref name="isOn" scoped="" ref="0x40a5d010"/>
        <function-ref name="set" scoped="" ref="0x40a5f048"/>
        <function-ref name="start" scoped="" ref="0x40a5fa50"/>
        <function-ref name="stop" scoped="" ref="0x40a5fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40897cd0" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40897cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40892778"/>
        <function-ref name="test" scoped="" ref="0x40894ac0"/>
        <function-ref name="get" scoped="" ref="0x40894330"/>
        <function-ref name="reset" scoped="" ref="0x40894d38"/>
        <function-ref name="getMode" scoped="" ref="0x40892a18"/>
        <function-ref name="overflow" scoped="" ref="0x40894848"/>
        <function-ref name="isOn" scoped="" ref="0x40892500"/>
        <function-ref name="set" scoped="" ref="0x408945a8"/>
        <function-ref name="start" scoped="" ref="0x40892010"/>
        <function-ref name="stop" scoped="" ref="0x40892288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x4088e490" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x4088e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4088dee0"/>
        <function-ref name="test" scoped="" ref="0x4088d288"/>
        <function-ref name="fired" scoped="" ref="0x4088d010"/>
        <function-ref name="get" scoped="" ref="0x4088ead8"/>
        <function-ref name="reset" scoped="" ref="0x4088d500"/>
        <function-ref name="getMode" scoped="" ref="0x4088b1c0"/>
        <function-ref name="isOn" scoped="" ref="0x4088dc68"/>
        <function-ref name="set" scoped="" ref="0x4088ed50"/>
        <function-ref name="start" scoped="" ref="0x4088d778"/>
        <function-ref name="stop" scoped="" ref="0x4088d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40891100" loc="42:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40891100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40890b50"/>
        <function-ref name="test" scoped="" ref="0x40891ed8"/>
        <function-ref name="fired" scoped="" ref="0x40891c60"/>
        <function-ref name="force" scoped="" ref="0x4088e088"/>
        <function-ref name="get" scoped="" ref="0x40891748"/>
        <function-ref name="reset" scoped="" ref="0x40890170"/>
        <function-ref name="getMode" scoped="" ref="0x40890df0"/>
        <function-ref name="isOn" scoped="" ref="0x408908d8"/>
        <function-ref name="set" scoped="" ref="0x408919c0"/>
        <function-ref name="start" scoped="" ref="0x408903e8"/>
        <function-ref name="stop" scoped="" ref="0x40890660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x408a3e88" loc="42:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x408a3e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408a0908"/>
        <function-ref name="test" scoped="" ref="0x408a2c88"/>
        <function-ref name="fired" scoped="" ref="0x408a2a10"/>
        <function-ref name="force" scoped="" ref="0x408a0e20"/>
        <function-ref name="get" scoped="" ref="0x408a24f8"/>
        <function-ref name="reset" scoped="" ref="0x408a2f00"/>
        <function-ref name="getMode" scoped="" ref="0x408a0ba8"/>
        <function-ref name="isOn" scoped="" ref="0x408a0690"/>
        <function-ref name="set" scoped="" ref="0x408a2770"/>
        <function-ref name="start" scoped="" ref="0x408a01a0"/>
        <function-ref name="stop" scoped="" ref="0x408a0418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x408b3a90" loc="46:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x408b3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x408b3c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4089f248" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4089f248"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4089eca0"/>
        <function-ref name="test" scoped="" ref="0x4089e048"/>
        <function-ref name="fired" scoped="" ref="0x4089fda8"/>
        <function-ref name="force" scoped="" ref="0x4089c288"/>
        <function-ref name="get" scoped="" ref="0x4089f890"/>
        <function-ref name="reset" scoped="" ref="0x4089e2c0"/>
        <function-ref name="getMode" scoped="" ref="0x4089c010"/>
        <function-ref name="isOn" scoped="" ref="0x4089ea28"/>
        <function-ref name="set" scoped="" ref="0x4089fb08"/>
        <function-ref name="start" scoped="" ref="0x4089e538"/>
        <function-ref name="stop" scoped="" ref="0x4089e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4088bd48" loc="41:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4088bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408a37f0"/>
        <function-ref name="test" scoped="" ref="0x408a4b70"/>
        <function-ref name="get" scoped="" ref="0x408a43e0"/>
        <function-ref name="reset" scoped="" ref="0x408a4de8"/>
        <function-ref name="getMode" scoped="" ref="0x408a3a90"/>
        <function-ref name="overflow" scoped="" ref="0x408a48f8"/>
        <function-ref name="isOn" scoped="" ref="0x408a3578"/>
        <function-ref name="set" scoped="" ref="0x408a4658"/>
        <function-ref name="start" scoped="" ref="0x408a3088"/>
        <function-ref name="stop" scoped="" ref="0x408a3300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x408b3e80" loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x408b3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x408b2070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x4089aac0" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x4089aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408b3538"/>
        <function-ref name="test" scoped="" ref="0x408998b0"/>
        <function-ref name="fired" scoped="" ref="0x40899638"/>
        <function-ref name="get" scoped="" ref="0x40899120"/>
        <function-ref name="reset" scoped="" ref="0x40899b28"/>
        <function-ref name="getMode" scoped="" ref="0x408b37d8"/>
        <function-ref name="isOn" scoped="" ref="0x408b32c0"/>
        <function-ref name="set" scoped="" ref="0x40899398"/>
        <function-ref name="start" scoped="" ref="0x40899da0"/>
        <function-ref name="stop" scoped="" ref="0x408b3048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4089c680" loc="44:/opt/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4089c680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4089a1a0"/>
        <function-ref name="test" scoped="" ref="0x4089b528"/>
        <function-ref name="fired" scoped="" ref="0x4089b2b0"/>
        <function-ref name="force" scoped="" ref="0x4089a6b8"/>
        <function-ref name="get" scoped="" ref="0x4089ccc8"/>
        <function-ref name="reset" scoped="" ref="0x4089b7a0"/>
        <function-ref name="getMode" scoped="" ref="0x4089a440"/>
        <function-ref name="isOn" scoped="" ref="0x4089bf08"/>
        <function-ref name="set" scoped="" ref="0x4089b010"/>
        <function-ref name="start" scoped="" ref="0x4089ba18"/>
        <function-ref name="stop" scoped="" ref="0x4089bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408f3e30" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408f3e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408f0590"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408f0a80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408f0808"/>
        <function-ref name="overflow" scoped="" ref="0x408f0cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408efd70" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408efd70"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403287d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403287d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408ee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408ee270" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408ee270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ee9c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408eeeb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408eec38"/>
        <function-ref name="overflow" scoped="" ref="0x4090a150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4090a420" loc="45:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4090a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40909ee0"/>
        <function-ref name="test" scoped="" ref="0x40909288"/>
        <function-ref name="get" scoped="" ref="0x4090aa68"/>
        <function-ref name="reset" scoped="" ref="0x40909500"/>
        <function-ref name="getMode" scoped="" ref="0x409081c0"/>
        <function-ref name="overflow" scoped="" ref="0x40909010"/>
        <function-ref name="isOn" scoped="" ref="0x40909c68"/>
        <function-ref name="set" scoped="" ref="0x4090ace0"/>
        <function-ref name="start" scoped="" ref="0x40909778"/>
        <function-ref name="stop" scoped="" ref="0x409099f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x409055f8" loc="39:/opt/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409055f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40905d48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40902288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40902010"/>
        <function-ref name="overflow" scoped="" ref="0x40902500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x408ffde0" loc="63:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x408ffde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408fe570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408fea60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408fe7e8"/>
        <function-ref name="overflow" scoped="" ref="0x408fecd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40901b70" loc="62:/opt/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40901b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ff308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408ff7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408ff580"/>
        <function-ref name="overflow" scoped="" ref="0x408ffa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a486b8" loc="61:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a486b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a46b80"/>
        <function-ref name="fired" scoped="" ref="0x40a46350"/>
        <function-ref name="startAt" scoped="" ref="0x40a46840"/>
        <function-ref name="isRunning" scoped="" ref="0x40a465c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a46df8"/>
        <function-ref name="start" scoped="" ref="0x40a48e08"/>
        <function-ref name="stop" scoped="" ref="0x40a460d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40a673b8" loc="73:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40a673b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40446818"/>
            <typename><typedef-ref name="T62khz" ref="0x404469c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a66878"/>
        <function-ref name="fired" scoped="" ref="0x40a66048"/>
        <function-ref name="startAt" scoped="" ref="0x40a66538"/>
        <function-ref name="isRunning" scoped="" ref="0x40a662c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a66af0"/>
        <function-ref name="start" scoped="" ref="0x40a67b08"/>
        <function-ref name="stop" scoped="" ref="0x40a67da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a68180" loc="68:/opt/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a68180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a688d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a68dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a68b48"/>
        <function-ref name="overflow" scoped="" ref="0x40a67048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40939298" loc="74:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40939298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40939470"/>
        <function-ref name="runTask" scoped="" ref="0x40939550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4093b8d8" loc="49:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4093b8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4093ad90"/>
        <function-ref name="fired" scoped="" ref="0x4093a560"/>
        <function-ref name="startAt" scoped="" ref="0x4093aa50"/>
        <function-ref name="isRunning" scoped="" ref="0x4093a7d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40939048"/>
        <function-ref name="start" scoped="" ref="0x4093a048"/>
        <function-ref name="stop" scoped="" ref="0x4093a2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409345d8" loc="48:/opt/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409345d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4093b0d8"/>
        <function-ref name="fired" scoped="" ref="0x4093d368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4093da70"/>
        <function-ref name="isOneShot" scoped="" ref="0x4093d818"/>
        <function-ref name="getdt" scoped="" ref="0x4093b588"/>
        <function-ref name="gett0" scoped="" ref="0x4093b330"/>
        <function-ref name="isRunning" scoped="" ref="0x4093d5c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40934c00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4093dd90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40934e80"/>
        <function-ref name="stop" scoped="" ref="0x4093d110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40968050" loc="71:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40968050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40968228"/>
        <function-ref name="runTask" scoped="" ref="0x40968308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4096ce30" loc="49:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4096ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40969920"/>
        <function-ref name="fired" scoped="" ref="0x4096bbc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409692e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40969088"/>
        <function-ref name="getdt" scoped="" ref="0x40969dd0"/>
        <function-ref name="gett0" scoped="" ref="0x40969b78"/>
        <function-ref name="isRunning" scoped="" ref="0x4096be18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4096b468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40969600"/>
        <function-ref name="startOneShot" scoped="" ref="0x4096b6e8"/>
        <function-ref name="stop" scoped="" ref="0x4096b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40953a60" loc="48:/opt/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40953a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4096c670"/>
        <function-ref name="fired" scoped="" ref="0x4096e840"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4096c010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4096ed10"/>
        <function-ref name="getdt" scoped="" ref="0x4096cb40"/>
        <function-ref name="gett0" scoped="" ref="0x4096c8d8"/>
        <function-ref name="isRunning" scoped="" ref="0x4096eaa8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4096e0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4096c340"/>
        <function-ref name="startOneShot" scoped="" ref="0x4096e348"/>
        <function-ref name="stop" scoped="" ref="0x4096e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40985e20" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="ESP8266C.ESP_RESET"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40985e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40983920"/>
        <function-ref name="fired" scoped="" ref="0x40984bc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409832e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40983088"/>
        <function-ref name="getdt" scoped="" ref="0x40983dd0"/>
        <function-ref name="gett0" scoped="" ref="0x40983b78"/>
        <function-ref name="isRunning" scoped="" ref="0x40984e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40984468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40983600"/>
        <function-ref name="startOneShot" scoped="" ref="0x409846e8"/>
        <function-ref name="stop" scoped="" ref="0x40984968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40982bf8" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="ESP8266C.ESP_MODE_1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40982bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4097f730"/>
        <function-ref name="fired" scoped="" ref="0x409819b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4097f0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40981e60"/>
        <function-ref name="getdt" scoped="" ref="0x4097fbe0"/>
        <function-ref name="gett0" scoped="" ref="0x4097f988"/>
        <function-ref name="isRunning" scoped="" ref="0x40981c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40981258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4097f410"/>
        <function-ref name="startOneShot" scoped="" ref="0x409814d8"/>
        <function-ref name="stop" scoped="" ref="0x40981758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4097eab0" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="ESP8266C.ESP_CON_AP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4097eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4097c650"/>
        <function-ref name="fired" scoped="" ref="0x4097d858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4097c010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4097dd08"/>
        <function-ref name="getdt" scoped="" ref="0x4097cb00"/>
        <function-ref name="gett0" scoped="" ref="0x4097c8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4097dab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4097d100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4097c330"/>
        <function-ref name="startOneShot" scoped="" ref="0x4097d380"/>
        <function-ref name="stop" scoped="" ref="0x4097d600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4097a8f0" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="ESP8266C.ESP_SERVER"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4097a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409783f8"/>
        <function-ref name="fired" scoped="" ref="0x40979688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40979d90"/>
        <function-ref name="isOneShot" scoped="" ref="0x40979b38"/>
        <function-ref name="getdt" scoped="" ref="0x409788a8"/>
        <function-ref name="gett0" scoped="" ref="0x40978650"/>
        <function-ref name="isRunning" scoped="" ref="0x409798e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4097af18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409780d8"/>
        <function-ref name="startOneShot" scoped="" ref="0x409791b0"/>
        <function-ref name="stop" scoped="" ref="0x40979430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409776f8" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="ESP8266C.ESP_SENDING"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409776f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40994248"/>
        <function-ref name="fired" scoped="" ref="0x409764e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40976bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40976998"/>
        <function-ref name="getdt" scoped="" ref="0x409946f8"/>
        <function-ref name="gett0" scoped="" ref="0x409944a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40976740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40977d20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40976f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40976010"/>
        <function-ref name="stop" scoped="" ref="0x40976290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409935a8" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="ESP8266C.ESP_SEND_PRESENT"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409935a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409910d8"/>
        <function-ref name="fired" scoped="" ref="0x40992368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40992a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40992818"/>
        <function-ref name="getdt" scoped="" ref="0x40991588"/>
        <function-ref name="gett0" scoped="" ref="0x40991330"/>
        <function-ref name="isRunning" scoped="" ref="0x409925c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40993bd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40992d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40993e50"/>
        <function-ref name="stop" scoped="" ref="0x40992110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4098a4c8" loc="45:/opt/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="UerAppC.T1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4098a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043e928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043eaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40988010"/>
        <function-ref name="fired" scoped="" ref="0x40989268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40989970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40989718"/>
        <function-ref name="getdt" scoped="" ref="0x409884c0"/>
        <function-ref name="gett0" scoped="" ref="0x40988268"/>
        <function-ref name="isRunning" scoped="" ref="0x409894c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4098aaf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40989c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4098ad70"/>
        <function-ref name="stop" scoped="" ref="0x40989010"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404289d0" loc="62:/opt/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40421dd0" loc="60:/opt/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4042db40" loc="60:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4042d9e8" loc="60:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x40424158" loc="31:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40424790" loc="39:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40424638" loc="39:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40424e58" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40424d00" loc="46:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4042d440" loc="53:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4046c010" loc="44:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4046c3f8" loc="45:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4046d838" loc="42:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4046cbc8" loc="47:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4046dbf8" loc="43:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4046c7d0" loc="46:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4046d0f8" loc="40:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4046d488" loc="41:/opt/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404e8738" loc="113:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404e85e0" loc="113:/opt/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404e7730" loc="138:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404e75d8" loc="138:/opt/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404ebee8" loc="104:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404e8c48" loc="130:/opt/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40333888" loc="67:/opt/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40333da0" loc="75:/opt/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x404f3478" loc="68:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x404f3018" loc="61:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x404eabf0" loc="54:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x404ea688" loc="53:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x40507538" loc="43:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40507158" loc="40:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x405060c8" loc="54:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x405064d8" loc="57:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405078f0" loc="46:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x40506e48" loc="65:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40506cf0" loc="65:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40507cc0" loc="51:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x405052c0" loc="70:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x405068f8" loc="62:/opt/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40538378" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40539de8" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40538030" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40538210" loc="80:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40535010" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40534bd0" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40534db0" loc="135:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40534670" loc="123:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40536058" loc="96:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40538ec0" loc="96:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40536d48" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405369f0" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40536be8" loc="110:/opt/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40523b98" loc="65:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40523a40" loc="65:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4053b580" loc="78:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053b428" loc="78:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40548508" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405481a8" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40548388" loc="126:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4053cba0" loc="106:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4053c208" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053bea0" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4053c0a8" loc="94:/opt/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40524ea8" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
              <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40524960" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40524b40" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40524d20" loc="78:/opt/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
      <documentation loc="33:/opt/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40412438" loc="63:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="60:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40412880" loc="69:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="65:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40412d00" loc="74:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="71:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40411580" loc="85:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="81:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x40419b40" loc="113:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="110:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40419298" loc="102:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="98:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404184b8" loc="134:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="122:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40411138" loc="79:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="76:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40418010" loc="119:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="115:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x40419718" loc="108:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="105:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40412010" loc="58:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="55:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40411e28" loc="96:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="93:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40411a00" loc="91:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="88:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40418c30" loc="149:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="137:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40418ad8" loc="149:/opt/tinyos/tos/platforms/ucmini/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40556398" loc="59:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40556240" loc="59:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40556e90" loc="71:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40556d38" loc="71:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40555950" loc="85:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405557f8" loc="85:/opt/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4054b648" loc="177:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054b4f0" loc="177:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40544010" loc="88:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40545e20" loc="88:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40541e80" loc="68:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40545578" loc="78:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40545420" loc="78:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405428f8" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40542590" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40542798" loc="121:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40544bf8" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40544890" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40544a98" loc="103:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404d9a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4054e010" loc="147:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054fea0" loc="147:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4054eb48" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054e818" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4054e9e8" loc="162:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404d95c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4054f4c0" loc="136:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054f368" loc="136:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4054c370" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054c010" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4054c210" loc="187:/opt/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4054cbe8" loc="195:/opt/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404d9818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4055ee88" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055eb48" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4055ed28" loc="75:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4055aa18" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055a6b8" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4055a898" loc="125:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4055a158" loc="112:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4055bb38" loc="89:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055b9e0" loc="89:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40559820" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405594c8" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405596c0" loc="100:/opt/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40592d28" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40592998" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40592bc8" loc="31:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40595a78" loc="15:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40592388" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40592010" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4053abb0"/>
                <typename><typedef-ref name="message_t" ref="0x40539950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40592228" loc="23:/opt/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x405a7e58" loc="95:/opt/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405b23c0" loc="105:/opt/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x405b1590" loc="54:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x405b1158" loc="49:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x405ad9a8" loc="56:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x405b6698" loc="72:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x405b5790" loc="94:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405b5638" loc="94:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x405b6bc0" loc="79:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x405b6168" loc="65:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405b6010" loc="65:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x405b5c98" loc="100:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x405b5138" loc="85:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x405ac798" loc="71:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x405acd60" loc="81:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x405ac188" loc="62:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x405ac030" loc="62:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x405ab4c0" loc="91:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405ab368" loc="91:/opt/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x405ae8a0" loc="62:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x405a9168" loc="69:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405a9010" loc="69:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x405a9800" loc="80:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x405a96a8" loc="80:/opt/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40657940" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406575f0" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406577e0" loc="48:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40665cf0" loc="79:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40665b98" loc="79:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40664530" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406641e0" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406643d0" loc="90:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40665158" loc="65:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x406633c8" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40664e58" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40663068" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40663260" loc="99:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x406656e0" loc="72:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406667f0" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406662a0" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40666490" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401ea1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40666688" loc="57:/opt/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4067ba68" loc="46:/opt/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4067b910" loc="46:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40678378" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40678010" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40678218" loc="56:/opt/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40675b78" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40675b78"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40675ce0" loc="57:/opt/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40675ce0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406721d8" loc="64:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40675ce0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40672c00" loc="76:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40672700" loc="71:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40685018" loc="82:/opt/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x4067d720" loc="44:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40680eb8" loc="42:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x4067cd08" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4067cbb0" loc="49:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x4067c408" loc="47:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40680640" loc="40:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40680a80" loc="41:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x4067d320" loc="43:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40334340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x4067db20" loc="45:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x4067c058" loc="46:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4067ded0" loc="46:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x4067c7d8" loc="48:/opt/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4040baf0" loc="62:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403e7470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40332ec8" loc="52:/opt/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403f8a90" loc="76:/opt/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40719d10" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40719d10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4072a490" loc="72:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4072a338" loc="72:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4072b010" loc="53:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4072c230" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40719d10"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4072b3c8" loc="56:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4072a8a0" loc="75:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4072cb58" loc="49:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4072bf20" loc="67:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4072c770" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40719d10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4072c618" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40719d10"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4072b790" loc="61:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4072bb40" loc="64:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4073e470" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073e470"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40739ae0" loc="70:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40739988" loc="70:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4073a668" loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4073a288" loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4073e968" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073e470"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4073aa20" loc="54:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40739ef0" loc="73:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40739588" loc="65:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4073eea8" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073e470"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4073ed50" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073e470"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4073ade8" loc="59:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407391a8" loc="62:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40730ac8" loc="35:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40730ac8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40740188" loc="70:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40740030" loc="70:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40742cf8" loc="51:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40742918" loc="48:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x40740960" loc="78:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40742010" loc="40:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40730ac8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407410c8" loc="54:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40740598" loc="73:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40741c20" loc="65:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40742550" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40730ac8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x407423f8" loc="43:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40730ac8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40741490" loc="59:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40741840" loc="62:/opt/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4032f010" loc="57:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4032f918" loc="72:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4032f450" loc="65:/opt/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ESP8266" loc="1:ESP8266.nc">
      <function event="" provided="0" name="initDone" ref="0x407f47c0" loc="4:ESP8266.nc">
        <interfacedef-ref qname="ESP8266"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x407f7ed0" loc="2:ESP8266.nc">
        <interfacedef-ref qname="ESP8266"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="mode" ref="0x407f4418" loc="3:ESP8266.nc">
        <interfacedef-ref qname="ESP8266"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x407f42c0" loc="3:ESP8266.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407e3308" loc="53:/opt/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407e3308"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x407dfa28" loc="136:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407e2890" loc="83:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x407e0a00" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x407e06b8" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x407e08a0" loc="114:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x407e0210" loc="98:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x407de3e8" loc="151:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x407dfe70" loc="144:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x407e2d20" loc="92:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x407e3960" loc="64:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407e3808" loc="64:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x407df408" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x407df0c0" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x407df2a8" loc="129:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x407e2010" loc="73:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407e3ea0" loc="73:/opt/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401ea848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407e24e0" loc="78:/opt/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40856e58" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40856e58"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4086c010" loc="56:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086c010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40869310" loc="109:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086c010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4086b010" loc="78:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4086bcb0" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086c010"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086c010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4086b960" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086c010"/></type-var>
          </variable>
          <variable name="dt" ref="0x4086bb50" loc="103:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086c010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4086b458" loc="88:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403246e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x408697a0" loc="116:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086c010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4086c640" loc="66:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086c010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4086c4e8" loc="66:/opt/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4086c010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4086cb20" loc="73:/opt/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
