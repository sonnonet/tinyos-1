<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="10:YggdrasilAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x407fa010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40427078"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40427078"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40428c30"/></to>
    </wire>
    <wire loc="11:YggdrasilAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407fa358"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407c0470"/></to>
    </wire>
    <wire loc="12:YggdrasilAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40806780"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40421da0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40421da0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40816e90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:YggdrasilAppC.nc">
      <from><interface-ref name="BaseControl" scoped="" ref="0x40810b40"/></from>
      <to><interface-ref name="BaseControl" scoped="" ref="0x40945eb0"/></to>
    </wire>
    <wire loc="17:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="BaseControl" scoped="" ref="0x40945eb0"/></from>
      <to><interface-ref name="BaseControl" scoped="" ref="0x40942c38"/></to>
    </wire>
    <wire loc="139:YggdrasilAppC.nc">
      <from><interface-ref name="DisseminateControl" scoped="" ref="0x40805b40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41103188"/></to>
    </wire>
    <wire loc="16:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x41103188"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4113cc98"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416ee628"/></to>
    </wire>
    <wire loc="63:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4169c9f0"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4164d938"/></to>
    </wire>
    <wire loc="46:./net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4158dd18"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4159de00"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41557648"/></to>
    </wire>
    <wire loc="113:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40d8a768"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cd8b40"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4147a938"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c1a178"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4144a7b8"/></to>
    </wire>
    <wire loc="96:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413d5010"/></to>
    </wire>
    <wire loc="141:./net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410ae5b0"/></to>
    </wire>
    <wire loc="166:./net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ee7700"/></to>
    </wire>
    <wire loc="209:./net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f83340"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x406bd9f8"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x406b94c0"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40672398"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40589978"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404e8860"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x407d3010"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4032cb58"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4032cb58"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403f8738"/></to>
    </wire>
    <wire loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407d35d8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40d8a108"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x407d35d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4041f510"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4041f510"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40429a48"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x407d39e0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042cd98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40455960"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404255b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d8450"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x40432238"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x404255b8"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x40429e38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40424610"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40424610"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40445e00"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x40432608"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40465010"/></to>
    </wire>
    <wire loc="40:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x40465010"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40465850"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40424a18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4152a130"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40424a18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408b9d70"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40424a18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41353470"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40424a18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4071b010"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40442628"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x40424a18"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404429d8"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x40424dc8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x40442da0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x4044e248"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40442260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404555b0"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Toggle" scoped="" ref="0x4046bda0"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x40468688"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x40468688"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40482c08"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x404691d0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404788e0"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404788e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x40469bd8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x404d4438"/></to>
    </wire>
    <wire loc="145:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40482c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4048d2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40485830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4048aea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404900a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40496830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404794b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40486c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4047d0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40483750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40488ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40470120"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40476750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4047cea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40480670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x4048fea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404973d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4048ba98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4046e010"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40474750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4048dee8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x4047fc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404842f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404898e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40490a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x40479ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404772f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4047da98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x40482210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40487750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40470b18"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40475210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4047b8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4048e8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4047ace8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4048a4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40491670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40497dc8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4046ea08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4047f210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40486210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4047e670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40484ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b5af8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404882f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x4048f4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404bac68"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404736f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40477ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4047c4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4048c900"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404c15c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4048b0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404b1440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4047a2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x4046f590"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40493190"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40475c88"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x404a5a70"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x404f2708"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x40501758"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x40501758"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x404fd010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x404f2dc8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40501d90"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40501d90"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x40475c88"/></to>
    </wire>
    <wire loc="43:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x404f4980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40589d10"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x404f0ab0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x404f3388"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x404fd010"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x405099b8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40525eb8"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40504428"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40589d10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405ae0f8"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40534be0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40552be8"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40545068"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4058b310"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40521100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405513a8"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4053c010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058b9a8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4054bdf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405516d0"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40589978"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4059fd48"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40590840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4053c548"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4058bed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40596c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4058a5a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40596618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40590338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40712b80"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40596c20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4065d710"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40596618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4065d350"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x4065dea0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40590338"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405a7720"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40590840"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4065ce50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40590840"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40655340"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40590840"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4065c3c0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405a8bd8"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x4065c898"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x405aa7f8"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x405b4e88"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40659718"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x405b1760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40658608"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40658608"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40679330"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406629e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40658a88"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40658a88"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40679c20"/></to>
    </wire>
    <wire loc="332:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x405e67a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x405c2b28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x405e7010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x405e3428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x4065bdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x4065a270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406778f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406797a0"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406797a0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40672ae8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40679c20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40672f00"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40679330"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406726d0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40684418"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40675c48"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40675c48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406fb490"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406abc88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40684418"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x406837b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x406bfcc8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x406bfcc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x406b9910"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40683be8"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x406be268"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x406be268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x406b9e40"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x406ab050"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x406be760"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x406be760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x406cb390"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x406bf0b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x406ba8c0"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x406c0b98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x406ba3a8"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x406c0688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x406bde48"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x406ca3e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042cd98"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406cab20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x406cab20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40414e50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40d81d00"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40414e50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40864a90"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40414e50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407526f8"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40414e50"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406ca010"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407166f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407143f0"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407143f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4070f918"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4070eb60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40721b68"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40721b68"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4071b448"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x407375f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40733878"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40733878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4074ca80"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4074d1d8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407546a8"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4073ff08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40748b98"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4073ff08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40745f10"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4073ff08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40757320"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40752ae8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407a3a38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407a3010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40596c20"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407a36f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40596618"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40590338"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x407a6a28"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x407b9218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407d8450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407c0128"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407bf480"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x407c2c20"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x407c2c20"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404898e0"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407bfe68"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x407da660"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x407da660"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x404882f0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407be860"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x407d9060"/></to>
    </wire>
    <wire loc="62:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x407d9060"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x40488ce8"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x407bd2e0"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x407d9a48"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x407d9a48"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x40487750"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403f7010"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403f7c70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403314a0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40816e90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40918600"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40900398"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40829750"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40829750"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4135b240"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4092e968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408f80a0"/></to>
    </wire>
    <wire loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x41359f10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41314868"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41314868"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x413538a8"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4135acd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408cd5f8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408cd5f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408c8b70"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x413502e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4084acd8"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4084acd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40859d50"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x4134e2b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4085f100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x4085c490"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40867ac0"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4085f100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40855e88"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4085f100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4086c248"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4085f100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40869680"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40864e80"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408bde30"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408b8270"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x408b6420"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4084acd8"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x408c7de0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408bde30"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x408ffd08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4092bbc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40961338"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409aa030"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x409aa030"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40816e90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4095f550"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="37:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x4093f3a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409f7060"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409f7060"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a02358"/></to>
    </wire>
    <wire loc="38:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4093e5c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409fdc40"/></to>
    </wire>
    <wire loc="39:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x4093fa80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></to>
    </wire>
    <wire loc="40:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x4093e178"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409c0a28"/></to>
    </wire>
    <wire loc="46:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409c0a28"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409c68e8"/></to>
    </wire>
    <wire loc="42:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4093d270"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410fc9e8"/></to>
    </wire>
    <wire loc="51:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Send" scoped="" ref="0x410fc9e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4162fc68"/></to>
    </wire>
    <wire loc="43:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x40955948"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x410edbf0"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410edbf0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41625670"/></to>
    </wire>
    <wire loc="44:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4093d9a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x409bd250"/>
      <arguments>
        <value cst="I:98">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="AckRev" scoped="" ref="0x4093dd68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:252">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="BaseRev" scoped="" ref="0x4093c200"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:99">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="THRev" scoped="" ref="0x4093c5b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:100">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="TH20Rev" scoped="" ref="0x4093c980"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="PIRRev" scoped="" ref="0x4093cd40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:101">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="POWRev" scoped="" ref="0x4093b118"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:104">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="MAXCO2Rev" scoped="" ref="0x4093bd20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:212">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="CO2Rev" scoped="" ref="0x4093b558"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:102">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="CO2S100Rev" scoped="" ref="0x4093b940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="VOCSRev" scoped="" ref="0x4093a110"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:103">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="ThermoLoggerRev" scoped="" ref="0x4093acd8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:106">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="USRev" scoped="" ref="0x409380b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:105">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="SPlugRev" scoped="" ref="0x40938490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:109">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="SPlug2Rev" scoped="" ref="0x40938870"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="SOLARRev" scoped="" ref="0x4093a4e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:201">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="ETYPERev" scoped="" ref="0x4093a8c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:211">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="MARKERRev" scoped="" ref="0x40938c50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:108">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="DUMMYRev" scoped="" ref="0x40955088"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:250">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x4094c1a0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x409ce010"/></to>
    </wire>
    <wire loc="58:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x409ce010"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x409de8e0"/></to>
    </wire>
    <wire loc="66:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="AMReceive" scoped="" ref="0x40955568"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411133b8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x411133b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409f6320"/>
      <arguments>
        <value cst="I:99">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:./Sensor/99Base/BaseC.nc">
      <from><function-ref name="setAmAddress" scoped="" ref="0x4095e8a8"/></from>
      <to><function-ref name="setAmAddress" scoped="" ref="0x40b27e00"/></to>
    </wire>
    <wire loc="74:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x40962da0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x411103d0"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x411103d0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4164dce0"/></to>
    </wire>
    <wire loc="75:./Sensor/99Base/BaseC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x40948ab8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x4110d6c8"/></to>
    </wire>
    <wire loc="59:./Sensor/99Base/BaseP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x4095ef10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:./Sensor/99Base/BaseP.nc">
      <from><interface-ref name="baseSendTask" scoped="" ref="0x4095c738"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:./net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x409de8e0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x410b16f8"/></to>
    </wire>
    <wire loc="53:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x409bc980"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x409e12d8"/></to>
    </wire>
    <wire loc="111:./net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x409e12d8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40ee47e8"/></to>
    </wire>
    <wire loc="50:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x409baec0"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x409e27a8"/></to>
    </wire>
    <wire loc="108:./net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x409e27a8"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40ee5db8"/></to>
    </wire>
    <wire loc="52:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x409bc240"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409e2b00"/></to>
    </wire>
    <wire loc="109:./net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x409e2b00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ee4150"/></to>
    </wire>
    <wire loc="49:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x409bd250"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x409e2100"/></to>
    </wire>
    <wire loc="107:./net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x409e2100"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40ee59f8"/></to>
    </wire>
    <wire loc="47:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409be178"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409e3028"/></to>
    </wire>
    <wire loc="104:./net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409e3028"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ee7ea8"/></to>
    </wire>
    <wire loc="56:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x409c82d0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x409e0ae0"/></to>
    </wire>
    <wire loc="156:./net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x409e0ae0"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x410b1bd0"/></to>
    </wire>
    <wire loc="48:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409beb88"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409e3a38"/></to>
    </wire>
    <wire loc="106:./net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409e3a38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ee5618"/></to>
    </wire>
    <wire loc="57:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x409b7b68"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x409de478"/></to>
    </wire>
    <wire loc="113:./net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x409de478"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40ee2010"/></to>
    </wire>
    <wire loc="63:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="Talk" scoped="" ref="0x409ceee8"/></from>
      <to><interface-ref name="Talk" scoped="" ref="0x409dede8"/></to>
    </wire>
    <wire loc="211:./net/ctp/CtpP.nc">
      <from><interface-ref name="Talk" scoped="" ref="0x409dede8"/></from>
      <to><interface-ref name="Talk" scoped="" ref="0x40ee2408"/></to>
    </wire>
    <wire loc="54:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x409cfe70"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x409e1ab0"/></to>
    </wire>
    <wire loc="112:./net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x409e1ab0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40ee3010"/></to>
    </wire>
    <wire loc="105:./net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409c68e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ee7a18"/></to>
    </wire>
    <wire loc="138:./net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409c68e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410af850"/></to>
    </wire>
    <wire loc="139:./net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409c68e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f4ea98"/></to>
    </wire>
    <wire loc="60:./net/ctp/CollectionC_sonno.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x409dd638"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x409c7eb0"/></to>
    </wire>
    <wire loc="181:./net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x409d9a58"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40f4d9b8"/></to>
    </wire>
    <wire loc="110:./net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40f0ab40"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x409dd638"/></to>
    </wire>
    <wire loc="117:./net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x40f11958"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40f21e40"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40f21e40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4159b1e0"/></to>
    </wire>
    <wire loc="118:./net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x40f0fee0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40f00950"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40f00950"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x415579f0"/></to>
    </wire>
    <wire loc="121:./net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x40f13db0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40f1c278"/></to>
    </wire>
    <wire loc="124:./net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x40f0d468"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x40f41c48"/></to>
    </wire>
    <wire loc="44:./net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x40f41c48"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x4158c120"/></to>
    </wire>
    <wire loc="129:./net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40f15708"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40f4d9b8"/></to>
    </wire>
    <wire loc="142:./net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x410ae918"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f4ef20"/></to>
    </wire>
    <wire loc="143:./net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x410ad010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f4d618"/></to>
    </wire>
    <wire loc="144:./net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x410ad328"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40f4d9b8"/></to>
    </wire>
    <wire loc="146:./net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x410a6c68"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x40f7e178"/></to>
    </wire>
    <wire loc="148:./net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410adc60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="149:./net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x410ac870"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409f7060"/></to>
    </wire>
    <wire loc="150:./net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x410aced8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f5b680"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f5b680"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40816e90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:./net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x410a81b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f57458"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40f57458"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40816e90"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:./net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40f0b890"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x410b1bd0"/></to>
    </wire>
    <wire loc="155:./net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x410a6870"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40ee2010"/></to>
    </wire>
    <wire loc="160:./net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x40ee1538"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x410db010"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x410db010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40816e90"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:./net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x410a6478"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cd6e98"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40cd6e98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cd3948"/></to>
    </wire>
    <wire loc="164:./net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40f089b0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cd6e98"/></to>
    </wire>
    <wire loc="167:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ee2850"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ff4280"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ff4280"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415c4010"/></to>
    </wire>
    <wire loc="168:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f0b240"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4101c758"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4101c758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409f6320"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x40f0b578"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x410150f8"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x410150f8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x409f69b8"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40f13648"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40ff4918"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ff4918"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x415c46a8"/></to>
    </wire>
    <wire loc="171:./net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40f0a4d0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x410b16f8"/></to>
    </wire>
    <wire loc="172:./net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40f13070"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x410b1140"/></to>
    </wire>
    <wire loc="173:./net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40f08dc8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409f7060"/></to>
    </wire>
    <wire loc="174:./net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ee2ee8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4101ec08"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4101ec08"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x415c2950"/></to>
    </wire>
    <wire loc="175:./net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f0ae68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4101e010"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4101e010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x415c4d40"/></to>
    </wire>
    <wire loc="176:./net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f09a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="183:./net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40f81948"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cd6e98"/></to>
    </wire>
    <wire loc="185:./net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40f7e510"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x410d6360"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410d6360"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415f1238"/></to>
    </wire>
    <wire loc="186:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f81220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x410d33b8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x410d33b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409f6320"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40f829f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x410d69f8"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x410d69f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x415f18d0"/></to>
    </wire>
    <wire loc="188:./net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x40f7ec90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x410d5150"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410d5150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41642010"/></to>
    </wire>
    <wire loc="204:./net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40f815f0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x410cf498"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a02358"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a2a140"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x409f4120"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x409fe3c0"/></to>
    </wire>
    <wire loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x409fe3c0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40a281b0"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x409f7938"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a02c30"/></to>
    </wire>
    <wire loc="82:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40a02c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a2aa18"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x409f69b8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x409ffcd0"/></to>
    </wire>
    <wire loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x409ffcd0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40a29b10"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x409f4478"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409fd550"/></to>
    </wire>
    <wire loc="90:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x409fd550"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40a26110"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x409ed568"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x409fbeb8"/></to>
    </wire>
    <wire loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x409fbeb8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40a1f978"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409f6320"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409ff638"/></to>
    </wire>
    <wire loc="83:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409ff638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a29478"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a06c68"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a11ac8"/></to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a11ac8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a308c0"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409f3850"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409fb930"/></to>
    </wire>
    <wire loc="93:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409fb930"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a1f3f0"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x409f1010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x409fa508"/></to>
    </wire>
    <wire loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x409fa508"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40a1a010"/></to>
    </wire>
    <wire loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x409fdc40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40a27380"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409e8650"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a0d4d0"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a0d4d0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a2e3a0"/></to>
    </wire>
    <wire loc="208:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a2a140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c46ba8"/></to>
    </wire>
    <wire loc="100:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40a18c40"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a33580"/></to>
    </wire>
    <wire loc="297:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40a33580"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40d6cd18"/></to>
    </wire>
    <wire loc="259:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a2e3a0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d1db10"/></to>
    </wire>
    <wire loc="125:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40a281b0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40b1bc28"/></to>
    </wire>
    <wire loc="127:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40a26110"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40b1c5b0"/></to>
    </wire>
    <wire loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40a2aa18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40b1cce0"/></to>
    </wire>
    <wire loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40a29b10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40b1b868"/></to>
    </wire>
    <wire loc="99:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409f88d8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a34218"/></to>
    </wire>
    <wire loc="295:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a34218"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40d6d9b0"/></to>
    </wire>
    <wire loc="209:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40a1f978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40c6a230"/></to>
    </wire>
    <wire loc="123:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a29478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b1b488"/></to>
    </wire>
    <wire loc="258:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a308c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40d41378"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a12ee0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a32cd8"/></to>
    </wire>
    <wire loc="299:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a32cd8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d67c60"/></to>
    </wire>
    <wire loc="98:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a16508"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a1ae18"/></to>
    </wire>
    <wire loc="296:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a1ae18"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40d68520"/></to>
    </wire>
    <wire loc="240:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a1f3f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cc7010"/></to>
    </wire>
    <wire loc="87:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x409feac0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40a288b0"/></to>
    </wire>
    <wire loc="129:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40a288b0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40b1a030"/></to>
    </wire>
    <wire loc="188:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40a1a010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40c52568"/></to>
    </wire>
    <wire loc="126:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40a27380"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40b1d990"/></to>
    </wire>
    <wire loc="96:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40a19e70"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40a1a728"/></to>
    </wire>
    <wire loc="217:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40a1a728"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40c5fdf8"/></to>
    </wire>
    <wire loc="101:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a10ce8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a327e0"/></to>
    </wire>
    <wire loc="298:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a327e0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d67768"/></to>
    </wire>
    <wire loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x409fd1f8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40a27010"/></to>
    </wire>
    <wire loc="130:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40a27010"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40b1a410"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c46ba8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40c6a838"/></to>
    </wire>
    <wire loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40d6cd18"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40d86f08"/></to>
    </wire>
    <wire loc="161:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40a25778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40b9c488"/></to>
    </wire>
    <wire loc="149:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x40a1deb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b2d420"/></to>
    </wire>
    <wire loc="98:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b2d420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4141d350"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40b1bc28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x413bdc28"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40b1cce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413bfce0"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40b1b868"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x413bd868"/></to>
    </wire>
    <wire loc="162:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40a37098"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40c16170"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40c16170"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x4142c950"/></to>
    </wire>
    <wire loc="163:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40a37bf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40b673b0"/></to>
    </wire>
    <wire loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40d6d9b0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40d87b60"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40c6a230"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4147d010"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40b1c5b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413bf5b0"/></to>
    </wire>
    <wire loc="68:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b1b488"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x413bd488"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40d41378"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x414c8ca8"/></to>
    </wire>
    <wire loc="81:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d67c60"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40df98b0"/></to>
    </wire>
    <wire loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40d68520"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40d826c0"/></to>
    </wire>
    <wire loc="159:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40a20ab8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40b67a48"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40b1a030"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x413bc030"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40c52568"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40c4a910"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40c5fdf8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x41478490"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b1d990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413c0938"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d1db10"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x414c94f0"/></to>
    </wire>
    <wire loc="160:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40a25328"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40b9c170"/></to>
    </wire>
    <wire loc="96:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d67768"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d81940"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40b1a410"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x413bc410"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a672c8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40bee658"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40bee658"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x41434f20"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a647b8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a9d348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a662c8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40d41378"/></to>
    </wire>
    <wire loc="106:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x40a608e8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40d6d010"/></to>
    </wire>
    <wire loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40d6d010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40d871c0"/></to>
    </wire>
    <wire loc="111:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a9dc00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d65700"/></to>
    </wire>
    <wire loc="101:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40d65700"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e12ea8"/></to>
    </wire>
    <wire loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b18768"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40a558a8"/></to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b1af20"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40b39538"/></to>
    </wire>
    <wire loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b18430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x40b95748"/></to>
    </wire>
    <wire loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40b1a788"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40b95a80"/></to>
    </wire>
    <wire loc="138:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b38010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b2d420"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b39a60"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x40b95250"/></to>
    </wire>
    <wire loc="154:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b9c7d0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40bee658"/></to>
    </wire>
    <wire loc="155:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b9a9e8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40b96228"/></to>
    </wire>
    <wire loc="156:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b9aee0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40b96720"/></to>
    </wire>
    <wire loc="157:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b9a250"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40b96a58"/></to>
    </wire>
    <wire loc="170:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b9f280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c12388"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c12388"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4144dea0"/></to>
    </wire>
    <wire loc="171:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b9f778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c52250"/></to>
    </wire>
    <wire loc="114:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c52250"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c4c938"/></to>
    </wire>
    <wire loc="172:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40b9fab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c16b88"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c16b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4142b3f0"/></to>
    </wire>
    <wire loc="177:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c15368"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c52c00"/></to>
    </wire>
    <wire loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c52c00"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c4cc70"/></to>
    </wire>
    <wire loc="182:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40c55668"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40a3f600"/></to>
    </wire>
    <wire loc="183:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c12ca8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c53d38"/></to>
    </wire>
    <wire loc="113:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c53d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c4c440"/></to>
    </wire>
    <wire loc="189:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c4a3f8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cc7010"/></to>
    </wire>
    <wire loc="190:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c4c440"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c45250"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c45250"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c6ae10"/></to>
    </wire>
    <wire loc="191:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c4c938"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c45748"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c45748"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c63330"/></to>
    </wire>
    <wire loc="192:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c4cc70"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40c45a60"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c45a60"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c63668"/></to>
    </wire>
    <wire loc="204:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40c6a838"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c5f010"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c5f010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4147a360"/></to>
    </wire>
    <wire loc="205:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40c6ae10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40c5f5e8"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40c5f5e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4147ac70"/></to>
    </wire>
    <wire loc="206:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c63330"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c5fae0"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40c5fae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41478178"/></to>
    </wire>
    <wire loc="207:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40c63668"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40d409f8"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40d409f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x414c5330"/></to>
    </wire>
    <wire loc="214:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ca7ab8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ca39b8"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ca39b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x414a71e8"/></to>
    </wire>
    <wire loc="215:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ca6010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40c12860"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40c12860"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4144a3c0"/></to>
    </wire>
    <wire loc="216:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40ca7340"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40d53548"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40d53548"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40d503d0"/></to>
    </wire>
    <wire loc="221:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40c55250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ca3e90"/></to>
    </wire>
    <wire loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ca3e90"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x414a76c0"/></to>
    </wire>
    <wire loc="230:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40cd4330"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40a5c3f0"/></to>
    </wire>
    <wire loc="231:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ca22f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40cc96b8"/></to>
    </wire>
    <wire loc="232:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ca27e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40cc9b90"/></to>
    </wire>
    <wire loc="233:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40ca2be0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a9d348"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="238:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40cdbe88"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40d3a010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="239:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40cc7e28"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40a9d348"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="241:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40cdb530"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40a43ee0"/></to>
    </wire>
    <wire loc="242:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cc7538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40cf97e8"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40cf97e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40cf56a0"/></to>
    </wire>
    <wire loc="243:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cc7a30"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40cf9cc0"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40cf9cc0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40cf5b98"/></to>
    </wire>
    <wire loc="248:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40cf4bc0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40a41858"/></to>
    </wire>
    <wire loc="249:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40cf56a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40d53cc0"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40d53cc0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d50be8"/></to>
    </wire>
    <wire loc="250:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40cf5b98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40d52230"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40d52230"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d4f170"/></to>
    </wire>
    <wire loc="251:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40cf4010"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40d6fb58"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40d6fb58"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40d88d18"/></to>
    </wire>
    <wire loc="256:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d3f310"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d67c60"/></to>
    </wire>
    <wire loc="257:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d3fb88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40d3a5d8"/></to>
    </wire>
    <wire loc="260:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40d3e338"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40d3a010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="265:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d3ada0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40d6d010"/></to>
    </wire>
    <wire loc="275:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40d4e170"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40a41858"/></to>
    </wire>
    <wire loc="276:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d50be8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40d78230"/></to>
    </wire>
    <wire loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40d78230"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d75090"/></to>
    </wire>
    <wire loc="277:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d4f170"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40d6f708"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40d6f708"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40d888c8"/></to>
    </wire>
    <wire loc="278:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40d503d0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40d79a20"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40d79a20"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40d76840"/></to>
    </wire>
    <wire loc="287:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40d76840"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40d72918"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40d72918"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40d8aae8"/></to>
    </wire>
    <wire loc="288:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d75090"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40d6f1b0"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40d6f1b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40d88370"/></to>
    </wire>
    <wire loc="293:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40d931c8"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40a48c58"/></to>
    </wire>
    <wire loc="294:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40d93a50"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40d41378"/></to>
    </wire>
    <wire loc="301:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40d90280"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40d3a010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="302:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40d90918"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40d3a010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="303:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40d8f010"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40d3a010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40a9d348"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x413cf668"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x413cfe60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a9dc00"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x413cd7d8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40aa8d38"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x413ba070"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b27010"/></to>
    </wire>
    <wire loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x413bc788"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b1a788"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x413bcf20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b1af20"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x413bb430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b18430"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x413bb768"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b18768"/></to>
    </wire>
    <wire loc="99:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b2db60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4141da90"/></to>
    </wire>
    <wire loc="100:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b6a010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4141de98"/></to>
    </wire>
    <wire loc="101:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4141c3a8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b6a4c0"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4141c7d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x413d5348"/></to>
    </wire>
    <wire loc="69:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x4141cdc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4142bb98"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b27010"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4142a250"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40c15368"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x414499e0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40c1f540"/></to>
    </wire>
    <wire loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40c1f540"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40c1a510"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41448150"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41447578"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41447578"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40c19010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4144ab20"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40c12ca8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41449030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40c55250"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x41449428"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40c55668"/></to>
    </wire>
    <wire loc="118:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40c49010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c4a3f8"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x41478998"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40ca7340"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x41477150"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40aa8d38"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x41477708"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ca7ab8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41477be0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ca6010"/></to>
    </wire>
    <wire loc="189:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x41476468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x414768a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x41476030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x414a7b08"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40ca22f0"/></to>
    </wire>
    <wire loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x414a6ed8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40cd4330"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x414a6030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40ca27e8"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x414a6428"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40ca2be0"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x414a6ac0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cd6e98"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x414a44e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40cd65d8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40cd3088"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40caf330"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40cd8b40"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d042b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40cf7060"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40cf8150"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40cf4010"/></to>
    </wire>
    <wire loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40cf9070"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40cf7e68"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40cf8548"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40cf4428"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40cf8ce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40cf4bc0"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40d04d40"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40cf7b30"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40d04868"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40cf7638"/></to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x414c3430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40d3fb88"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x414c4200"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d3f310"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x414c4b08"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40d20b18"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40d20b18"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40d4a010"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x414c5af8"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x40d3e338"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40d4a9a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408cd5f8"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d54718"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40d515b8"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40d52628"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40d4f588"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40d52a20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40d4f9a0"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40d51250"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40d4e170"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40d53230"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40d50098"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40d54cd0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40d51b90"/></to>
    </wire>
    <wire loc="76:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d7bc60"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40d77a08"/></to>
    </wire>
    <wire loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40d78b00"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40d759a0"/></to>
    </wire>
    <wire loc="74:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40d78ef8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40d75db8"/></to>
    </wire>
    <wire loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40d776a0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40d745d0"/></to>
    </wire>
    <wire loc="72:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40d78708"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d75588"/></to>
    </wire>
    <wire loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40d79708"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40d76508"/></to>
    </wire>
    <wire loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40d79230"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40d76010"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40e12ea8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4152a568"/></to>
    </wire>
    <wire loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d69100"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d83300"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40df98b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40e15cc8"/></to>
    </wire>
    <wire loc="83:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40daa9d0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40d931c8"/></to>
    </wire>
    <wire loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40da90e0"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40d90280"/></to>
    </wire>
    <wire loc="89:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40da9778"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40d90918"/></to>
    </wire>
    <wire loc="92:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40da9e38"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40d8f010"/></to>
    </wire>
    <wire loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40da8680"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40d93a50"/></to>
    </wire>
    <wire loc="98:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40daced0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40df98b0"/></to>
    </wire>
    <wire loc="99:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40d7e980"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x4085c490"/></to>
    </wire>
    <wire loc="103:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40da7d38"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40aa8d38"/></to>
    </wire>
    <wire loc="104:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40dac418"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40d8c998"/></to>
    </wire>
    <wire loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40d8c998"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40e26030"/></to>
    </wire>
    <wire loc="116:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40da5398"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></to>
    </wire>
    <wire loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e26af8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40e1c9f0"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40e1acd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40721b68"/></to>
    </wire>
    <wire loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e14680"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408bde30"/></to>
    </wire>
    <wire loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x41528010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4084acd8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x41525010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4085f100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:./net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x40f06430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:./net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x4158ce88"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x409e1ab0"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x415c4010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415bd670"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x415c46a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x415c4d40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x415c2950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409f3850"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x415bdd38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fde4c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x415bc3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="53:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40fde4c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410283d8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41028b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x409f7938"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41027230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41027e08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x41026510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x41026948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4101ca70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4101b150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41015410"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41015aa8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="245:./net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x410a5448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="354:./net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x410a5010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x415f1238"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4163f998"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x415f18d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41642010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x410d5d48"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41642c08"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41642c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409f3850"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4163c080"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fde4c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4163c718"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x410d36d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410d3d68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="52:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x410fb150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4162d318"/></to>
    </wire>
    <wire loc="47:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4162d318"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409bc240"/></to>
    </wire>
    <wire loc="46:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4162fc68"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409be178"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x409c7eb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x4162a420"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4111b310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40545068"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4111b9a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054bdf8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4111a5d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4053c010"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41625d38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410e7b70"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416243f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054bdf8"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x410e7b70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410e3280"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x410e39f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40534be0"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41120150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054bdf8"/></to>
    </wire>
    <wire loc="57:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41120d28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40545068"/></to>
    </wire>
    <wire loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x4111f430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x4111f868"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411136d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41113d68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="17:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="AutoOn" scoped="" ref="0x41103bc8"/></from>
      <to><interface-ref name="AutoOn" scoped="" ref="0x4113b190"/></to>
    </wire>
    <wire loc="23:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x411370e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></to>
    </wire>
    <wire loc="24:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x41139c88"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41154d38"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41154d38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40521100"/>
      <arguments>
        <value cst="I:136">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x411397a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4114b890"/></to>
    </wire>
    <wire loc="51:./net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4114b890"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4114a440"/></to>
    </wire>
    <wire loc="29:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="CommandValue" scoped="" ref="0x41138d40"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x4114de78"/></to>
    </wire>
    <wire loc="59:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x4114de78"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x416af808"/></to>
    </wire>
    <wire loc="30:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="CommandUpdate" scoped="" ref="0x41136cd0"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x411ddcb0"/></to>
    </wire>
    <wire loc="60:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x411ddcb0"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x416ad650"/></to>
    </wire>
    <wire loc="33:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="RunCommand" scoped="" ref="0x41132098"/></from>
      <to><interface-ref name="RunCommand" scoped="" ref="0x412066e8"/></to>
    </wire>
    <wire loc="10:./Command/RunCommandC.nc">
      <from><interface-ref name="RunCommand" scoped="" ref="0x412066e8"/></from>
      <to><interface-ref name="RunCommand" scoped="" ref="0x41200628"/></to>
    </wire>
    <wire loc="34:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="RunCommandControl" scoped="" ref="0x411324e8"/></from>
      <to><interface-ref name="RunCommandControl" scoped="" ref="0x41206b38"/></to>
    </wire>
    <wire loc="11:./Command/RunCommandC.nc">
      <from><interface-ref name="RunCommandControl" scoped="" ref="0x41206b38"/></from>
      <to><interface-ref name="RunCommandControl" scoped="" ref="0x412001c8"/></to>
    </wire>
    <wire loc="38:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41132910"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="44:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x411330e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409f7060"/></to>
    </wire>
    <wire loc="45:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x411337b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409c0a28"/></to>
    </wire>
    <wire loc="46:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41134900"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41204d20"/></to>
    </wire>
    <wire loc="51:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41204d20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x417347a0"/></to>
    </wire>
    <wire loc="49:./SerialToDis/SerialToDisseminationC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41133d30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4126c030"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4126c030"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40816e90"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:./SerialToDis/SerialToDisseminationP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x4112c2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41153070"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40545068"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41153708"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054bdf8"/></to>
    </wire>
    <wire loc="58:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4114a440"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41146c30"/></to>
    </wire>
    <wire loc="59:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x4117c420"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x411471b8"/></to>
    </wire>
    <wire loc="60:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x4117cf10"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x4117e590"/></to>
    </wire>
    <wire loc="61:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x4117ba00"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x41146100"/></to>
    </wire>
    <wire loc="64:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4117be38"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4117d778"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4117d778"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41688450"/></to>
    </wire>
    <wire loc="67:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41179558"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41189c08"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41189c08"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409f6320"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x41179940"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411866a0"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x411866a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416702e8"/></to>
    </wire>
    <wire loc="74:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x411780e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41182c10"/></to>
    </wire>
    <wire loc="54:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x41182c10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409f6320"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:./net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41178428"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41688450"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41680010"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4117de10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41688ae8"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41688ae8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4118b4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41687230"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41687230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4118a170"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41687e28"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41687e28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409f3850"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x416806d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fde4c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x41680d70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41189f20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411885d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x416702e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4166cda0"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41186d38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41670980"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41670980"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411853f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4166f030"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4166f030"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="67:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x41183010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4166fc28"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4166fc28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409f3850"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x416bd500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fde4c0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416bdb98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="55:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41182f28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409f4478"/></to>
    </wire>
    <wire loc="56:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411815d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></to>
    </wire>
    <wire loc="63:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x411471b8"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x416ac010"/></to>
    </wire>
    <wire loc="64:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x41146100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x416af360"/></to>
    </wire>
    <wire loc="67:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x4117e590"/>
      <arguments>
        <value cst="I:4660">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x4119f950"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:./net/drip/DisseminatorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x416ac7a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="62:./net/drip/DisseminatorP.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x416ab750"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:./net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x4119f950"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x4120aad8"/></to>
    </wire>
    <wire loc="55:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x4120aad8"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x4169cda0"/></to>
    </wire>
    <wire loc="57:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4169b590"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x416e8ab8"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x416e8ab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40816e90"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41697aa8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40cd6e98"/></to>
    </wire>
    <wire loc="59:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Changed" scoped="" ref="0x41697170"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x416e2348"/></to>
    </wire>
    <wire loc="60:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Pending" scoped="" ref="0x41698778"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x416e4b38"/></to>
    </wire>
    <wire loc="62:./net/TrickleTimerMilliC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41697ea0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="146:./net/TrickleTimerImplP.nc">
      <from><interface-ref name="timerTask" scoped="" ref="0x41696e20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:./Command/RunCommandC.nc">
      <from><interface-ref name="RealExeControl" scoped="" ref="0x41200a98"/></from>
      <to><interface-ref name="RealExeControl" scoped="" ref="0x41202e28"/></to>
    </wire>
    <wire loc="11:./Command/RealExeC.nc">
      <from><interface-ref name="RealExeControl" scoped="" ref="0x41202e28"/></from>
      <to><interface-ref name="RealExeControl" scoped="" ref="0x41235b98"/></to>
    </wire>
    <wire loc="15:./Command/RunCommandC.nc">
      <from><interface-ref name="Execute" scoped="" ref="0x4123e8c0"/></from>
      <to><interface-ref name="Execute" scoped="" ref="0x41202678"/></to>
    </wire>
    <wire loc="10:./Command/RealExeC.nc">
      <from><interface-ref name="Execute" scoped="" ref="0x41202678"/></from>
      <to><interface-ref name="Execute" scoped="" ref="0x412353e8"/></to>
    </wire>
    <wire loc="19:./Command/RunCommandC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41240010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="14:./Command/RealExeC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4122de00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41283840"/></to>
    </wire>
    <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41283840"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40816e90"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:./Command/RealExeC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41234040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></to>
    </wire>
    <wire loc="21:./Command/RealExeC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x412292e8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40d8c998"/></to>
    </wire>
    <wire loc="28:./Command/RealExeC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x412330b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409f7060"/></to>
    </wire>
    <wire loc="29:./Command/RealExeC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x41233780"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409c0a28"/></to>
    </wire>
    <wire loc="30:./Command/RealExeC.nc">
      <from><interface-ref name="ResponseSend" scoped="" ref="0x41233c48"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4127f6b0"/></to>
    </wire>
    <wire loc="51:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4127f6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x417027c8"/></to>
    </wire>
    <wire loc="31:./Command/RealExeC.nc">
      <from><interface-ref name="ResponseReceive" scoped="" ref="0x41232410"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409beb88"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:./Command/RealExeC.nc">
      <from><interface-ref name="ResponseSnoop" scoped="" ref="0x41232818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x409bd250"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:./Command/RealExeC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x41232c68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></to>
    </wire>
    <wire loc="39:./Command/RealExeC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x41231300"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4127b368"/></to>
    </wire>
    <wire loc="63:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4127b368"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x416f91f0"/></to>
    </wire>
    <wire loc="45:./Command/RealExeC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x4122e888"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41278b90"/></to>
    </wire>
    <wire loc="49:/usr/src/tinyos/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x41278b90"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416ee9d0"/></to>
    </wire>
    <wire loc="46:./Command/RealExeC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x41231b60"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x41276f00"/></to>
    </wire>
    <wire loc="60:./Command/RealExeP.nc">
      <from><interface-ref name="sendPing" scoped="" ref="0x412622a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:./Command/RealExeP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x4125f080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4127fd48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41702e60"/></to>
    </wire>
    <wire loc="47:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41702e60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409bc240"/></to>
    </wire>
    <wire loc="46:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x417027c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409be178"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x409c7eb0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x41700f10"/></to>
    </wire>
    <wire loc="64:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4127ba00"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40545068"/></to>
    </wire>
    <wire loc="65:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4127a150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054bdf8"/></to>
    </wire>
    <wire loc="66:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x4127ad48"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4053c010"/></to>
    </wire>
    <wire loc="60:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x416f98b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410e7b70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x416f8010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4054bdf8"/></to>
    </wire>
    <wire loc="52:./net/ctp/CollectionSenderC_sonno.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4126e3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41734e38"/></to>
    </wire>
    <wire loc="47:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41734e38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x409bc240"/></to>
    </wire>
    <wire loc="46:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x417347a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409be178"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:./net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x409c7eb0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x41732f20"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/usr/src/tinyos/tos/system/MainC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc" safe="">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/usr/src/tinyos/tos/system/NoPinC.nc">
      <documentation loc="10:/usr/src/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <documentation loc="32:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart1C" loc="38:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-16 21:45:58 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart1C.UartP" loc="46(Atm128Uart1C.UartP):/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/usr/src/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="41:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Jan Beutel&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc" safe="">
      <documentation loc="35:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="RealMainP" loc="56:/usr/src/tinyos/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/usr/src/tinyos/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/usr/src/tinyos/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="YggdrasilC" loc="6:YggdrasilC.nc" safe="">
      <module/>
    </component>
    <component qname="YggdrasilAppC.TimerMilliC" loc="44(YggdrasilAppC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <value cst="I:8">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseC" loc="4:./Sensor/99Base/BaseC.nc">
      <configuration/>
    </component>
    <component qname="BaseP" loc="8:./Sensor/99Base/BaseP.nc" safe="">
      <module/>
    </component>
    <component qname="BaseC.TimerMilliC" loc="44(BaseC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CollectionC_sonno" loc="19:./net/ctp/CollectionC_sonno.nc">
      <documentation loc="8:./net/ctp/CollectionC_sonno.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="66:./net/ctp/CtpP.nc">
      <documentation loc="55:./net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="26:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ActiveMessageC" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="39(RFA1RadioC.RadioAlarmC.RadioAlarmP):/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/usr/src/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/usr/src/tinyos/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/usr/src/tinyos/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/usr/src/tinyos/tos/system/RandomC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/usr/src/tinyos/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC.CounterMicro16C" loc="54(BusyWaitMicroC.CounterMicro16C):/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP):/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):./net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/usr/src/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/usr/src/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f01370"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/usr/src/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e4cc98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e4cf20"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/usr/src/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f01370"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/usr/src/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e4cc98"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e4cf20"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:15">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):./net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:./net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):./net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:./net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="34:./net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/usr/src/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="96(CtpP.Router):./net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="27:./net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010/02/04 07:31:46 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2048">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:51200">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/usr/src/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyActiveMessageP" loc="1:./net/ctp/DummyActiveMessageP.nc">
      <module/>
    </component>
    <component qname="BaseC.CollectionSenderC_sonno" loc="43(BaseC.CollectionSenderC_sonno):./net/ctp/CollectionSenderC_sonno.nc">
      <documentation loc="32:./net/ctp/CollectionSenderC_sonno.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC_sonno"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseC.CollectionSenderC_sonno.CollectionSenderP" loc="34(BaseC.CollectionSenderC_sonno.CollectionSenderP):./net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP" loc="45(BaseC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP):./net/CollectionIdP.nc">
      <documentation loc="35:./net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseC.SerialAMSenderC" loc="47(BaseC.SerialAMSenderC):/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseC.SerialAMSenderC.AMQueueEntryP" loc="43(BaseC.SerialAMSenderC.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseC.AMReceiverC" loc="43(BaseC.AMReceiverC):/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseC.UARTMessagePoolP" loc="41(BaseC.UARTMessagePoolP):/usr/src/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BaseC.UARTMessagePoolP.PoolP" loc="53(BaseC.UARTMessagePoolP.PoolP):/usr/src/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f01370"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BaseC.UARTQueueP" loc="42(BaseC.UARTQueueP):/usr/src/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialToDisseminationC" loc="9:./SerialToDis/SerialToDisseminationC.nc">
      <documentation loc="1:./SerialToDis/SerialToDisseminationC.nc">
        <short>&#10; Command message disseminate other deployed nodes from serial command message.</short>
        <long>&#10; Command message disseminate other deployed nodes from serial command message.&#10;&#10;&#10; @author Dongik Kim &#60;sprit21c@gmail.com>&#10; @version $Revision: 0.1 $ $Date: 2011/06/26 &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialToDisseminationP" loc="11:./SerialToDis/SerialToDisseminationP.nc">
      <module/>
    </component>
    <component qname="SerialToDisseminationC.SerialAMReceiverC" loc="43(SerialToDisseminationC.SerialAMReceiverC):/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:136">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationC" loc="46:./net/drip/DisseminationC.nc">
      <documentation loc="35:./net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:./net/drip/DisseminationEngineP.nc">
      <documentation loc="35:./net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:./net/drip/DisseminationEngineImplP.nc">
      <documentation loc="35:./net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/usr/src/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/usr/src/tinyos/tos/system/AMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialToDisseminationC.Object32C" loc="49(SerialToDisseminationC.Object32C):./net/drip/DisseminatorC.nc">
      <documentation loc="35:./net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x4113fe78"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x4113c910"/></typename>
          </type-tag>
          <value cst="I:4660">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialToDisseminationC.Object32C.DisseminatorP" loc="45(SerialToDisseminationC.Object32C.DisseminatorP):./net/drip/DisseminatorP.nc">
      <documentation loc="33:./net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411bd2b0"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:./net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="43(DisseminationTimerP.TrickleTimerMilliC):./net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="43(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):./net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/usr/src/tinyos/tos/system/BitVectorC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/usr/src/tinyos/tos/system/BitVectorC.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RunCommandC" loc="1:./Command/RunCommandC.nc">
      <configuration/>
    </component>
    <component qname="RunCommandP" loc="3:./Command/RunCommandP.nc">
      <module/>
    </component>
    <component qname="RealExeC" loc="1:./Command/RealExeC.nc">
      <configuration/>
    </component>
    <component qname="RealExeP" loc="3:./Command/RealExeP.nc">
      <module/>
    </component>
    <component qname="RealExeC.TimerMilliC" loc="44(RealExeC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RealExeC.CollectionSenderC_sonno" loc="43(RealExeC.CollectionSenderC_sonno):./net/ctp/CollectionSenderC_sonno.nc">
      <documentation loc="32:./net/ctp/CollectionSenderC_sonno.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CollectionSenderC_sonno"/>
        <arguments>
          <value cst="I:137">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RealExeC.CollectionSenderC_sonno.CollectionSenderP" loc="34(RealExeC.CollectionSenderC_sonno.CollectionSenderP):./net/ctp/CollectionSenderP.nc">
      <instance number="1">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RealExeC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP" loc="45(RealExeC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP):./net/CollectionIdP.nc">
      <documentation loc="35:./net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RealExeC.SerialAMSenderC" loc="47(RealExeC.SerialAMSenderC):/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:137">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RealExeC.SerialAMSenderC.AMQueueEntryP" loc="43(RealExeC.SerialAMSenderC.AMQueueEntryP):/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RealExeC.UARTMessagePoolP" loc="41(RealExeC.UARTMessagePoolP):/usr/src/tinyos/tos/system/PoolC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RealExeC.UARTMessagePoolP.PoolP" loc="53(RealExeC.UARTMessagePoolP.PoolP):/usr/src/tinyos/tos/system/PoolP.nc">
      <documentation loc="34:/usr/src/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f01370"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RealExeC.UARTQueueP" loc="42(RealExeC.UARTQueueP):/usr/src/tinyos/tos/system/QueueC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialToDisseminationC.CollectionSenderC_sonno" loc="43(SerialToDisseminationC.CollectionSenderC_sonno):./net/ctp/CollectionSenderC_sonno.nc">
      <documentation loc="32:./net/ctp/CollectionSenderC_sonno.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CollectionSenderC_sonno"/>
        <arguments>
          <value cst="I:252">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP" loc="34(SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP):./net/ctp/CollectionSenderP.nc">
      <instance number="2">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP" loc="45(SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP):./net/CollectionIdP.nc">
      <documentation loc="35:./net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialToDisseminationC.TimerMilliC" loc="44(SerialToDisseminationC.TimerMilliC):/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x40494558" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40494780" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404949a8" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/usr/src/tinyos/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/usr/src/tinyos/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406fccb0" loc="55:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406fccb0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406f8148" loc="56:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406f8148"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406f83b0" loc="57:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406f83b0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406f8820" loc="58:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406f8820"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406f8a88" loc="59:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x406f8f10" loc="60:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x406f8f10"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4071d6f8" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4071d6f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4071db28" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4071db28"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4071dd18" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/usr/src/tinyos/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40837d00" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40837d00"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40834148" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40834148"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40834338" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x40834540" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x408cced0" loc="52:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x408cced0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x408c2360" loc="53:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x408c2360"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x408c25c8" loc="54:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x408c25c8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x408c2a38" loc="55:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x408c2a38"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x408c2ca0" loc="56:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408fbb90" loc="46:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408fbb90"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408fca20" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408fca20"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x408fcc00" loc="46:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40b2c4c0" loc="83:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40b49228" loc="42:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/usr/src/tinyos/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40d4be70" loc="46:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40d4be70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40df6d78" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40df6d78"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40e251b8" loc="51:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40e251b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:./net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/usr/src/tinyos/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40f01370" loc="41:/usr/src/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40f01370"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40f01590" loc="41:/usr/src/tinyos/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/usr/src/tinyos/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/usr/src/tinyos/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40efd888" loc="53:/usr/src/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40efd888"/></type-var>
        </typedef>
        <constant name="size" ref="0x40efda78" loc="53:/usr/src/tinyos/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/usr/src/tinyos/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40f1d380" loc="42:/usr/src/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40f1d380"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40f1d5a8" loc="42:/usr/src/tinyos/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:./net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:./net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x40f42a88" loc="38:./net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:./net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:./net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40f3d4f0" loc="43:./net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/usr/src/tinyos/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40f53b48" loc="47:/usr/src/tinyos/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/usr/src/tinyos/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40ff1758" loc="47:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/usr/src/tinyos/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40fea2c8" loc="43:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/usr/src/tinyos/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40fdd9c8" loc="45:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/usr/src/tinyos/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x4101a010" loc="43:/usr/src/tinyos/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/usr/src/tinyos/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x410179c0" loc="44:/usr/src/tinyos/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="96:./net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="27:./net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010/02/04 07:31:46 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x41045a28" loc="96:./net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x41045c68" loc="96:./net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x41045ea8" loc="96:./net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC_sonno" loc="43:./net/ctp/CollectionSenderC_sonno.nc" abstract="">
      <documentation loc="32:./net/ctp/CollectionSenderC_sonno.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x410fdeb8" loc="43:./net/ctp/CollectionSenderC_sonno.nc">
          <component-ref qname="CollectionSenderC_sonno"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:./net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x410f8990" loc="35:./net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x410f8ba8" loc="35:./net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:./net/CollectionIdP.nc" abstract="">
      <documentation loc="35:./net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x410f3628" loc="45:./net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/usr/src/tinyos/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x410ef598" loc="47:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x41155748" loc="43:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:./net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:./net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/09/14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x411bd2b0" loc="49:./net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411bd2b0"/></type-var>
        </typedef>
        <constant name="key" ref="0x411bd4a0" loc="49:./net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:./net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:./net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/02/16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x411bbe48" loc="45:./net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x411bbe48"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="43:./net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x411dbb00" loc="43:./net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x411dbd10" loc="44:./net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x411dbef0" loc="45:./net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x411d8128" loc="46:./net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="43:./net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x411d7628" loc="43:./net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x411d7838" loc="44:./net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x411d7a18" loc="45:./net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x411d7c20" loc="46:./net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x411d7e28" loc="47:./net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/usr/src/tinyos/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/usr/src/tinyos/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x4121e100" loc="44:/usr/src/tinyos/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x40427d18" loc="58:/usr/src/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40427d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40427ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40427078" loc="57:/usr/src/tinyos/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40427078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40427250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4041f510" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4041f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041f6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4042cd98" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4042cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40425010"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404250f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404251d0"/>
        <function-ref name="actualMicro" scoped="" ref="0x404252b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40425390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404255b8" loc="43:/usr/src/tinyos/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404255b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40425790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40429a48" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40429a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40429c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x40432608" loc="45:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x40432608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404327e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x40432238" loc="44:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x40432238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40432410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x40429e38" loc="43:/usr/src/tinyos/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x40429e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40432050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40424610" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40424610"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404247e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x40424dc8" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x40424dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40437010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40424a18" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40424a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40424bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x40442da0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x40442da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40445e00" loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40445e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404429d8" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404429d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40442260" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40442260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40442628" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40442628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404555b0" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404555b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40455788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40455960" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40455960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40455b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40455c18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40455cf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40455dd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40455eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x4044e248" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x4044e248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044e420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40465010" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40465010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404651e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Toggle" ref="0x4046bda0" loc="38:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Toggle" scoped="" ref="0x4046bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40462010"/>
        <function-ref name="isInput" scoped="" ref="0x404620f0"/>
        <function-ref name="toggle" scoped="" ref="0x404621d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404622b0"/>
        <function-ref name="get" scoped="" ref="0x40462390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462470"/>
        <function-ref name="set" scoped="" ref="0x40462550"/>
        <function-ref name="clr" scoped="" ref="0x40462630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40465850" loc="36:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40465850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40465a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x404691d0" loc="42:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x404691d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404693a8"/>
        <function-ref name="isInput" scoped="" ref="0x40469488"/>
        <function-ref name="toggle" scoped="" ref="0x40469568"/>
        <function-ref name="isOutput" scoped="" ref="0x40469648"/>
        <function-ref name="get" scoped="" ref="0x40469728"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469808"/>
        <function-ref name="set" scoped="" ref="0x404698e8"/>
        <function-ref name="clr" scoped="" ref="0x404699c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x40469bd8" loc="43:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x40469bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469db0"/>
        <function-ref name="isInput" scoped="" ref="0x40469e90"/>
        <function-ref name="toggle" scoped="" ref="0x40468010"/>
        <function-ref name="isOutput" scoped="" ref="0x404680f0"/>
        <function-ref name="get" scoped="" ref="0x404681d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404682b0"/>
        <function-ref name="set" scoped="" ref="0x40468390"/>
        <function-ref name="clr" scoped="" ref="0x40468470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x40468688" loc="45:/usr/src/tinyos/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x40468688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468860"/>
        <function-ref name="isInput" scoped="" ref="0x40468940"/>
        <function-ref name="toggle" scoped="" ref="0x40468a20"/>
        <function-ref name="isOutput" scoped="" ref="0x40468b00"/>
        <function-ref name="get" scoped="" ref="0x40468be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468cc0"/>
        <function-ref name="set" scoped="" ref="0x40468da0"/>
        <function-ref name="clr" scoped="" ref="0x40468e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4048d2f0" loc="93:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4048d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4048d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4048d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4048d968"/>
        <function-ref name="get" scoped="" ref="0x4048da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048db28"/>
        <function-ref name="set" scoped="" ref="0x4048dc08"/>
        <function-ref name="clr" scoped="" ref="0x4048dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40485830" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40485830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485a08"/>
        <function-ref name="isInput" scoped="" ref="0x40485ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40485bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40485ca8"/>
        <function-ref name="get" scoped="" ref="0x40485d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485e68"/>
        <function-ref name="set" scoped="" ref="0x40484010"/>
        <function-ref name="clr" scoped="" ref="0x404840f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4048aea8" loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4048aea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404890c0"/>
        <function-ref name="isInput" scoped="" ref="0x404891a0"/>
        <function-ref name="toggle" scoped="" ref="0x40489280"/>
        <function-ref name="isOutput" scoped="" ref="0x40489360"/>
        <function-ref name="get" scoped="" ref="0x40489440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40489520"/>
        <function-ref name="set" scoped="" ref="0x40489600"/>
        <function-ref name="clr" scoped="" ref="0x404896e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404900a0" loc="87:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404900a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490278"/>
        <function-ref name="isInput" scoped="" ref="0x40490358"/>
        <function-ref name="toggle" scoped="" ref="0x40490438"/>
        <function-ref name="isOutput" scoped="" ref="0x40490518"/>
        <function-ref name="get" scoped="" ref="0x404905f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404906d8"/>
        <function-ref name="set" scoped="" ref="0x404907b8"/>
        <function-ref name="clr" scoped="" ref="0x40490898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40496830" loc="98:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40496830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496a08"/>
        <function-ref name="isInput" scoped="" ref="0x40496ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40496bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40496ca8"/>
        <function-ref name="get" scoped="" ref="0x40496d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40496e68"/>
        <function-ref name="set" scoped="" ref="0x40495010"/>
        <function-ref name="clr" scoped="" ref="0x404950f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404794b0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404794b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479688"/>
        <function-ref name="isInput" scoped="" ref="0x40479768"/>
        <function-ref name="toggle" scoped="" ref="0x40479848"/>
        <function-ref name="isOutput" scoped="" ref="0x40479928"/>
        <function-ref name="get" scoped="" ref="0x40479a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40479ae8"/>
        <function-ref name="set" scoped="" ref="0x40479bc8"/>
        <function-ref name="clr" scoped="" ref="0x40479ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40486c08" loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40486c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40486de0"/>
        <function-ref name="isInput" scoped="" ref="0x40486ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40491010"/>
        <function-ref name="isOutput" scoped="" ref="0x404910f0"/>
        <function-ref name="get" scoped="" ref="0x404911d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404912b0"/>
        <function-ref name="set" scoped="" ref="0x40491390"/>
        <function-ref name="clr" scoped="" ref="0x40491470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404788e0" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404788e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40478b98"/>
        <function-ref name="toggle" scoped="" ref="0x40478c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40478d58"/>
        <function-ref name="get" scoped="" ref="0x40478e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478f18"/>
        <function-ref name="set" scoped="" ref="0x40477010"/>
        <function-ref name="clr" scoped="" ref="0x404770f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4047d0a0" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4047d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047d278"/>
        <function-ref name="isInput" scoped="" ref="0x4047d358"/>
        <function-ref name="toggle" scoped="" ref="0x4047d438"/>
        <function-ref name="isOutput" scoped="" ref="0x4047d518"/>
        <function-ref name="get" scoped="" ref="0x4047d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047d6d8"/>
        <function-ref name="set" scoped="" ref="0x4047d7b8"/>
        <function-ref name="clr" scoped="" ref="0x4047d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40483750" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40483750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40483928"/>
        <function-ref name="isInput" scoped="" ref="0x40483a08"/>
        <function-ref name="toggle" scoped="" ref="0x40483ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40483bc8"/>
        <function-ref name="get" scoped="" ref="0x40483ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483d88"/>
        <function-ref name="set" scoped="" ref="0x40483e68"/>
        <function-ref name="clr" scoped="" ref="0x40482010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40488ce8" loc="81:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40488ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40488ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40487010"/>
        <function-ref name="toggle" scoped="" ref="0x404870f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404871d0"/>
        <function-ref name="get" scoped="" ref="0x404872b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487390"/>
        <function-ref name="set" scoped="" ref="0x40487470"/>
        <function-ref name="clr" scoped="" ref="0x40487550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40470120" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40470120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404702f8"/>
        <function-ref name="isInput" scoped="" ref="0x404703d8"/>
        <function-ref name="toggle" scoped="" ref="0x404704b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40470598"/>
        <function-ref name="get" scoped="" ref="0x40470678"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470758"/>
        <function-ref name="set" scoped="" ref="0x40470838"/>
        <function-ref name="clr" scoped="" ref="0x40470918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40476750" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40476750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476928"/>
        <function-ref name="isInput" scoped="" ref="0x40476a08"/>
        <function-ref name="toggle" scoped="" ref="0x40476ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40476bc8"/>
        <function-ref name="get" scoped="" ref="0x40476ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476d88"/>
        <function-ref name="set" scoped="" ref="0x40476e68"/>
        <function-ref name="clr" scoped="" ref="0x40475010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4047cea8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4047cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4047b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4047b280"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b360"/>
        <function-ref name="get" scoped="" ref="0x4047b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b520"/>
        <function-ref name="set" scoped="" ref="0x4047b600"/>
        <function-ref name="clr" scoped="" ref="0x4047b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40480670" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40480670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40480848"/>
        <function-ref name="isInput" scoped="" ref="0x40480928"/>
        <function-ref name="toggle" scoped="" ref="0x40480a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40480ae8"/>
        <function-ref name="get" scoped="" ref="0x40480bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40480ca8"/>
        <function-ref name="set" scoped="" ref="0x40480d88"/>
        <function-ref name="clr" scoped="" ref="0x40480e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x4048fea8" loc="90:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x4048fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4048e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4048e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4048e360"/>
        <function-ref name="get" scoped="" ref="0x4048e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048e520"/>
        <function-ref name="set" scoped="" ref="0x4048e600"/>
        <function-ref name="clr" scoped="" ref="0x4048e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404973d0" loc="96:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404973d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404975a8"/>
        <function-ref name="isInput" scoped="" ref="0x40497688"/>
        <function-ref name="toggle" scoped="" ref="0x40497768"/>
        <function-ref name="isOutput" scoped="" ref="0x40497848"/>
        <function-ref name="get" scoped="" ref="0x40497928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497a08"/>
        <function-ref name="set" scoped="" ref="0x40497ae8"/>
        <function-ref name="clr" scoped="" ref="0x40497bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4048ba98" loc="76:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4048ba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048bc70"/>
        <function-ref name="isInput" scoped="" ref="0x4048bd50"/>
        <function-ref name="toggle" scoped="" ref="0x4048be30"/>
        <function-ref name="isOutput" scoped="" ref="0x4048bf10"/>
        <function-ref name="get" scoped="" ref="0x4048a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a0f0"/>
        <function-ref name="set" scoped="" ref="0x4048a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4048a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4046e010" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4046e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4046e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4046e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e488"/>
        <function-ref name="get" scoped="" ref="0x4046e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e648"/>
        <function-ref name="set" scoped="" ref="0x4046e728"/>
        <function-ref name="clr" scoped="" ref="0x4046e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40474750" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40474750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40474928"/>
        <function-ref name="isInput" scoped="" ref="0x40474a08"/>
        <function-ref name="toggle" scoped="" ref="0x40474ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40474bc8"/>
        <function-ref name="get" scoped="" ref="0x40474ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474d88"/>
        <function-ref name="set" scoped="" ref="0x40474e68"/>
        <function-ref name="clr" scoped="" ref="0x4047f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4048dee8" loc="94:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4048dee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x4048c1c0"/>
        <function-ref name="toggle" scoped="" ref="0x4048c2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048c380"/>
        <function-ref name="get" scoped="" ref="0x4048c460"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048c540"/>
        <function-ref name="set" scoped="" ref="0x4048c620"/>
        <function-ref name="clr" scoped="" ref="0x4048c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x4047fc08" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x4047fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4047fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4047e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e0f0"/>
        <function-ref name="get" scoped="" ref="0x4047e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e2b0"/>
        <function-ref name="set" scoped="" ref="0x4047e390"/>
        <function-ref name="clr" scoped="" ref="0x4047e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404842f0" loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404842f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404844c8"/>
        <function-ref name="isInput" scoped="" ref="0x404845a8"/>
        <function-ref name="toggle" scoped="" ref="0x40484688"/>
        <function-ref name="isOutput" scoped="" ref="0x40484768"/>
        <function-ref name="get" scoped="" ref="0x40484848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40484928"/>
        <function-ref name="set" scoped="" ref="0x40484a08"/>
        <function-ref name="clr" scoped="" ref="0x40484ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404898e0" loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404898e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40489ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40489b98"/>
        <function-ref name="toggle" scoped="" ref="0x40489c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40489d58"/>
        <function-ref name="get" scoped="" ref="0x40489e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40489f18"/>
        <function-ref name="set" scoped="" ref="0x40488010"/>
        <function-ref name="clr" scoped="" ref="0x404880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40490a98" loc="88:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40490a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490c70"/>
        <function-ref name="isInput" scoped="" ref="0x40490d50"/>
        <function-ref name="toggle" scoped="" ref="0x40490e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40490f10"/>
        <function-ref name="get" scoped="" ref="0x4048f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f0f0"/>
        <function-ref name="set" scoped="" ref="0x4048f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4048f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x40479ea8" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x40479ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404780c0"/>
        <function-ref name="isInput" scoped="" ref="0x404781a0"/>
        <function-ref name="toggle" scoped="" ref="0x40478280"/>
        <function-ref name="isOutput" scoped="" ref="0x40478360"/>
        <function-ref name="get" scoped="" ref="0x40478440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478520"/>
        <function-ref name="set" scoped="" ref="0x40478600"/>
        <function-ref name="clr" scoped="" ref="0x404786e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404772f0" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404772f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404774c8"/>
        <function-ref name="isInput" scoped="" ref="0x404775a8"/>
        <function-ref name="toggle" scoped="" ref="0x40477688"/>
        <function-ref name="isOutput" scoped="" ref="0x40477768"/>
        <function-ref name="get" scoped="" ref="0x40477848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477928"/>
        <function-ref name="set" scoped="" ref="0x40477a08"/>
        <function-ref name="clr" scoped="" ref="0x40477ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4047da98" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4047da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047dc70"/>
        <function-ref name="isInput" scoped="" ref="0x4047dd50"/>
        <function-ref name="toggle" scoped="" ref="0x4047de30"/>
        <function-ref name="isOutput" scoped="" ref="0x4047df10"/>
        <function-ref name="get" scoped="" ref="0x4047c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047c0f0"/>
        <function-ref name="set" scoped="" ref="0x4047c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4047c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x40482210" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x40482210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404823e8"/>
        <function-ref name="isInput" scoped="" ref="0x404824c8"/>
        <function-ref name="toggle" scoped="" ref="0x404825a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40482688"/>
        <function-ref name="get" scoped="" ref="0x40482768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40482848"/>
        <function-ref name="set" scoped="" ref="0x40482928"/>
        <function-ref name="clr" scoped="" ref="0x40482a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40487750" loc="82:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40487750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487928"/>
        <function-ref name="isInput" scoped="" ref="0x40487a08"/>
        <function-ref name="toggle" scoped="" ref="0x40487ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40487bc8"/>
        <function-ref name="get" scoped="" ref="0x40487ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40487d88"/>
        <function-ref name="set" scoped="" ref="0x40487e68"/>
        <function-ref name="clr" scoped="" ref="0x40486010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40470b18" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40470b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40470dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40470eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f010"/>
        <function-ref name="get" scoped="" ref="0x4046f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f1d0"/>
        <function-ref name="set" scoped="" ref="0x4046f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4046f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40475210" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40475210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475468"/>
        <function-ref name="isInput" scoped="" ref="0x40475548"/>
        <function-ref name="toggle" scoped="" ref="0x40475628"/>
        <function-ref name="isOutput" scoped="" ref="0x40475708"/>
        <function-ref name="get" scoped="" ref="0x404757e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404758c8"/>
        <function-ref name="set" scoped="" ref="0x404759a8"/>
        <function-ref name="clr" scoped="" ref="0x40475a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4047b8e0" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4047b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047bab8"/>
        <function-ref name="isInput" scoped="" ref="0x4047bb98"/>
        <function-ref name="toggle" scoped="" ref="0x4047bc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4047bd58"/>
        <function-ref name="get" scoped="" ref="0x4047be38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047bf18"/>
        <function-ref name="set" scoped="" ref="0x4047a010"/>
        <function-ref name="clr" scoped="" ref="0x4047a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4048e8e0" loc="91:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4048e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048eab8"/>
        <function-ref name="isInput" scoped="" ref="0x4048eb98"/>
        <function-ref name="toggle" scoped="" ref="0x4048ec78"/>
        <function-ref name="isOutput" scoped="" ref="0x4048ed58"/>
        <function-ref name="get" scoped="" ref="0x4048ee38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048ef18"/>
        <function-ref name="set" scoped="" ref="0x4048d010"/>
        <function-ref name="clr" scoped="" ref="0x4048d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4047ace8" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4047ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40485010"/>
        <function-ref name="isInput" scoped="" ref="0x404850f0"/>
        <function-ref name="toggle" scoped="" ref="0x404851d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404852b0"/>
        <function-ref name="get" scoped="" ref="0x40485390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40485470"/>
        <function-ref name="set" scoped="" ref="0x40485550"/>
        <function-ref name="clr" scoped="" ref="0x40485630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4048a4b0" loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4048a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048a688"/>
        <function-ref name="isInput" scoped="" ref="0x4048a768"/>
        <function-ref name="toggle" scoped="" ref="0x4048a848"/>
        <function-ref name="isOutput" scoped="" ref="0x4048a928"/>
        <function-ref name="get" scoped="" ref="0x4048aa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048aae8"/>
        <function-ref name="set" scoped="" ref="0x4048abc8"/>
        <function-ref name="clr" scoped="" ref="0x4048aca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40491670" loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40491670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491848"/>
        <function-ref name="isInput" scoped="" ref="0x40491928"/>
        <function-ref name="toggle" scoped="" ref="0x40491a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40491ae8"/>
        <function-ref name="get" scoped="" ref="0x40491bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40491ca8"/>
        <function-ref name="set" scoped="" ref="0x40491d88"/>
        <function-ref name="clr" scoped="" ref="0x40491e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40497dc8" loc="97:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40497dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40496010"/>
        <function-ref name="isInput" scoped="" ref="0x404960f0"/>
        <function-ref name="toggle" scoped="" ref="0x404961d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404962b0"/>
        <function-ref name="get" scoped="" ref="0x40496390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40496470"/>
        <function-ref name="set" scoped="" ref="0x40496550"/>
        <function-ref name="clr" scoped="" ref="0x40496630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4046ea08" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4046ea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046ebe0"/>
        <function-ref name="isInput" scoped="" ref="0x4046ecc0"/>
        <function-ref name="toggle" scoped="" ref="0x4046eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046ee80"/>
        <function-ref name="get" scoped="" ref="0x40479010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404790f0"/>
        <function-ref name="set" scoped="" ref="0x404791d0"/>
        <function-ref name="clr" scoped="" ref="0x404792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4047f210" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4047f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4047f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4047f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f688"/>
        <function-ref name="get" scoped="" ref="0x4047f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f848"/>
        <function-ref name="set" scoped="" ref="0x4047f928"/>
        <function-ref name="clr" scoped="" ref="0x4047fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40486210" loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40486210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404863e8"/>
        <function-ref name="isInput" scoped="" ref="0x404864c8"/>
        <function-ref name="toggle" scoped="" ref="0x404865a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40486688"/>
        <function-ref name="get" scoped="" ref="0x40486768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40486848"/>
        <function-ref name="set" scoped="" ref="0x40486928"/>
        <function-ref name="clr" scoped="" ref="0x40486a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4047e670" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4047e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e848"/>
        <function-ref name="isInput" scoped="" ref="0x4047e928"/>
        <function-ref name="toggle" scoped="" ref="0x4047ea08"/>
        <function-ref name="isOutput" scoped="" ref="0x4047eae8"/>
        <function-ref name="get" scoped="" ref="0x4047ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047eca8"/>
        <function-ref name="set" scoped="" ref="0x4047ed88"/>
        <function-ref name="clr" scoped="" ref="0x4047ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40484ce8" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40484ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40484ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40483010"/>
        <function-ref name="toggle" scoped="" ref="0x404830f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404831d0"/>
        <function-ref name="get" scoped="" ref="0x404832b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483390"/>
        <function-ref name="set" scoped="" ref="0x40483470"/>
        <function-ref name="clr" scoped="" ref="0x40483550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404882f0" loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404882f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404884c8"/>
        <function-ref name="isInput" scoped="" ref="0x404885a8"/>
        <function-ref name="toggle" scoped="" ref="0x40488688"/>
        <function-ref name="isOutput" scoped="" ref="0x40488768"/>
        <function-ref name="get" scoped="" ref="0x40488848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40488928"/>
        <function-ref name="set" scoped="" ref="0x40488a08"/>
        <function-ref name="clr" scoped="" ref="0x40488ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x4048f4b0" loc="89:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x4048f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f688"/>
        <function-ref name="isInput" scoped="" ref="0x4048f768"/>
        <function-ref name="toggle" scoped="" ref="0x4048f848"/>
        <function-ref name="isOutput" scoped="" ref="0x4048f928"/>
        <function-ref name="get" scoped="" ref="0x4048fa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048fae8"/>
        <function-ref name="set" scoped="" ref="0x4048fbc8"/>
        <function-ref name="clr" scoped="" ref="0x4048fca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404736f0" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404736f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404738c8"/>
        <function-ref name="isInput" scoped="" ref="0x404739a8"/>
        <function-ref name="toggle" scoped="" ref="0x40473a88"/>
        <function-ref name="isOutput" scoped="" ref="0x40473b68"/>
        <function-ref name="get" scoped="" ref="0x40473c48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473d28"/>
        <function-ref name="set" scoped="" ref="0x40473e08"/>
        <function-ref name="clr" scoped="" ref="0x40473ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40477ce8" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40477ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40476010"/>
        <function-ref name="toggle" scoped="" ref="0x404760f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404761d0"/>
        <function-ref name="get" scoped="" ref="0x404762b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40476390"/>
        <function-ref name="set" scoped="" ref="0x40476470"/>
        <function-ref name="clr" scoped="" ref="0x40476550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4047c4b0" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4047c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c688"/>
        <function-ref name="isInput" scoped="" ref="0x4047c768"/>
        <function-ref name="toggle" scoped="" ref="0x4047c848"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c928"/>
        <function-ref name="get" scoped="" ref="0x4047ca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047cae8"/>
        <function-ref name="set" scoped="" ref="0x4047cbc8"/>
        <function-ref name="clr" scoped="" ref="0x4047cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40482c08" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40482c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482de0"/>
        <function-ref name="isInput" scoped="" ref="0x40482ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40480010"/>
        <function-ref name="isOutput" scoped="" ref="0x404800f0"/>
        <function-ref name="get" scoped="" ref="0x404801d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404802b0"/>
        <function-ref name="set" scoped="" ref="0x40480390"/>
        <function-ref name="clr" scoped="" ref="0x40480470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4048c900" loc="95:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4048c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048cad8"/>
        <function-ref name="isInput" scoped="" ref="0x4048cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x4048cc98"/>
        <function-ref name="isOutput" scoped="" ref="0x4048cd78"/>
        <function-ref name="get" scoped="" ref="0x4048ce58"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497010"/>
        <function-ref name="set" scoped="" ref="0x404970f0"/>
        <function-ref name="clr" scoped="" ref="0x404971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4048b0a0" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4048b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b278"/>
        <function-ref name="isInput" scoped="" ref="0x4048b358"/>
        <function-ref name="toggle" scoped="" ref="0x4048b438"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b518"/>
        <function-ref name="get" scoped="" ref="0x4048b5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b6d8"/>
        <function-ref name="set" scoped="" ref="0x4048b7b8"/>
        <function-ref name="clr" scoped="" ref="0x4048b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4047a2f0" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4047a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4047a5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4047a688"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a768"/>
        <function-ref name="get" scoped="" ref="0x4047a848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a928"/>
        <function-ref name="set" scoped="" ref="0x4047aa08"/>
        <function-ref name="clr" scoped="" ref="0x4047aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x4046f590" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x4046f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f768"/>
        <function-ref name="isInput" scoped="" ref="0x4046f848"/>
        <function-ref name="toggle" scoped="" ref="0x4046f928"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fa08"/>
        <function-ref name="get" scoped="" ref="0x4046fae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046fbc8"/>
        <function-ref name="set" scoped="" ref="0x4046fca8"/>
        <function-ref name="clr" scoped="" ref="0x4046fd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40475c88" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40475c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40475e60"/>
        <function-ref name="isInput" scoped="" ref="0x40474010"/>
        <function-ref name="toggle" scoped="" ref="0x404740f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404741d0"/>
        <function-ref name="get" scoped="" ref="0x404742b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474390"/>
        <function-ref name="set" scoped="" ref="0x40474470"/>
        <function-ref name="clr" scoped="" ref="0x40474550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40493190" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40493190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40493378"/>
        <function-ref name="isInput" scoped="" ref="0x40493458"/>
        <function-ref name="toggle" scoped="" ref="0x40493538"/>
        <function-ref name="isOutput" scoped="" ref="0x40493618"/>
        <function-ref name="get" scoped="" ref="0x404936f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404937d8"/>
        <function-ref name="set" scoped="" ref="0x404938b8"/>
        <function-ref name="clr" scoped="" ref="0x40493998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404a5a70" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404a5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a5c58"/>
        <function-ref name="isInput" scoped="" ref="0x404a5d38"/>
        <function-ref name="toggle" scoped="" ref="0x404a5e18"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5ef8"/>
        <function-ref name="get" scoped="" ref="0x404a4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a40f0"/>
        <function-ref name="set" scoped="" ref="0x404a41d0"/>
        <function-ref name="clr" scoped="" ref="0x404a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404ad2b8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404ad2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad4a0"/>
        <function-ref name="isInput" scoped="" ref="0x404ad580"/>
        <function-ref name="toggle" scoped="" ref="0x404ad660"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad740"/>
        <function-ref name="get" scoped="" ref="0x404ad820"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad900"/>
        <function-ref name="set" scoped="" ref="0x404ad9e0"/>
        <function-ref name="clr" scoped="" ref="0x404adac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404b5af8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404b5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5ce0"/>
        <function-ref name="isInput" scoped="" ref="0x404b5dc0"/>
        <function-ref name="toggle" scoped="" ref="0x404b5ea0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4010"/>
        <function-ref name="get" scoped="" ref="0x404b40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b41d0"/>
        <function-ref name="set" scoped="" ref="0x404b42b0"/>
        <function-ref name="clr" scoped="" ref="0x404b4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404b1440" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404b1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1628"/>
        <function-ref name="isInput" scoped="" ref="0x404b1708"/>
        <function-ref name="toggle" scoped="" ref="0x404b17e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b18c8"/>
        <function-ref name="get" scoped="" ref="0x404b19a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1a88"/>
        <function-ref name="set" scoped="" ref="0x404b1b68"/>
        <function-ref name="clr" scoped="" ref="0x404b1c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404bac68" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404bac68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bae50"/>
        <function-ref name="isInput" scoped="" ref="0x404b9010"/>
        <function-ref name="toggle" scoped="" ref="0x404b90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b91d0"/>
        <function-ref name="get" scoped="" ref="0x404b92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9390"/>
        <function-ref name="set" scoped="" ref="0x404b9470"/>
        <function-ref name="clr" scoped="" ref="0x404b9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x404c15c8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x404c15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c17b0"/>
        <function-ref name="isInput" scoped="" ref="0x404c1890"/>
        <function-ref name="toggle" scoped="" ref="0x404c1970"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1a50"/>
        <function-ref name="get" scoped="" ref="0x404c1b30"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1c10"/>
        <function-ref name="set" scoped="" ref="0x404c1cf0"/>
        <function-ref name="clr" scoped="" ref="0x404c1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x404d4438" loc="18:/usr/src/tinyos/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x404d4438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4610"/>
        <function-ref name="isInput" scoped="" ref="0x404d46f0"/>
        <function-ref name="toggle" scoped="" ref="0x404d47d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d48b0"/>
        <function-ref name="get" scoped="" ref="0x404d4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d4a70"/>
        <function-ref name="set" scoped="" ref="0x404d4b50"/>
        <function-ref name="clr" scoped="" ref="0x404d4c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x404f4980" loc="34:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404f4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404f4b58"/>
        <function-ref name="stopDone" scoped="" ref="0x404f4c38"/>
        <function-ref name="start" scoped="" ref="0x404f4d18"/>
        <function-ref name="stop" scoped="" ref="0x404f4df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x404e8860" loc="37:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404e8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e8a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x404f0ab0" loc="57:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x404f0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f0c88"/>
        <function-ref name="runTask" scoped="" ref="0x404f0d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x404f3388" loc="46:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x404f3388"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f3560"/>
        <function-ref name="runTask" scoped="" ref="0x404f3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x404f2708" loc="35:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x404f2708"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x404f28e0"/>
        <function-ref name="disable" scoped="" ref="0x404f29c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x404f2aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x404f2b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x404f2dc8" loc="36:/usr/src/tinyos/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x404f2dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e8010"/>
        <function-ref name="isInput" scoped="" ref="0x404e80f0"/>
        <function-ref name="toggle" scoped="" ref="0x404e81d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e82b0"/>
        <function-ref name="get" scoped="" ref="0x404e8390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8470"/>
        <function-ref name="set" scoped="" ref="0x404e8550"/>
        <function-ref name="clr" scoped="" ref="0x404e8630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x40501758" loc="35:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x40501758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40501930"/>
        <function-ref name="disable" scoped="" ref="0x40501a10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40501af0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40501bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40501d90" loc="36:/usr/src/tinyos/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40501d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40500010"/>
        <function-ref name="isInput" scoped="" ref="0x405000f0"/>
        <function-ref name="toggle" scoped="" ref="0x405001d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405002b0"/>
        <function-ref name="get" scoped="" ref="0x40500390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500470"/>
        <function-ref name="set" scoped="" ref="0x40500550"/>
        <function-ref name="clr" scoped="" ref="0x40500630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x404fd010" loc="37:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x404fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x404fd1e8"/>
        <function-ref name="disable" scoped="" ref="0x404fd2c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x404fd3a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x404fd488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x40504428" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40504428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40504600"/>
        <function-ref name="fired" scoped="" ref="0x405046e0"/>
        <function-ref name="disable" scoped="" ref="0x405047c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x405048a0"/>
        <function-ref name="reset" scoped="" ref="0x40504980"/>
        <function-ref name="setMask" scoped="" ref="0x40504a60"/>
        <function-ref name="enable" scoped="" ref="0x40504b40"/>
        <function-ref name="getPins" scoped="" ref="0x40504c20"/>
        <function-ref name="getMask" scoped="" ref="0x40504d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x40525eb8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40525eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405090c0"/>
        <function-ref name="fired" scoped="" ref="0x405091a0"/>
        <function-ref name="disable" scoped="" ref="0x40509280"/>
        <function-ref name="isEnabled" scoped="" ref="0x40509360"/>
        <function-ref name="reset" scoped="" ref="0x40509440"/>
        <function-ref name="setMask" scoped="" ref="0x40509520"/>
        <function-ref name="enable" scoped="" ref="0x40509600"/>
        <function-ref name="getPins" scoped="" ref="0x405096e0"/>
        <function-ref name="getMask" scoped="" ref="0x405097c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x405099b8" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x405099b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40509ba0"/>
        <function-ref name="disable" scoped="" ref="0x40509c80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40509d60"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40509e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405240e0" loc="46:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405240e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405242b8"/>
        <function-ref name="stopDone" scoped="" ref="0x40524398"/>
        <function-ref name="start" scoped="" ref="0x40524478"/>
        <function-ref name="stop" scoped="" ref="0x40524558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40534be0" loc="47:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40534be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40534db8"/>
        <function-ref name="getPayload" scoped="" ref="0x40534e98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40523010"/>
        <function-ref name="cancel" scoped="" ref="0x405230f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405231d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40545068" loc="49:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40545068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40545240"/>
        <function-ref name="payloadLength" scoped="" ref="0x40545320"/>
        <function-ref name="getPayload" scoped="" ref="0x40545400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405454e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405455c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40521100" loc="48:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40521100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405212d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4053c548" loc="53:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4053c548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4053c720"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4053c800"/>
        <function-ref name="led1On" scoped="" ref="0x4053c8e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4053c9c0"/>
        <function-ref name="led3Off" scoped="" ref="0x4053caa0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4053cb80"/>
        <function-ref name="get" scoped="" ref="0x4053cc60"/>
        <function-ref name="led1Off" scoped="" ref="0x4053cd40"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4053ce20"/>
        <function-ref name="led3On" scoped="" ref="0x4053cf00"/>
        <function-ref name="led0On" scoped="" ref="0x40556010"/>
        <function-ref name="led2Off" scoped="" ref="0x405560f0"/>
        <function-ref name="led2On" scoped="" ref="0x405561d0"/>
        <function-ref name="set" scoped="" ref="0x40556330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4053c010" loc="51:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4053c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4053c1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4053c2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4053c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4054bdf8" loc="50:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4054bdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40540010"/>
        <function-ref name="source" scoped="" ref="0x405400f0"/>
        <function-ref name="address" scoped="" ref="0x405401d0"/>
        <function-ref name="destination" scoped="" ref="0x405402b0"/>
        <function-ref name="setSource" scoped="" ref="0x40540390"/>
        <function-ref name="setDestination" scoped="" ref="0x40540470"/>
        <function-ref name="type" scoped="" ref="0x40540550"/>
        <function-ref name="setType" scoped="" ref="0x40540630"/>
        <function-ref name="isForMe" scoped="" ref="0x40540710"/>
        <function-ref name="setGroup" scoped="" ref="0x405407f0"/>
        <function-ref name="localGroup" scoped="" ref="0x405408d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4058bed0" loc="54:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4058bed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4058a0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x4058a1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058a280"/>
        <function-ref name="cancel" scoped="" ref="0x4058a360"/>
        <function-ref name="sendDone" scoped="" ref="0x4058a440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4058a5a0" loc="55:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4058a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058a778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40552be8" loc="47:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40552be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40552dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40552eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40551010"/>
        <function-ref name="cancel" scoped="" ref="0x405510f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405511d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4058b310" loc="50:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4058b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4058b4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4058b5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4058b6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4058b788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4058b868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405513a8" loc="48:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405513a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40551590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4058b9a8" loc="51:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4058b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4058bb80"/>
        <function-ref name="noAck" scoped="" ref="0x4058bc60"/>
        <function-ref name="wasAcked" scoped="" ref="0x4058bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405516d0" loc="49:/usr/src/tinyos/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405516d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405518a8"/>
        <function-ref name="source" scoped="" ref="0x40551988"/>
        <function-ref name="address" scoped="" ref="0x40551a68"/>
        <function-ref name="destination" scoped="" ref="0x40551b48"/>
        <function-ref name="setSource" scoped="" ref="0x40551c28"/>
        <function-ref name="setDestination" scoped="" ref="0x40551d08"/>
        <function-ref name="type" scoped="" ref="0x40551de8"/>
        <function-ref name="setType" scoped="" ref="0x40551ec8"/>
        <function-ref name="isForMe" scoped="" ref="0x4058b010"/>
        <function-ref name="setGroup" scoped="" ref="0x4058b0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4058b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40589d10" loc="50:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40589d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40589ee8"/>
        <function-ref name="stopDone" scoped="" ref="0x40596010"/>
        <function-ref name="start" scoped="" ref="0x405960f0"/>
        <function-ref name="stop" scoped="" ref="0x405961d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40596c20" loc="52:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40596c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40596df8"/>
        <function-ref name="getPayload" scoped="" ref="0x40596ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40594010"/>
        <function-ref name="cancel" scoped="" ref="0x405940f0"/>
        <function-ref name="sendDone" scoped="" ref="0x405941d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40589978" loc="49:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40589978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40589b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40596618" loc="51:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40596618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405967f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40590840" loc="56:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40590840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40590a18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40590af8"/>
        <function-ref name="led1On" scoped="" ref="0x40590bd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40590cb8"/>
        <function-ref name="led3Off" scoped="" ref="0x40590d98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40590e78"/>
        <function-ref name="get" scoped="" ref="0x40593010"/>
        <function-ref name="led1Off" scoped="" ref="0x405930f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405931d0"/>
        <function-ref name="led3On" scoped="" ref="0x405932b0"/>
        <function-ref name="led0On" scoped="" ref="0x40593390"/>
        <function-ref name="led2Off" scoped="" ref="0x40593470"/>
        <function-ref name="led2On" scoped="" ref="0x40593550"/>
        <function-ref name="set" scoped="" ref="0x405936b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40590338" loc="55:/usr/src/tinyos/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40590338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40590510"/>
        <function-ref name="offset" scoped="" ref="0x405905f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x405906d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405ae0f8" loc="66:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405ae0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405ae2d0"/>
        <function-ref name="stopDone" scoped="" ref="0x405ae3b0"/>
        <function-ref name="start" scoped="" ref="0x405ae490"/>
        <function-ref name="stop" scoped="" ref="0x405ae570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x405e67a0" loc="332:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x405e67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e6978"/>
        <function-ref name="runTask" scoped="" ref="0x405e6a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x405b1760" loc="74:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x405b1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405b1938"/>
        <function-ref name="stop" scoped="" ref="0x405b1a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x405c2b28" loc="191:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x405c2b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405c2d00"/>
        <function-ref name="runTask" scoped="" ref="0x405c2de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4059fd48" loc="65:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4059fd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4059ff20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x405b0740" loc="75:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x405b0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x405b0918"/>
        <function-ref name="flush" scoped="" ref="0x405b09f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x405e7010" loc="322:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x405e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e71e8"/>
        <function-ref name="runTask" scoped="" ref="0x405e72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x405b4e88" loc="72:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x405b4e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x405a7070"/>
        <function-ref name="resetSend" scoped="" ref="0x405a7150"/>
        <function-ref name="dataReceived" scoped="" ref="0x405a7230"/>
        <function-ref name="resetReceive" scoped="" ref="0x405a7310"/>
        <function-ref name="putData" scoped="" ref="0x405a73f0"/>
        <function-ref name="putDone" scoped="" ref="0x405a74d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x405a75b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405a7720" loc="73:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405a7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405a78f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405a79d8"/>
        <function-ref name="led1On" scoped="" ref="0x405a7ab8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405a7b98"/>
        <function-ref name="led3Off" scoped="" ref="0x405a7c78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405a7d58"/>
        <function-ref name="get" scoped="" ref="0x405a7e38"/>
        <function-ref name="led1Off" scoped="" ref="0x405a7f18"/>
        <function-ref name="led3Toggle" scoped="" ref="0x405b6010"/>
        <function-ref name="led3On" scoped="" ref="0x405b60f0"/>
        <function-ref name="led0On" scoped="" ref="0x405b61d0"/>
        <function-ref name="led2Off" scoped="" ref="0x405b62b0"/>
        <function-ref name="led2On" scoped="" ref="0x405b6390"/>
        <function-ref name="set" scoped="" ref="0x405b64f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x405e3428" loc="341:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x405e3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e3600"/>
        <function-ref name="runTask" scoped="" ref="0x405e36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x405aa7f8" loc="67:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x405aa7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x405aa9d0"/>
        <function-ref name="nextByte" scoped="" ref="0x405aaab0"/>
        <function-ref name="startSend" scoped="" ref="0x405aab90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x405aac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x405a8bd8" loc="68:/usr/src/tinyos/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x405a8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x405a8db0"/>
        <function-ref name="byteReceived" scoped="" ref="0x405a8e90"/>
        <function-ref name="endPacket" scoped="" ref="0x405ac010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x4065bdb0" loc="275:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x4065bdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4065a010"/>
        <function-ref name="runTask" scoped="" ref="0x4065a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4065d710" loc="51:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4065d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4065d8f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4065d9d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4065dab8"/>
        <function-ref name="cancel" scoped="" ref="0x4065db98"/>
        <function-ref name="sendDone" scoped="" ref="0x4065dc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x4065a270" loc="158:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x4065a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4065a448"/>
        <function-ref name="runTask" scoped="" ref="0x4065a528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4065d350" loc="50:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4065d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4065d538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x4065dea0" loc="54:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x4065dea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404e55d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4065c0c0"/>
        <function-ref name="offset" scoped="" ref="0x4065c1a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4065c280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4065ce50" loc="57:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4065ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4065b050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4065b130"/>
        <function-ref name="led1On" scoped="" ref="0x4065b210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4065b2f0"/>
        <function-ref name="led3Off" scoped="" ref="0x4065b3d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4065b4b0"/>
        <function-ref name="get" scoped="" ref="0x4065b590"/>
        <function-ref name="led1Off" scoped="" ref="0x4065b670"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4065b750"/>
        <function-ref name="led3On" scoped="" ref="0x4065b830"/>
        <function-ref name="led0On" scoped="" ref="0x4065b910"/>
        <function-ref name="led2Off" scoped="" ref="0x4065b9f0"/>
        <function-ref name="led2On" scoped="" ref="0x4065bad0"/>
        <function-ref name="set" scoped="" ref="0x4065bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x4065c898" loc="56:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4065c898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4065ca70"/>
        <function-ref name="nextByte" scoped="" ref="0x4065cb50"/>
        <function-ref name="startSend" scoped="" ref="0x4065cc30"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4065cd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4065c3c0" loc="55:/usr/src/tinyos/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4065c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4065c598"/>
        <function-ref name="byteReceived" scoped="" ref="0x4065c678"/>
        <function-ref name="endPacket" scoped="" ref="0x4065c758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x406629e8" loc="50:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406629e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40662bc0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40662ca0"/>
        <function-ref name="receive" scoped="" ref="0x40662d80"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40662e60"/>
        <function-ref name="receiveDone" scoped="" ref="0x40655010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406550f0"/>
        <function-ref name="sendDone" scoped="" ref="0x406551d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40659718" loc="48:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40659718"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x406598f0"/>
        <function-ref name="resetSend" scoped="" ref="0x406599d0"/>
        <function-ref name="dataReceived" scoped="" ref="0x40659ab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x40659b90"/>
        <function-ref name="putData" scoped="" ref="0x40659c70"/>
        <function-ref name="putDone" scoped="" ref="0x40659d50"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40659e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40655340" loc="51:/usr/src/tinyos/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40655340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40655518"/>
        <function-ref name="led0Toggle" scoped="" ref="0x406555f8"/>
        <function-ref name="led1On" scoped="" ref="0x406556d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406557b8"/>
        <function-ref name="led3Off" scoped="" ref="0x40655898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40655978"/>
        <function-ref name="get" scoped="" ref="0x40655a58"/>
        <function-ref name="led1Off" scoped="" ref="0x40655b38"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40655c18"/>
        <function-ref name="led3On" scoped="" ref="0x40655cf8"/>
        <function-ref name="led0On" scoped="" ref="0x40655dd8"/>
        <function-ref name="led2Off" scoped="" ref="0x40655eb8"/>
        <function-ref name="led2On" scoped="" ref="0x40667010"/>
        <function-ref name="set" scoped="" ref="0x40667170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406778f0" loc="42:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406778f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40677ac8"/>
        <function-ref name="receive" scoped="" ref="0x40677ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40658a88" loc="41:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40658a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40658c60"/>
        <function-ref name="receivedByte" scoped="" ref="0x40658d40"/>
        <function-ref name="receive" scoped="" ref="0x40658e20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40658f00"/>
        <function-ref name="receiveDone" scoped="" ref="0x4067a010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4067a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4067a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40658608" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40658608"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406587e0"/>
        <function-ref name="stop" scoped="" ref="0x406588c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406797a0" loc="41:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406797a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40679978"/>
        <function-ref name="receive" scoped="" ref="0x40679a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40679c20" loc="42:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40679c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40679df8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40679ed8"/>
        <function-ref name="receive" scoped="" ref="0x40674010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406740f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406741d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406742b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40674390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40684418" loc="43:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40684418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40684b68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40673068"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40684de0"/>
        <function-ref name="overflow" scoped="" ref="0x406732e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40679330" loc="40:/usr/src/tinyos/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40679330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40679508"/>
        <function-ref name="stop" scoped="" ref="0x406795e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40672ae8" loc="50:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40672ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40672cc0"/>
        <function-ref name="receive" scoped="" ref="0x40672da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x406837b0" loc="53:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x406837b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40683988"/>
        <function-ref name="stop" scoped="" ref="0x40683a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40672398" loc="48:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40672398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40672570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40672f00" loc="51:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40672f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406830f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x406831d0"/>
        <function-ref name="receive" scoped="" ref="0x406832b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40683390"/>
        <function-ref name="receiveDone" scoped="" ref="0x40683470"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40683550"/>
        <function-ref name="sendDone" scoped="" ref="0x40683630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x406abc88" loc="56:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406abc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406aa3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406aa8e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406aa668"/>
        <function-ref name="overflow" scoped="" ref="0x406aab58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x406ab050" loc="55:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x406ab050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406ab228"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406ab308"/>
        <function-ref name="rxDone" scoped="" ref="0x406ab3e8"/>
        <function-ref name="txDone" scoped="" ref="0x406ab4c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406ab5a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406ab688"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406ab768"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406ab848"/>
        <function-ref name="tx" scoped="" ref="0x406ab928"/>
        <function-ref name="rx" scoped="" ref="0x406aba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406726d0" loc="49:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406726d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406728a8"/>
        <function-ref name="stop" scoped="" ref="0x40672988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40683be8" loc="54:/usr/src/tinyos/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40683be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40683dc0"/>
        <function-ref name="stop" scoped="" ref="0x40683ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406bf0b8" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406bf0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406bf290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406bf370"/>
        <function-ref name="rxDone" scoped="" ref="0x406bf450"/>
        <function-ref name="txDone" scoped="" ref="0x406bf530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406bf610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406bf6f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406bf7d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406bf8b0"/>
        <function-ref name="tx" scoped="" ref="0x406bf990"/>
        <function-ref name="rx" scoped="" ref="0x406bfa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x406be760" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x406be760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406be938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406bea18"/>
        <function-ref name="rxDone" scoped="" ref="0x406beaf8"/>
        <function-ref name="txDone" scoped="" ref="0x406bebd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406becb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406bed98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406bee78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406bd010"/>
        <function-ref name="tx" scoped="" ref="0x406bd0f0"/>
        <function-ref name="rx" scoped="" ref="0x406bd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406c0b98" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406c0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c0d70"/>
        <function-ref name="stop" scoped="" ref="0x406c0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406bfcc8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406bfcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406bfea0"/>
        <function-ref name="stop" scoped="" ref="0x406be010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x406be268" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x406be268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406be440"/>
        <function-ref name="stop" scoped="" ref="0x406be520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406c0688" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406c0688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406c0860"/>
        <function-ref name="stop" scoped="" ref="0x406c0940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x406bd9f8" loc="114:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x406bd9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406bdbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x406ba8c0" loc="117:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x406ba8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406baa98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406bab78"/>
        <function-ref name="rxDone" scoped="" ref="0x406bac58"/>
        <function-ref name="txDone" scoped="" ref="0x406bad38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406bae18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406baef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406b9010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406b90f0"/>
        <function-ref name="tx" scoped="" ref="0x406b91d0"/>
        <function-ref name="rx" scoped="" ref="0x406b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406ca010" loc="124:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406ca010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406ca1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x406b94c0" loc="119:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x406b94c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406b9698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x406cb390" loc="122:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x406cb390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x406cb568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x406cb648"/>
        <function-ref name="rxDone" scoped="" ref="0x406cb728"/>
        <function-ref name="txDone" scoped="" ref="0x406cb808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x406cb8e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x406cb9c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x406cbaa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x406cbb88"/>
        <function-ref name="tx" scoped="" ref="0x406cbc68"/>
        <function-ref name="rx" scoped="" ref="0x406cbd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x406ba3a8" loc="116:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x406ba3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406ba580"/>
        <function-ref name="stop" scoped="" ref="0x406ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x406b9910" loc="120:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x406b9910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406b9ae8"/>
        <function-ref name="stop" scoped="" ref="0x406b9bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x406b9e40" loc="121:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x406b9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406cb050"/>
        <function-ref name="stop" scoped="" ref="0x406cb130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x406ca3e0" loc="126:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x406ca3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x406ca5b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x406ca698"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x406ca778"/>
        <function-ref name="actualMicro" scoped="" ref="0x406ca858"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x406ca938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x406cab20" loc="127:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x406cab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x406cacf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x406bde48" loc="115:/usr/src/tinyos/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x406bde48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406ba050"/>
        <function-ref name="stop" scoped="" ref="0x406ba130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40414e50" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40414e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4040d050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4040c218" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4040c218"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403273d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403273d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4040c3f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4040c4d0"/>
        <function-ref name="led1On" scoped="" ref="0x4040c5b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4040c690"/>
        <function-ref name="led3Off" scoped="" ref="0x4040c770"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4040c850"/>
        <function-ref name="get" scoped="" ref="0x4040c930"/>
        <function-ref name="led1Off" scoped="" ref="0x4040ca10"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4040caf0"/>
        <function-ref name="led3On" scoped="" ref="0x4040cbd0"/>
        <function-ref name="led0On" scoped="" ref="0x4040ccb0"/>
        <function-ref name="led2Off" scoped="" ref="0x4040cd90"/>
        <function-ref name="led2On" scoped="" ref="0x4040ce70"/>
        <function-ref name="set" scoped="" ref="0x40413010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403314a0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403314a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40331678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4040b1a8" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4040b1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4040b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40675c48" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40675c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fd3b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406fd8a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406fd628"/>
        <function-ref name="overflow" scoped="" ref="0x406fdb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407166f8" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407166f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40716e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40715350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407150d8"/>
        <function-ref name="overflow" scoped="" ref="0x407155c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406fb490" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406fb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fbbe0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40716110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406fbe58"/>
        <function-ref name="overflow" scoped="" ref="0x40716388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407143f0" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40714b40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40710048"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40714db8"/>
        <function-ref name="overflow" scoped="" ref="0x407102c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4070eb60" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4070eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40722308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407227f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40722580"/>
        <function-ref name="overflow" scoped="" ref="0x40722a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4070f918" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4070f918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4070e088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4070e578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4070e300"/>
        <function-ref name="overflow" scoped="" ref="0x4070e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40721b68" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40721b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4071e308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4071e7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4071e580"/>
        <function-ref name="overflow" scoped="" ref="0x4071ea70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4071b010" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4071b010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4071b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4071b448" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4071b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4071bb98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407370a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4071be10"/>
        <function-ref name="overflow" scoped="" ref="0x40737320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x407375f0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x407375f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40734068"/>
        <function-ref name="test" scoped="" ref="0x407363e8"/>
        <function-ref name="get" scoped="" ref="0x40737c38"/>
        <function-ref name="reset" scoped="" ref="0x40736660"/>
        <function-ref name="getMode" scoped="" ref="0x40734308"/>
        <function-ref name="overflow" scoped="" ref="0x40736170"/>
        <function-ref name="isOn" scoped="" ref="0x40736dc8"/>
        <function-ref name="set" scoped="" ref="0x40737eb0"/>
        <function-ref name="start" scoped="" ref="0x407368d8"/>
        <function-ref name="stop" scoped="" ref="0x40736b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4074d1d8" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4074d1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4073bc68"/>
        <function-ref name="test" scoped="" ref="0x4073b010"/>
        <function-ref name="fired" scoped="" ref="0x4074dd38"/>
        <function-ref name="get" scoped="" ref="0x4074d820"/>
        <function-ref name="reset" scoped="" ref="0x4073b288"/>
        <function-ref name="getMode" scoped="" ref="0x4073bf08"/>
        <function-ref name="isOn" scoped="" ref="0x4073b9f0"/>
        <function-ref name="set" scoped="" ref="0x4074da98"/>
        <function-ref name="start" scoped="" ref="0x4073b500"/>
        <function-ref name="stop" scoped="" ref="0x4073b778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40733878" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40733878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4072f2e0"/>
        <function-ref name="test" scoped="" ref="0x40730668"/>
        <function-ref name="get" scoped="" ref="0x40733ec0"/>
        <function-ref name="reset" scoped="" ref="0x407308e0"/>
        <function-ref name="getMode" scoped="" ref="0x4072f580"/>
        <function-ref name="overflow" scoped="" ref="0x407303f0"/>
        <function-ref name="isOn" scoped="" ref="0x4072f068"/>
        <function-ref name="set" scoped="" ref="0x40730150"/>
        <function-ref name="start" scoped="" ref="0x40730b58"/>
        <function-ref name="stop" scoped="" ref="0x40730dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4073ff08" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4073ff08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4073e9f0"/>
        <function-ref name="test" scoped="" ref="0x40743d08"/>
        <function-ref name="fired" scoped="" ref="0x40743a90"/>
        <function-ref name="force" scoped="" ref="0x4073ef08"/>
        <function-ref name="get" scoped="" ref="0x40743578"/>
        <function-ref name="reset" scoped="" ref="0x4073e010"/>
        <function-ref name="getMode" scoped="" ref="0x4073ec90"/>
        <function-ref name="isOn" scoped="" ref="0x4073e778"/>
        <function-ref name="set" scoped="" ref="0x407437f0"/>
        <function-ref name="start" scoped="" ref="0x4073e288"/>
        <function-ref name="stop" scoped="" ref="0x4073e500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40748b98" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40748b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40745600"/>
        <function-ref name="test" scoped="" ref="0x40746990"/>
        <function-ref name="fired" scoped="" ref="0x40746718"/>
        <function-ref name="force" scoped="" ref="0x40745b18"/>
        <function-ref name="get" scoped="" ref="0x40746200"/>
        <function-ref name="reset" scoped="" ref="0x40746c08"/>
        <function-ref name="getMode" scoped="" ref="0x407458a0"/>
        <function-ref name="isOn" scoped="" ref="0x40745388"/>
        <function-ref name="set" scoped="" ref="0x40746478"/>
        <function-ref name="start" scoped="" ref="0x40746e80"/>
        <function-ref name="stop" scoped="" ref="0x40745110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407546a8" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407546a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407521a0"/>
        <function-ref name="test" scoped="" ref="0x40753528"/>
        <function-ref name="fired" scoped="" ref="0x407532b0"/>
        <function-ref name="get" scoped="" ref="0x40754cf0"/>
        <function-ref name="reset" scoped="" ref="0x407537a0"/>
        <function-ref name="getMode" scoped="" ref="0x40752440"/>
        <function-ref name="isOn" scoped="" ref="0x40753f08"/>
        <function-ref name="set" scoped="" ref="0x40753010"/>
        <function-ref name="start" scoped="" ref="0x40753a18"/>
        <function-ref name="stop" scoped="" ref="0x40753c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407526f8" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407526f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407528d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40745f10" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40745f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407589f0"/>
        <function-ref name="test" scoped="" ref="0x40744d08"/>
        <function-ref name="fired" scoped="" ref="0x40744a90"/>
        <function-ref name="force" scoped="" ref="0x40758f08"/>
        <function-ref name="get" scoped="" ref="0x40744578"/>
        <function-ref name="reset" scoped="" ref="0x40758010"/>
        <function-ref name="getMode" scoped="" ref="0x40758c90"/>
        <function-ref name="isOn" scoped="" ref="0x40758778"/>
        <function-ref name="set" scoped="" ref="0x407447f0"/>
        <function-ref name="start" scoped="" ref="0x40758288"/>
        <function-ref name="stop" scoped="" ref="0x40758500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40752ae8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40752ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40752cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40757320" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40757320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40756d68"/>
        <function-ref name="test" scoped="" ref="0x40756110"/>
        <function-ref name="fired" scoped="" ref="0x40757e80"/>
        <function-ref name="force" scoped="" ref="0x407542c0"/>
        <function-ref name="get" scoped="" ref="0x40757968"/>
        <function-ref name="reset" scoped="" ref="0x40756388"/>
        <function-ref name="getMode" scoped="" ref="0x40754048"/>
        <function-ref name="isOn" scoped="" ref="0x40756af0"/>
        <function-ref name="set" scoped="" ref="0x40757be0"/>
        <function-ref name="start" scoped="" ref="0x40756600"/>
        <function-ref name="stop" scoped="" ref="0x40756878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4074ca80" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4074ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40748500"/>
        <function-ref name="test" scoped="" ref="0x40749888"/>
        <function-ref name="get" scoped="" ref="0x407490f8"/>
        <function-ref name="reset" scoped="" ref="0x40749b00"/>
        <function-ref name="getMode" scoped="" ref="0x407487a0"/>
        <function-ref name="overflow" scoped="" ref="0x40749610"/>
        <function-ref name="isOn" scoped="" ref="0x40748288"/>
        <function-ref name="set" scoped="" ref="0x40749370"/>
        <function-ref name="start" scoped="" ref="0x40749d78"/>
        <function-ref name="stop" scoped="" ref="0x40748010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40712b80" loc="47:/usr/src/tinyos/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40712b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40712d58"/>
        <function-ref name="offset" scoped="" ref="0x40712e38"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40712f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x407a3010" loc="43:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a31e8"/>
        <function-ref name="getPayload" scoped="" ref="0x407a32c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407a33a8"/>
        <function-ref name="cancel" scoped="" ref="0x407a3488"/>
        <function-ref name="sendDone" scoped="" ref="0x407a3568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x407a36f0" loc="44:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407a36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x407a38c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407a3a38" loc="45:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407a3a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407a3c10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407a3cf0"/>
        <function-ref name="led1On" scoped="" ref="0x407a3dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407a3eb0"/>
        <function-ref name="led3Off" scoped="" ref="0x407a2010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407a20f0"/>
        <function-ref name="get" scoped="" ref="0x407a21d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407a22b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407a2390"/>
        <function-ref name="led3On" scoped="" ref="0x407a2470"/>
        <function-ref name="led0On" scoped="" ref="0x407a2550"/>
        <function-ref name="led2Off" scoped="" ref="0x407a2630"/>
        <function-ref name="led2On" scoped="" ref="0x407a2710"/>
        <function-ref name="set" scoped="" ref="0x407a2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x407b9218" loc="54:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x407b9218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407b93f0"/>
        <function-ref name="runTask" scoped="" ref="0x407b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x407a6a28" loc="38:/usr/src/tinyos/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x407a6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x407a6c00"/>
        <function-ref name="offset" scoped="" ref="0x407a6ce0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x407a6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407a5a20" loc="42:/usr/src/tinyos/tos/platforms/ucmini/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407a5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407a5bf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407a5cd8"/>
        <function-ref name="led1On" scoped="" ref="0x407a5db8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407a5e98"/>
        <function-ref name="led3Off" scoped="" ref="0x407c3010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407c30f0"/>
        <function-ref name="get" scoped="" ref="0x407c31d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407c32b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407c3390"/>
        <function-ref name="led3On" scoped="" ref="0x407c3470"/>
        <function-ref name="led0On" scoped="" ref="0x407c3550"/>
        <function-ref name="led2Off" scoped="" ref="0x407c3630"/>
        <function-ref name="led2On" scoped="" ref="0x407c3710"/>
        <function-ref name="set" scoped="" ref="0x407c3870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x407bf480" loc="50:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407bf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bf658"/>
        <function-ref name="isInput" scoped="" ref="0x407bf738"/>
        <function-ref name="toggle" scoped="" ref="0x407bf818"/>
        <function-ref name="isOutput" scoped="" ref="0x407bf8f8"/>
        <function-ref name="get" scoped="" ref="0x407bf9d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bfab8"/>
        <function-ref name="set" scoped="" ref="0x407bfb98"/>
        <function-ref name="clr" scoped="" ref="0x407bfc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x407bd2e0" loc="53:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x407bd2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bd4b8"/>
        <function-ref name="isInput" scoped="" ref="0x407bd598"/>
        <function-ref name="toggle" scoped="" ref="0x407bd678"/>
        <function-ref name="isOutput" scoped="" ref="0x407bd758"/>
        <function-ref name="get" scoped="" ref="0x407bd838"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bd918"/>
        <function-ref name="set" scoped="" ref="0x407bd9f8"/>
        <function-ref name="clr" scoped="" ref="0x407bdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407c0128" loc="46:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407c0128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407c0300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x407bfe68" loc="51:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x407bfe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407be050"/>
        <function-ref name="isInput" scoped="" ref="0x407be130"/>
        <function-ref name="toggle" scoped="" ref="0x407be210"/>
        <function-ref name="isOutput" scoped="" ref="0x407be2f0"/>
        <function-ref name="get" scoped="" ref="0x407be3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407be4b0"/>
        <function-ref name="set" scoped="" ref="0x407be590"/>
        <function-ref name="clr" scoped="" ref="0x407be670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x407c0470" loc="47:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407c0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407c0648"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407c0728"/>
        <function-ref name="led1On" scoped="" ref="0x407c0808"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407c08e8"/>
        <function-ref name="led3Off" scoped="" ref="0x407c09c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407c0aa8"/>
        <function-ref name="get" scoped="" ref="0x407c0b88"/>
        <function-ref name="led1Off" scoped="" ref="0x407c0c68"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407c0d48"/>
        <function-ref name="led3On" scoped="" ref="0x407c0e28"/>
        <function-ref name="led0On" scoped="" ref="0x407c0f08"/>
        <function-ref name="led2Off" scoped="" ref="0x407bf010"/>
        <function-ref name="led2On" scoped="" ref="0x407bf0f0"/>
        <function-ref name="set" scoped="" ref="0x407bf250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x407be860" loc="52:/usr/src/tinyos/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x407be860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bea38"/>
        <function-ref name="isInput" scoped="" ref="0x407beb18"/>
        <function-ref name="toggle" scoped="" ref="0x407bebf8"/>
        <function-ref name="isOutput" scoped="" ref="0x407becd8"/>
        <function-ref name="get" scoped="" ref="0x407bedb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bee98"/>
        <function-ref name="set" scoped="" ref="0x407bd010"/>
        <function-ref name="clr" scoped="" ref="0x407bd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x407c2c20" loc="39:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x407c2c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c2df8"/>
        <function-ref name="isInput" scoped="" ref="0x407c2ed8"/>
        <function-ref name="toggle" scoped="" ref="0x407da010"/>
        <function-ref name="isOutput" scoped="" ref="0x407da0f0"/>
        <function-ref name="get" scoped="" ref="0x407da1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407da2b0"/>
        <function-ref name="set" scoped="" ref="0x407da390"/>
        <function-ref name="clr" scoped="" ref="0x407da470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x407d9a48" loc="42:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x407d9a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d9c20"/>
        <function-ref name="isInput" scoped="" ref="0x407d9d00"/>
        <function-ref name="toggle" scoped="" ref="0x407d9de0"/>
        <function-ref name="isOutput" scoped="" ref="0x407d9ec0"/>
        <function-ref name="get" scoped="" ref="0x407d8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d80f0"/>
        <function-ref name="set" scoped="" ref="0x407d81d0"/>
        <function-ref name="clr" scoped="" ref="0x407d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x407da660" loc="40:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x407da660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407da838"/>
        <function-ref name="isInput" scoped="" ref="0x407da918"/>
        <function-ref name="toggle" scoped="" ref="0x407da9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x407daad8"/>
        <function-ref name="get" scoped="" ref="0x407dabb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407dac98"/>
        <function-ref name="set" scoped="" ref="0x407dad78"/>
        <function-ref name="clr" scoped="" ref="0x407dae58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x407d8450" loc="45:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407d8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d8628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x407d9060" loc="41:/usr/src/tinyos/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x407d9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d9238"/>
        <function-ref name="isInput" scoped="" ref="0x407d9318"/>
        <function-ref name="toggle" scoped="" ref="0x407d93f8"/>
        <function-ref name="isOutput" scoped="" ref="0x407d94d8"/>
        <function-ref name="get" scoped="" ref="0x407d95b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d9698"/>
        <function-ref name="set" scoped="" ref="0x407d9778"/>
        <function-ref name="clr" scoped="" ref="0x407d9858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x407d39e0" loc="60:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x407d39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d3bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40428c30" loc="57:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40428c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40428e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x407d35d8" loc="59:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x407d35d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d37b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x407d3010" loc="58:/usr/src/tinyos/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x407d3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d31e8"/>
        <function-ref name="taskLoop" scoped="" ref="0x407d32c8"/>
        <function-ref name="runNextTask" scoped="" ref="0x407d33a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40389330" loc="48:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40389330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40389508"/>
        <function-ref name="runTask" scoped="" ref="0x403895e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4032cb58" loc="47:/usr/src/tinyos/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4032cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4032cd30"/>
        <function-ref name="taskLoop" scoped="" ref="0x4032ce10"/>
        <function-ref name="runNextTask" scoped="" ref="0x4032cef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403f7010" loc="56:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403f71e8"/>
        <function-ref name="runTask" scoped="" ref="0x403f72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403f7c70" loc="57:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403f7c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403f7e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403f8738" loc="55:/usr/src/tinyos/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403f8738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f8910"/>
        <function-ref name="taskLoop" scoped="" ref="0x403f89f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403f8ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SensorControl" ref="0x4080da00" loc="14:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensorControl" scoped="" ref="0x4080da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensorControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x4080dbd8"/>
        <function-ref name="repeatTimer" scoped="" ref="0x4080dcb8"/>
        <function-ref name="start" scoped="" ref="0x4080dd98"/>
        <function-ref name="stop" scoped="" ref="0x4080de78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40806780" loc="20:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40806780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40805330"/>
        <function-ref name="fired" scoped="" ref="0x4080e520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4080ec28"/>
        <function-ref name="isOneShot" scoped="" ref="0x4080e9d0"/>
        <function-ref name="getdt" scoped="" ref="0x408057e0"/>
        <function-ref name="gett0" scoped="" ref="0x40805588"/>
        <function-ref name="isRunning" scoped="" ref="0x4080e778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40806da8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40805010"/>
        <function-ref name="startOneShot" scoped="" ref="0x4080e048"/>
        <function-ref name="stop" scoped="" ref="0x4080e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x407fa010" loc="9:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x407fa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x407fa1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407fa358" loc="10:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407fa358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407fa530"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407fa610"/>
        <function-ref name="led1On" scoped="" ref="0x407fa6f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407fa7d0"/>
        <function-ref name="led3Off" scoped="" ref="0x407fa8b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407fa990"/>
        <function-ref name="get" scoped="" ref="0x407faa70"/>
        <function-ref name="led1Off" scoped="" ref="0x407fab50"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407fac30"/>
        <function-ref name="led3On" scoped="" ref="0x407fad10"/>
        <function-ref name="led0On" scoped="" ref="0x407fadf0"/>
        <function-ref name="led2Off" scoped="" ref="0x407faed0"/>
        <function-ref name="led2On" scoped="" ref="0x407f9010"/>
        <function-ref name="set" scoped="" ref="0x407f9170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminateControl" ref="0x40805b40" loc="22:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminateControl" scoped="" ref="0x40805b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40805d18"/>
        <function-ref name="stop" scoped="" ref="0x40805df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MobileControl" ref="0x40811108" loc="17:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MobileControl" scoped="" ref="0x40811108"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensorControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x408112e0"/>
        <function-ref name="repeatTimer" scoped="" ref="0x408113c0"/>
        <function-ref name="start" scoped="" ref="0x408114a0"/>
        <function-ref name="stop" scoped="" ref="0x40811580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BaseControl" ref="0x40810b40" loc="13:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseControl" scoped="" ref="0x40810b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x40810d18"/>
        <function-ref name="repeatTimer" scoped="" ref="0x40810df8"/>
        <function-ref name="start" scoped="" ref="0x40810ed8"/>
        <function-ref name="stop" scoped="" ref="0x407f8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MarkerControl" ref="0x408117f0" loc="18:YggdrasilC.nc">
      <component-ref qname="YggdrasilC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MarkerControl" scoped="" ref="0x408117f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensorControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x408119c8"/>
        <function-ref name="repeatTimer" scoped="" ref="0x40811aa8"/>
        <function-ref name="start" scoped="" ref="0x40811b88"/>
        <function-ref name="stop" scoped="" ref="0x40811c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40421da0" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="YggdrasilAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40421da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409468a8"/>
        <function-ref name="fired" scoped="" ref="0x40819b38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40946268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40946010"/>
        <function-ref name="getdt" scoped="" ref="0x40946d58"/>
        <function-ref name="gett0" scoped="" ref="0x40946b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40819d90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408193e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40946588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40819660"/>
        <function-ref name="stop" scoped="" ref="0x408198e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40816e90" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40816e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4082b988"/>
        <function-ref name="fired" scoped="" ref="0x40812c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4082b348"/>
        <function-ref name="isOneShot" scoped="" ref="0x4082b0f0"/>
        <function-ref name="getdt" scoped="" ref="0x4082be38"/>
        <function-ref name="gett0" scoped="" ref="0x4082bbe0"/>
        <function-ref name="isRunning" scoped="" ref="0x40812e88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408124d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4082b668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40812758"/>
        <function-ref name="stop" scoped="" ref="0x408129d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40829750" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40829750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40828c18"/>
        <function-ref name="fired" scoped="" ref="0x408283e8"/>
        <function-ref name="startAt" scoped="" ref="0x408288d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40828660"/>
        <function-ref name="getAlarm" scoped="" ref="0x40828e90"/>
        <function-ref name="start" scoped="" ref="0x40829ea0"/>
        <function-ref name="stop" scoped="" ref="0x40828170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41314868" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41314868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4135dd58"/>
        <function-ref name="fired" scoped="" ref="0x4135d528"/>
        <function-ref name="startAt" scoped="" ref="0x4135da18"/>
        <function-ref name="isRunning" scoped="" ref="0x4135d7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4135c010"/>
        <function-ref name="start" scoped="" ref="0x4135d010"/>
        <function-ref name="stop" scoped="" ref="0x4135d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x4134e2b0" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x4134e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4134cd00"/>
        <function-ref name="test" scoped="" ref="0x4134c0a8"/>
        <function-ref name="fired" scoped="" ref="0x4134ee10"/>
        <function-ref name="force" scoped="" ref="0x4134b288"/>
        <function-ref name="get" scoped="" ref="0x4134e8f8"/>
        <function-ref name="reset" scoped="" ref="0x4134c320"/>
        <function-ref name="getMode" scoped="" ref="0x4134b010"/>
        <function-ref name="isOn" scoped="" ref="0x4134ca88"/>
        <function-ref name="set" scoped="" ref="0x4134eb70"/>
        <function-ref name="start" scoped="" ref="0x4134c598"/>
        <function-ref name="stop" scoped="" ref="0x4134c810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x413538a8" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413538a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41352d58"/>
        <function-ref name="fired" scoped="" ref="0x41352528"/>
        <function-ref name="startAt" scoped="" ref="0x41352a18"/>
        <function-ref name="isRunning" scoped="" ref="0x413527a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41350010"/>
        <function-ref name="start" scoped="" ref="0x41352010"/>
        <function-ref name="stop" scoped="" ref="0x413522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41353470" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41353470"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41353648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x413502e0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x413502e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4134fd30"/>
        <function-ref name="test" scoped="" ref="0x4134f0d8"/>
        <function-ref name="get" scoped="" ref="0x41350928"/>
        <function-ref name="reset" scoped="" ref="0x4134f350"/>
        <function-ref name="getMode" scoped="" ref="0x4134e010"/>
        <function-ref name="overflow" scoped="" ref="0x41350e40"/>
        <function-ref name="isOn" scoped="" ref="0x4134fab8"/>
        <function-ref name="set" scoped="" ref="0x41350ba0"/>
        <function-ref name="start" scoped="" ref="0x4134f5c8"/>
        <function-ref name="stop" scoped="" ref="0x4134f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4084acd8" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4084acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40846778"/>
        <function-ref name="test" scoped="" ref="0x40847b00"/>
        <function-ref name="get" scoped="" ref="0x40847370"/>
        <function-ref name="reset" scoped="" ref="0x40847d78"/>
        <function-ref name="getMode" scoped="" ref="0x40846a18"/>
        <function-ref name="overflow" scoped="" ref="0x40847888"/>
        <function-ref name="isOn" scoped="" ref="0x40846500"/>
        <function-ref name="set" scoped="" ref="0x408475e8"/>
        <function-ref name="start" scoped="" ref="0x40846010"/>
        <function-ref name="stop" scoped="" ref="0x40846288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x4085c490" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x4085c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4085bee0"/>
        <function-ref name="test" scoped="" ref="0x4085b288"/>
        <function-ref name="fired" scoped="" ref="0x4085b010"/>
        <function-ref name="get" scoped="" ref="0x4085cad8"/>
        <function-ref name="reset" scoped="" ref="0x4085b500"/>
        <function-ref name="getMode" scoped="" ref="0x408591c0"/>
        <function-ref name="isOn" scoped="" ref="0x4085bc68"/>
        <function-ref name="set" scoped="" ref="0x4085cd50"/>
        <function-ref name="start" scoped="" ref="0x4085b778"/>
        <function-ref name="stop" scoped="" ref="0x4085b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4085f100" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4085f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4085db50"/>
        <function-ref name="test" scoped="" ref="0x4085fed8"/>
        <function-ref name="fired" scoped="" ref="0x4085fc60"/>
        <function-ref name="force" scoped="" ref="0x4085c088"/>
        <function-ref name="get" scoped="" ref="0x4085f748"/>
        <function-ref name="reset" scoped="" ref="0x4085d170"/>
        <function-ref name="getMode" scoped="" ref="0x4085ddf0"/>
        <function-ref name="isOn" scoped="" ref="0x4085d8d8"/>
        <function-ref name="set" scoped="" ref="0x4085f9c0"/>
        <function-ref name="start" scoped="" ref="0x4085d3e8"/>
        <function-ref name="stop" scoped="" ref="0x4085d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40855e88" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40855e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4086d908"/>
        <function-ref name="test" scoped="" ref="0x40853c88"/>
        <function-ref name="fired" scoped="" ref="0x40853a10"/>
        <function-ref name="force" scoped="" ref="0x4086de20"/>
        <function-ref name="get" scoped="" ref="0x408534f8"/>
        <function-ref name="reset" scoped="" ref="0x40853f00"/>
        <function-ref name="getMode" scoped="" ref="0x4086dba8"/>
        <function-ref name="isOn" scoped="" ref="0x4086d690"/>
        <function-ref name="set" scoped="" ref="0x40853770"/>
        <function-ref name="start" scoped="" ref="0x4086d1a0"/>
        <function-ref name="stop" scoped="" ref="0x4086d418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40864a90" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40864a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40864c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4086c248" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4086c248"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4086bca0"/>
        <function-ref name="test" scoped="" ref="0x4086b048"/>
        <function-ref name="fired" scoped="" ref="0x4086cda8"/>
        <function-ref name="force" scoped="" ref="0x40869288"/>
        <function-ref name="get" scoped="" ref="0x4086c890"/>
        <function-ref name="reset" scoped="" ref="0x4086b2c0"/>
        <function-ref name="getMode" scoped="" ref="0x40869010"/>
        <function-ref name="isOn" scoped="" ref="0x4086ba28"/>
        <function-ref name="set" scoped="" ref="0x4086cb08"/>
        <function-ref name="start" scoped="" ref="0x4086b538"/>
        <function-ref name="stop" scoped="" ref="0x4086b7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40859d50" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40859d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408557f0"/>
        <function-ref name="test" scoped="" ref="0x40856b70"/>
        <function-ref name="get" scoped="" ref="0x408563e0"/>
        <function-ref name="reset" scoped="" ref="0x40856de8"/>
        <function-ref name="getMode" scoped="" ref="0x40855a90"/>
        <function-ref name="overflow" scoped="" ref="0x408568f8"/>
        <function-ref name="isOn" scoped="" ref="0x40855578"/>
        <function-ref name="set" scoped="" ref="0x40856658"/>
        <function-ref name="start" scoped="" ref="0x40855088"/>
        <function-ref name="stop" scoped="" ref="0x40855300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40864e80" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40864e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40863070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40867ac0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40867ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40864538"/>
        <function-ref name="test" scoped="" ref="0x408658b0"/>
        <function-ref name="fired" scoped="" ref="0x40865638"/>
        <function-ref name="get" scoped="" ref="0x40865120"/>
        <function-ref name="reset" scoped="" ref="0x40865b28"/>
        <function-ref name="getMode" scoped="" ref="0x408647d8"/>
        <function-ref name="isOn" scoped="" ref="0x408642c0"/>
        <function-ref name="set" scoped="" ref="0x40865398"/>
        <function-ref name="start" scoped="" ref="0x40865da0"/>
        <function-ref name="stop" scoped="" ref="0x40864048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40869680" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40869680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408671a0"/>
        <function-ref name="test" scoped="" ref="0x40868528"/>
        <function-ref name="fired" scoped="" ref="0x408682b0"/>
        <function-ref name="force" scoped="" ref="0x408676b8"/>
        <function-ref name="get" scoped="" ref="0x40869cc8"/>
        <function-ref name="reset" scoped="" ref="0x408687a0"/>
        <function-ref name="getMode" scoped="" ref="0x40867440"/>
        <function-ref name="isOn" scoped="" ref="0x40868f08"/>
        <function-ref name="set" scoped="" ref="0x40868010"/>
        <function-ref name="start" scoped="" ref="0x40868a18"/>
        <function-ref name="stop" scoped="" ref="0x40868c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408bde30" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408bde30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408ba590"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408baa80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408ba808"/>
        <function-ref name="overflow" scoped="" ref="0x408bacf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408b9d70" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408b9d70"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408b8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408b8270" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408b8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408b89c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408b8eb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408b8c38"/>
        <function-ref name="overflow" scoped="" ref="0x408b6150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x408b6420" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x408b6420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408b5ee0"/>
        <function-ref name="test" scoped="" ref="0x408b5288"/>
        <function-ref name="get" scoped="" ref="0x408b6a68"/>
        <function-ref name="reset" scoped="" ref="0x408b5500"/>
        <function-ref name="getMode" scoped="" ref="0x408b41c0"/>
        <function-ref name="overflow" scoped="" ref="0x408b5010"/>
        <function-ref name="isOn" scoped="" ref="0x408b5c68"/>
        <function-ref name="set" scoped="" ref="0x408b6ce0"/>
        <function-ref name="start" scoped="" ref="0x408b5778"/>
        <function-ref name="stop" scoped="" ref="0x408b59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408cd5f8" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408cd5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408cdd48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408ca288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408ca010"/>
        <function-ref name="overflow" scoped="" ref="0x408ca500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x408c7de0" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x408c7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408c6570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408c6a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408c67e8"/>
        <function-ref name="overflow" scoped="" ref="0x408c6cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408c8b70" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408c8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408c7308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408c77f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x408c7580"/>
        <function-ref name="overflow" scoped="" ref="0x408c7a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4135b240" loc="61:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4135b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4135a708"/>
        <function-ref name="fired" scoped="" ref="0x4135bea8"/>
        <function-ref name="startAt" scoped="" ref="0x4135a3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4135a150"/>
        <function-ref name="getAlarm" scoped="" ref="0x4135a980"/>
        <function-ref name="start" scoped="" ref="0x4135b990"/>
        <function-ref name="stop" scoped="" ref="0x4135bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x41359f10" loc="73:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x41359f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413563e8"/>
        <function-ref name="fired" scoped="" ref="0x41357b98"/>
        <function-ref name="startAt" scoped="" ref="0x413560a8"/>
        <function-ref name="isRunning" scoped="" ref="0x41357e10"/>
        <function-ref name="getAlarm" scoped="" ref="0x41356660"/>
        <function-ref name="start" scoped="" ref="0x41357680"/>
        <function-ref name="stop" scoped="" ref="0x41357920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4135acd0" loc="68:/usr/src/tinyos/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4135acd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41359438"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41359928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x413596b0"/>
        <function-ref name="overflow" scoped="" ref="0x41359ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x408ffd08" loc="74:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x408ffd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408ffee0"/>
        <function-ref name="runTask" scoped="" ref="0x408fd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40900398" loc="49:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40900398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408ff840"/>
        <function-ref name="fired" scoped="" ref="0x408ff010"/>
        <function-ref name="startAt" scoped="" ref="0x408ff500"/>
        <function-ref name="isRunning" scoped="" ref="0x408ff288"/>
        <function-ref name="getAlarm" scoped="" ref="0x408ffab8"/>
        <function-ref name="start" scoped="" ref="0x40900ae8"/>
        <function-ref name="stop" scoped="" ref="0x40900d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408f80a0" loc="48:/usr/src/tinyos/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408f80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40901b88"/>
        <function-ref name="fired" scoped="" ref="0x408f8e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40901548"/>
        <function-ref name="isOneShot" scoped="" ref="0x409012f0"/>
        <function-ref name="getdt" scoped="" ref="0x40900048"/>
        <function-ref name="gett0" scoped="" ref="0x40901de0"/>
        <function-ref name="isRunning" scoped="" ref="0x40901098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408f86c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40901868"/>
        <function-ref name="startOneShot" scoped="" ref="0x408f8948"/>
        <function-ref name="stop" scoped="" ref="0x408f8bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4092bbc8" loc="71:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4092bbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4092bda0"/>
        <function-ref name="runTask" scoped="" ref="0x4092be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4092e968" loc="49:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4092e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4092b4c8"/>
        <function-ref name="fired" scoped="" ref="0x4092c768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4092ce70"/>
        <function-ref name="isOneShot" scoped="" ref="0x4092cc18"/>
        <function-ref name="getdt" scoped="" ref="0x4092b978"/>
        <function-ref name="gett0" scoped="" ref="0x4092b720"/>
        <function-ref name="isRunning" scoped="" ref="0x4092c9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4092c010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4092b1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4092c290"/>
        <function-ref name="stop" scoped="" ref="0x4092c510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40918600" loc="48:/usr/src/tinyos/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40918600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4092e1a8"/>
        <function-ref name="fired" scoped="" ref="0x409303d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40930b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x409308a8"/>
        <function-ref name="getdt" scoped="" ref="0x4092e678"/>
        <function-ref name="gett0" scoped="" ref="0x4092e410"/>
        <function-ref name="isRunning" scoped="" ref="0x40930640"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40918c38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40930e40"/>
        <function-ref name="startOneShot" scoped="" ref="0x40918ec8"/>
        <function-ref name="stop" scoped="" ref="0x40930170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BaseControl" ref="0x40945eb0" loc="5:./Sensor/99Base/BaseC.nc">
      <component-ref qname="BaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseControl" scoped="" ref="0x40945eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x409420c0"/>
        <function-ref name="repeatTimer" scoped="" ref="0x409421a0"/>
        <function-ref name="start" scoped="" ref="0x40942280"/>
        <function-ref name="stop" scoped="" ref="0x40942360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x4094c1a0" loc="46:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x4094c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x4094c378"/>
        <function-ref name="setRoot" scoped="" ref="0x4094c458"/>
        <function-ref name="unsetRoot" scoped="" ref="0x4094c538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CO2S100Rev" ref="0x4093b940" loc="29:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CO2S100Rev" scoped="" ref="0x4093b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093bb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MAXCO2Rev" ref="0x4093bd20" loc="30:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAXCO2Rev" scoped="" ref="0x4093bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093bef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x4094fa78" loc="45:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x4094fa78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4094fc50"/>
        <function-ref name="setOrigin" scoped="" ref="0x4094fd30"/>
        <function-ref name="setType" scoped="" ref="0x4094fe10"/>
        <function-ref name="getOrigin" scoped="" ref="0x4094fef0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40953010"/>
        <function-ref name="getType" scoped="" ref="0x409530f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x4093fa80" loc="15:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x4093fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4093fc58"/>
        <function-ref name="stopDone" scoped="" ref="0x4093fd38"/>
        <function-ref name="start" scoped="" ref="0x4093fe18"/>
        <function-ref name="stop" scoped="" ref="0x4093fef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="USRev" ref="0x409380b8" loc="35:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USRev" scoped="" ref="0x409380b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40938290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x4095ef10" loc="59:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x4095ef10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4095c108"/>
        <function-ref name="runTask" scoped="" ref="0x4095c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DUMMYRev" ref="0x40955088" loc="40:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DUMMYRev" scoped="" ref="0x40955088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40955360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PIRRev" ref="0x4093cd40" loc="26:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PIRRev" scoped="" ref="0x4093cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093cf18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMReceive" ref="0x40955568" loc="42:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMReceive" scoped="" ref="0x40955568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40955740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="baseSendTask" ref="0x4095c738" loc="60:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="baseSendTask" scoped="" ref="0x4095c738"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4095c910"/>
        <function-ref name="runTask" scoped="" ref="0x4095c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Snoop" ref="0x4093d9a8" loc="21:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4093d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x4093f3a0" loc="14:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x4093f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4093f578"/>
        <function-ref name="stopDone" scoped="" ref="0x4093f658"/>
        <function-ref name="start" scoped="" ref="0x4093f738"/>
        <function-ref name="stop" scoped="" ref="0x4093f818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4093d270" loc="20:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4093d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4093d448"/>
        <function-ref name="getPayload" scoped="" ref="0x4093d528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4093d608"/>
        <function-ref name="cancel" scoped="" ref="0x4093d6e8"/>
        <function-ref name="sendDone" scoped="" ref="0x4093d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VOCSRev" ref="0x4093a110" loc="31:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VOCSRev" scoped="" ref="0x4093a110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093a2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x40962da0" loc="49:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x40962da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40947e78"/>
        <function-ref name="maxSize" scoped="" ref="0x40947890"/>
        <function-ref name="empty" scoped="" ref="0x409473e0"/>
        <function-ref name="put" scoped="" ref="0x40947ae8"/>
        <function-ref name="size" scoped="" ref="0x40947638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CO2Rev" ref="0x4093b558" loc="28:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CO2Rev" scoped="" ref="0x4093b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093b730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x40955948" loc="44:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x40955948"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40955b20"/>
        <function-ref name="getPayload" scoped="" ref="0x40955c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40955ce0"/>
        <function-ref name="cancel" scoped="" ref="0x40955dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40955ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x4093e178" loc="16:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x4093e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4093e350"/>
        <function-ref name="stop" scoped="" ref="0x4093e430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPlugRev" ref="0x40938490" loc="36:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPlugRev" scoped="" ref="0x40938490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40938668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckRev" ref="0x4093dd68" loc="22:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckRev" scoped="" ref="0x4093dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="POWRev" ref="0x4093b118" loc="27:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="POWRev" scoped="" ref="0x4093b118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093b370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4095f550" loc="53:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4095f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4095f728"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4095f808"/>
        <function-ref name="led1On" scoped="" ref="0x4095f8e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4095f9c8"/>
        <function-ref name="led3Off" scoped="" ref="0x4095faa8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4095fb88"/>
        <function-ref name="get" scoped="" ref="0x4095fc68"/>
        <function-ref name="led1Off" scoped="" ref="0x4095fd48"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4095fe28"/>
        <function-ref name="led3On" scoped="" ref="0x4095ff08"/>
        <function-ref name="led0On" scoped="" ref="0x4095e010"/>
        <function-ref name="led2Off" scoped="" ref="0x4095e0f0"/>
        <function-ref name="led2On" scoped="" ref="0x4095e1d0"/>
        <function-ref name="set" scoped="" ref="0x4095e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ThermoLoggerRev" ref="0x4093acd8" loc="34:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ThermoLoggerRev" scoped="" ref="0x4093acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093aeb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="THRev" ref="0x4093c5b8" loc="24:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="THRev" scoped="" ref="0x4093c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093c790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPlug2Rev" ref="0x40938870" loc="37:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPlug2Rev" scoped="" ref="0x40938870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40938a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BaseRev" ref="0x4093c200" loc="23:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseRev" scoped="" ref="0x4093c200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093c3d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TH20Rev" ref="0x4093c980" loc="25:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TH20Rev" scoped="" ref="0x4093c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093cb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MARKERRev" ref="0x40938c50" loc="39:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MARKERRev" scoped="" ref="0x40938c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40938e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BaseControl" ref="0x40942c38" loc="10:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BaseControl" scoped="" ref="0x40942c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BaseControl"/>
      </instance>
      <interface-functions>
        <function-ref name="oneShotTimer" scoped="" ref="0x40942e10"/>
        <function-ref name="repeatTimer" scoped="" ref="0x40942ef0"/>
        <function-ref name="start" scoped="" ref="0x4093f010"/>
        <function-ref name="stop" scoped="" ref="0x4093f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4093e5c8" loc="17:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4093e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4093e7a0"/>
        <function-ref name="source" scoped="" ref="0x4093e880"/>
        <function-ref name="address" scoped="" ref="0x4093e960"/>
        <function-ref name="destination" scoped="" ref="0x4093ea40"/>
        <function-ref name="setSource" scoped="" ref="0x4093eb20"/>
        <function-ref name="setDestination" scoped="" ref="0x4093ec00"/>
        <function-ref name="type" scoped="" ref="0x4093ece0"/>
        <function-ref name="setType" scoped="" ref="0x4093edc0"/>
        <function-ref name="isForMe" scoped="" ref="0x4093eea0"/>
        <function-ref name="setGroup" scoped="" ref="0x4093d010"/>
        <function-ref name="localGroup" scoped="" ref="0x4093d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ETYPERev" ref="0x4093a8c0" loc="33:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ETYPERev" scoped="" ref="0x4093a8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093aa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x40948ab8" loc="48:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x40948ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40952808"/>
        <function-ref name="enqueue" scoped="" ref="0x40952ee8"/>
        <function-ref name="element" scoped="" ref="0x4094d270"/>
        <function-ref name="maxSize" scoped="" ref="0x409525b0"/>
        <function-ref name="dequeue" scoped="" ref="0x40952b78"/>
        <function-ref name="empty" scoped="" ref="0x40952100"/>
        <function-ref name="size" scoped="" ref="0x40952358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOLARRev" ref="0x4093a4e8" loc="32:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SOLARRev" scoped="" ref="0x4093a4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40961338" loc="52:./Sensor/99Base/BaseP.nc">
      <component-ref qname="BaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40961338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40960e38"/>
        <function-ref name="fired" scoped="" ref="0x409600f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409607f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x409605a0"/>
        <function-ref name="getdt" scoped="" ref="0x4095f310"/>
        <function-ref name="gett0" scoped="" ref="0x4095f0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40960348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40961960"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40960b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40961be0"/>
        <function-ref name="stop" scoped="" ref="0x40961e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409aa030" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="BaseC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409aa030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409a8b38"/>
        <function-ref name="fired" scoped="" ref="0x409aadb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409a84f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x409a82a0"/>
        <function-ref name="getdt" scoped="" ref="0x409a7010"/>
        <function-ref name="gett0" scoped="" ref="0x409a8d90"/>
        <function-ref name="isRunning" scoped="" ref="0x409a8048"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409aa658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409a8818"/>
        <function-ref name="startOneShot" scoped="" ref="0x409aa8d8"/>
        <function-ref name="stop" scoped="" ref="0x409aab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x409ce010" loc="33:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x409ce010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x409ce1e8"/>
        <function-ref name="setRoot" scoped="" ref="0x409ce2c8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x409ce3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x409bc980" loc="28:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x409bc980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x409bcb58"/>
        <function-ref name="setOrigin" scoped="" ref="0x409bcc38"/>
        <function-ref name="setType" scoped="" ref="0x409bcd18"/>
        <function-ref name="getOrigin" scoped="" ref="0x409bcdf8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x409bced8"/>
        <function-ref name="getType" scoped="" ref="0x409bb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x409baec0" loc="25:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x409baec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x409bc0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x409bc240" loc="27:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x409bc240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409bc418"/>
        <function-ref name="payloadLength" scoped="" ref="0x409bc4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x409bc5d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409bc6b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409bc798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x409bd250" loc="24:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x409bd250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409bd428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409be178" loc="22:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409be178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409be350"/>
        <function-ref name="getPayload" scoped="" ref="0x409be430"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409be510"/>
        <function-ref name="cancel" scoped="" ref="0x409be5f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409be6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x409c82d0" loc="31:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x409c82d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x409c84a8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x409c8588"/>
        <function-ref name="numNeighbors" scoped="" ref="0x409c8668"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x409c8748"/>
        <function-ref name="getEtx" scoped="" ref="0x409c8828"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x409c8908"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x409c89e8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x409c8ac8"/>
        <function-ref name="getParent" scoped="" ref="0x409c8ba8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x409c8c88"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x409c8d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409beb88" loc="23:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409beb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409bed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x409b7b68" loc="32:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x409b7b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x409b7d40"/>
        <function-ref name="setClientCongested" scoped="" ref="0x409b7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Talk" ref="0x409ceee8" loc="34:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Talk" scoped="" ref="0x409ceee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Talk"/>
      </instance>
      <interface-functions>
        <function-ref name="get_s71" scoped="" ref="0x409c70e0"/>
        <function-ref name="get_r71" scoped="" ref="0x409c71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x409cfe70" loc="29:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x409cfe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x409b9070"/>
        <function-ref name="option" scoped="" ref="0x409b9150"/>
        <function-ref name="setEtx" scoped="" ref="0x409b9230"/>
        <function-ref name="setOrigin" scoped="" ref="0x409b9310"/>
        <function-ref name="clearOption" scoped="" ref="0x409b93f0"/>
        <function-ref name="getEtx" scoped="" ref="0x409b94d0"/>
        <function-ref name="getOrigin" scoped="" ref="0x409b95b0"/>
        <function-ref name="setType" scoped="" ref="0x409b9690"/>
        <function-ref name="setOption" scoped="" ref="0x409b9770"/>
        <function-ref name="matchPacket" scoped="" ref="0x409b9850"/>
        <function-ref name="getThl" scoped="" ref="0x409b9930"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x409b9a10"/>
        <function-ref name="matchInstance" scoped="" ref="0x409b9af0"/>
        <function-ref name="getType" scoped="" ref="0x409b9c50"/>
        <function-ref name="setThl" scoped="" ref="0x409b9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409c0a28" loc="21:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409c0a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409c0c00"/>
        <function-ref name="stop" scoped="" ref="0x409c0ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x409c7eb0" loc="38:./net/ctp/CollectionC_sonno.nc">
      <component-ref qname="CollectionC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x409c7eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x409c6188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x409de8e0" loc="81:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x409de8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x409deab8"/>
        <function-ref name="setRoot" scoped="" ref="0x409deb98"/>
        <function-ref name="unsetRoot" scoped="" ref="0x409dec78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x409e12d8" loc="75:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x409e12d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x409e14b0"/>
        <function-ref name="setOrigin" scoped="" ref="0x409e1590"/>
        <function-ref name="setType" scoped="" ref="0x409e1670"/>
        <function-ref name="getOrigin" scoped="" ref="0x409e1750"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x409e1830"/>
        <function-ref name="getType" scoped="" ref="0x409e1910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x409d9a58" loc="79:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x409d9a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x409d9c30"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x409d9d10"/>
        <function-ref name="txNoAck" scoped="" ref="0x409d9df0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x409d9ed0"/>
        <function-ref name="evicted" scoped="" ref="0x409de010"/>
        <function-ref name="clearDLQ" scoped="" ref="0x409de0f0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x409de1d0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x409de2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x409e27a8" loc="72:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x409e27a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x409e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x409e2b00" loc="74:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x409e2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e2cd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409e2db8"/>
        <function-ref name="getPayload" scoped="" ref="0x409e2e98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409e1010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409e10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x409e2100" loc="71:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x409e2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e22d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409e3028" loc="69:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409e3028"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e3200"/>
        <function-ref name="getPayload" scoped="" ref="0x409e32e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409e33c0"/>
        <function-ref name="cancel" scoped="" ref="0x409e34a0"/>
        <function-ref name="sendDone" scoped="" ref="0x409e3580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x409e0ae0" loc="78:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x409e0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x409e0cb8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x409e0d98"/>
        <function-ref name="numNeighbors" scoped="" ref="0x409e0e78"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x409df010"/>
        <function-ref name="getEtx" scoped="" ref="0x409df0f0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x409df1d0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x409df2b0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x409df390"/>
        <function-ref name="getParent" scoped="" ref="0x409df470"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x409df550"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x409df630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409e3a38" loc="70:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409e3a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409e3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x409de478" loc="80:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x409de478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x409de650"/>
        <function-ref name="setClientCongested" scoped="" ref="0x409de730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Talk" ref="0x409dede8" loc="82:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Talk" scoped="" ref="0x409dede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Talk"/>
      </instance>
      <interface-functions>
        <function-ref name="get_s71" scoped="" ref="0x409dd050"/>
        <function-ref name="get_r71" scoped="" ref="0x409dd130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x409e1ab0" loc="76:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x409e1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x409e1c88"/>
        <function-ref name="option" scoped="" ref="0x409e1d68"/>
        <function-ref name="setEtx" scoped="" ref="0x409e1e48"/>
        <function-ref name="setOrigin" scoped="" ref="0x409e1f28"/>
        <function-ref name="clearOption" scoped="" ref="0x409e0018"/>
        <function-ref name="getEtx" scoped="" ref="0x409e00f8"/>
        <function-ref name="getOrigin" scoped="" ref="0x409e01d8"/>
        <function-ref name="setType" scoped="" ref="0x409e02b8"/>
        <function-ref name="setOption" scoped="" ref="0x409e0398"/>
        <function-ref name="matchPacket" scoped="" ref="0x409e0478"/>
        <function-ref name="getThl" scoped="" ref="0x409e0558"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x409e0638"/>
        <function-ref name="matchInstance" scoped="" ref="0x409e0718"/>
        <function-ref name="getType" scoped="" ref="0x409e0878"/>
        <function-ref name="setThl" scoped="" ref="0x409e0958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409c68e8" loc="68:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409c68e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409c6ac0"/>
        <function-ref name="stop" scoped="" ref="0x409c6ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x409dd638" loc="86:./net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x409dd638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x409dd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409f7060" loc="30:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409f7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409f7238"/>
        <function-ref name="stopDone" scoped="" ref="0x409f7318"/>
        <function-ref name="start" scoped="" ref="0x409f73f8"/>
        <function-ref name="stop" scoped="" ref="0x409f74d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x409f4120" loc="35:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x409f4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x409f42f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x409f7938" loc="32:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x409f7938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f7b10"/>
        <function-ref name="getPayload" scoped="" ref="0x409f7bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409f7cd0"/>
        <function-ref name="cancel" scoped="" ref="0x409f7db0"/>
        <function-ref name="sendDone" scoped="" ref="0x409f7e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x409f69b8" loc="34:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x409f69b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409f6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x409f4478" loc="37:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x409f4478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f4650"/>
        <function-ref name="payloadLength" scoped="" ref="0x409f4730"/>
        <function-ref name="getPayload" scoped="" ref="0x409f4810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409f48f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409f49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x409ed568" loc="41:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x409ed568"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x409ed740"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x409ed820"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x409ed900"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x409ed9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409f6320" loc="33:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409f6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409f64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40a06c68" loc="44:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a06c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409f07a0"/>
        <function-ref name="clear" scoped="" ref="0x409f0b50"/>
        <function-ref name="isValid" scoped="" ref="0x409f03f0"/>
        <function-ref name="set" scoped="" ref="0x409f0f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x409f3850" loc="40:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409f3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x409f3a28"/>
        <function-ref name="noAck" scoped="" ref="0x409f3b08"/>
        <function-ref name="wasAcked" scoped="" ref="0x409f3be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x409f1010" loc="42:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x409f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x409f11e8"/>
        <function-ref name="setRetries" scoped="" ref="0x409f12c8"/>
        <function-ref name="getRetries" scoped="" ref="0x409f13a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x409f1488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x409f1568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x409f4b68" loc="38:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x409f4b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x409f4d40"/>
        <function-ref name="source" scoped="" ref="0x409f4e20"/>
        <function-ref name="address" scoped="" ref="0x409f4f00"/>
        <function-ref name="destination" scoped="" ref="0x409f3010"/>
        <function-ref name="setSource" scoped="" ref="0x409f30f0"/>
        <function-ref name="setDestination" scoped="" ref="0x409f31d0"/>
        <function-ref name="type" scoped="" ref="0x409f32b0"/>
        <function-ref name="setType" scoped="" ref="0x409f3390"/>
        <function-ref name="isForMe" scoped="" ref="0x409f3470"/>
        <function-ref name="setGroup" scoped="" ref="0x409f3550"/>
        <function-ref name="localGroup" scoped="" ref="0x409f3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409e8650" loc="45:/usr/src/tinyos/tos/platforms/ucmini/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409e8650"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a03170"/>
        <function-ref name="clear" scoped="" ref="0x40a03520"/>
        <function-ref name="isValid" scoped="" ref="0x409e8da0"/>
        <function-ref name="set" scoped="" ref="0x40a038d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a02358" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a02358"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a02530"/>
        <function-ref name="stopDone" scoped="" ref="0x40a02610"/>
        <function-ref name="start" scoped="" ref="0x40a026f0"/>
        <function-ref name="stop" scoped="" ref="0x40a027d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a18c40" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a18c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a13818"/>
        <function-ref name="get" scoped="" ref="0x40a13558"/>
        <function-ref name="isSet" scoped="" ref="0x40a13298"/>
        <function-ref name="set" scoped="" ref="0x40a13ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40a0d4d0" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a0d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a0c010"/>
        <function-ref name="clear" scoped="" ref="0x40a0c3c0"/>
        <function-ref name="isValid" scoped="" ref="0x40a0dc20"/>
        <function-ref name="set" scoped="" ref="0x40a0c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x409fe3c0" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x409fe3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x409fe598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x409fd550" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x409fd550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fd728"/>
        <function-ref name="payloadLength" scoped="" ref="0x409fd808"/>
        <function-ref name="getPayload" scoped="" ref="0x409fd8e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fd9c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409fdaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40a02c30" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a02c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a02e08"/>
        <function-ref name="getPayload" scoped="" ref="0x40a02ee8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409ff010"/>
        <function-ref name="cancel" scoped="" ref="0x409ff0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409ff1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x409ffcd0" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x409ffcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ffea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409f88d8" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409f88d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a184b8"/>
        <function-ref name="get" scoped="" ref="0x40a181f8"/>
        <function-ref name="isSet" scoped="" ref="0x409f8f20"/>
        <function-ref name="set" scoped="" ref="0x40a18778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x409fbeb8" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x409fbeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x409fa0c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x409fa1a0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x409fa280"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x409fa360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409ff638" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409ff638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ff810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40a11ac8" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a11ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a0f5e0"/>
        <function-ref name="clear" scoped="" ref="0x40a0f990"/>
        <function-ref name="isValid" scoped="" ref="0x40a0f230"/>
        <function-ref name="set" scoped="" ref="0x40a0fd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a12ee0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a12ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a11578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a16508" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a16508"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409f80f8"/>
        <function-ref name="get" scoped="" ref="0x40a16e10"/>
        <function-ref name="isSet" scoped="" ref="0x40a16b50"/>
        <function-ref name="set" scoped="" ref="0x409f83b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x409fb930" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409fb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x409fbb08"/>
        <function-ref name="noAck" scoped="" ref="0x409fbbe8"/>
        <function-ref name="wasAcked" scoped="" ref="0x409fbcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x409feac0" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x409feac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x409fa508" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x409fa508"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x409fa6e0"/>
        <function-ref name="setRetries" scoped="" ref="0x409fa7c0"/>
        <function-ref name="getRetries" scoped="" ref="0x409fa8a0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x409fa980"/>
        <function-ref name="wasDelivered" scoped="" ref="0x409faa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x409fdc40" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x409fdc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x409fde18"/>
        <function-ref name="source" scoped="" ref="0x409fdef8"/>
        <function-ref name="address" scoped="" ref="0x409fb010"/>
        <function-ref name="destination" scoped="" ref="0x409fb0f0"/>
        <function-ref name="setSource" scoped="" ref="0x409fb1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x409fb2b0"/>
        <function-ref name="type" scoped="" ref="0x409fb390"/>
        <function-ref name="setType" scoped="" ref="0x409fb470"/>
        <function-ref name="isForMe" scoped="" ref="0x409fb550"/>
        <function-ref name="setGroup" scoped="" ref="0x409fb630"/>
        <function-ref name="localGroup" scoped="" ref="0x409fb710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40a19e70" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40a19e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x409f90e0"/>
        <function-ref name="setChannel" scoped="" ref="0x409f91c0"/>
        <function-ref name="getChannel" scoped="" ref="0x409f92a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a10ce8" loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a10ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a10ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x409fd1f8" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x409fd1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fd3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a2a140" loc="42:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a2a140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a2a318"/>
        <function-ref name="stopDone" scoped="" ref="0x40a2a3f8"/>
        <function-ref name="start" scoped="" ref="0x40a2a4d8"/>
        <function-ref name="stop" scoped="" ref="0x40a2a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a33580" loc="81:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a33580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a32170"/>
        <function-ref name="get" scoped="" ref="0x40a33e88"/>
        <function-ref name="isSet" scoped="" ref="0x40a33bc8"/>
        <function-ref name="set" scoped="" ref="0x40a32430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40a25778" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40a25778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40a25950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x40a1deb0" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x40a1deb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a24188"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a24268"/>
        <function-ref name="request" scoped="" ref="0x40a24348"/>
        <function-ref name="granted" scoped="" ref="0x40a24428"/>
        <function-ref name="isOwner" scoped="" ref="0x40a24508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40a281b0" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40a281b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40a28388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40a2aa18" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a2aa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a2abf0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a2acd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a2adb0"/>
        <function-ref name="cancel" scoped="" ref="0x40a2ae90"/>
        <function-ref name="sendDone" scoped="" ref="0x40a29010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40a29b10" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40a29b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a29ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40a37098" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40a37098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40a37270"/>
        <function-ref name="address" scoped="" ref="0x40a37350"/>
        <function-ref name="destination" scoped="" ref="0x40a37430"/>
        <function-ref name="setSource" scoped="" ref="0x40a37510"/>
        <function-ref name="setDestination" scoped="" ref="0x40a375f0"/>
        <function-ref name="pan" scoped="" ref="0x40a376d0"/>
        <function-ref name="setPan" scoped="" ref="0x40a377b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40a37890"/>
        <function-ref name="localPan" scoped="" ref="0x40a37970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40a37bf8" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40a37bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a37dd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a37eb0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a1f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a1f0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a1f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a34218" loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a34218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a34de0"/>
        <function-ref name="get" scoped="" ref="0x40a34b20"/>
        <function-ref name="isSet" scoped="" ref="0x40a34860"/>
        <function-ref name="set" scoped="" ref="0x40a330b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40a1f978" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40a1f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40a1fb50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40a1fc30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40a1fd10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40a1fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40a26110" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40a26110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a262e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a263c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40a264a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a26588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a26668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a29478" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a29478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a29650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40a308c0" loc="85:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a308c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a2f4d8"/>
        <function-ref name="clear" scoped="" ref="0x40a2f888"/>
        <function-ref name="isValid" scoped="" ref="0x40a2f128"/>
        <function-ref name="set" scoped="" ref="0x40a2fc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a32cd8" loc="84:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a32cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a30370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a1ae18" loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a1ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a36a08"/>
        <function-ref name="get" scoped="" ref="0x40a36748"/>
        <function-ref name="isSet" scoped="" ref="0x40a36488"/>
        <function-ref name="set" scoped="" ref="0x40a36cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40a1f3f0" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a1f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a1f5c8"/>
        <function-ref name="noAck" scoped="" ref="0x40a1f6a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a1f788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40a20ab8" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40a20ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a20c90"/>
        <function-ref name="getPayload" scoped="" ref="0x40a20d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a20e50"/>
        <function-ref name="cancel" scoped="" ref="0x40a25010"/>
        <function-ref name="sendDone" scoped="" ref="0x40a250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40a288b0" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40a288b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a28a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40a1a010" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40a1a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a1a1e8"/>
        <function-ref name="setRetries" scoped="" ref="0x40a1a2c8"/>
        <function-ref name="getRetries" scoped="" ref="0x40a1a3a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a1a488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a1a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40a1a728" loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40a1a728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40a1a900"/>
        <function-ref name="setChannel" scoped="" ref="0x40a1a9e0"/>
        <function-ref name="getChannel" scoped="" ref="0x40a1aac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40a27380" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40a27380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a27558"/>
        <function-ref name="source" scoped="" ref="0x40a27638"/>
        <function-ref name="address" scoped="" ref="0x40a27718"/>
        <function-ref name="destination" scoped="" ref="0x40a277f8"/>
        <function-ref name="setSource" scoped="" ref="0x40a278d8"/>
        <function-ref name="setDestination" scoped="" ref="0x40a279b8"/>
        <function-ref name="type" scoped="" ref="0x40a27a98"/>
        <function-ref name="setType" scoped="" ref="0x40a27b78"/>
        <function-ref name="isForMe" scoped="" ref="0x40a27c58"/>
        <function-ref name="setGroup" scoped="" ref="0x40a27d38"/>
        <function-ref name="localGroup" scoped="" ref="0x40a27e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40a2e3a0" loc="86:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a2e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a2eea0"/>
        <function-ref name="clear" scoped="" ref="0x40a2c280"/>
        <function-ref name="isValid" scoped="" ref="0x40a2eaf0"/>
        <function-ref name="set" scoped="" ref="0x40a2c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40a25328" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40a25328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a25500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a327e0" loc="82:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a327e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a329b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40a27010" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40a27010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a271e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40a41858" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40a41858"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a41a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x40a3d330" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40a3d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x40a3d508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x40a558a8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40a558a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a55a80"/>
        <function-ref name="checkFrame" scoped="" ref="0x40a55b60"/>
        <function-ref name="source" scoped="" ref="0x40a55c40"/>
        <function-ref name="destination" scoped="" ref="0x40a55d20"/>
        <function-ref name="setSource" scoped="" ref="0x40a55e00"/>
        <function-ref name="setDestination" scoped="" ref="0x40a55ee0"/>
        <function-ref name="setGroup" scoped="" ref="0x40a41010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40a5ada8" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40a5ada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40a46010"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40a460f0"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40a461d0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x40a462b0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x40a46390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40a647b8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a647b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a64990"/>
        <function-ref name="wait" scoped="" ref="0x40a64a70"/>
        <function-ref name="cancel" scoped="" ref="0x40a64b50"/>
        <function-ref name="isFree" scoped="" ref="0x40a64c30"/>
        <function-ref name="getNow" scoped="" ref="0x40a64d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a662c8" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a662c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a66e48"/>
        <function-ref name="clear" scoped="" ref="0x40a5f230"/>
        <function-ref name="isValid" scoped="" ref="0x40a66a98"/>
        <function-ref name="set" scoped="" ref="0x40a5f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40a3e550" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40a3e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x40a3e728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40a43ee0" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40a43ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40a490e0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40a491c0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40a492a0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40a49380"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40a49460"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40a49540"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40a49620"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40a49700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40a672c8" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40a672c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40a674a0"/>
        <function-ref name="getDSN" scoped="" ref="0x40a67580"/>
        <function-ref name="setFCF" scoped="" ref="0x40a67660"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40a67740"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40a67820"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40a67900"/>
        <function-ref name="setDSN" scoped="" ref="0x40a679e0"/>
        <function-ref name="createAckReply" scoped="" ref="0x40a67ac0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40a67ba0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40a67c80"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40a67d60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40a67e40"/>
        <function-ref name="localAddr" scoped="" ref="0x40a67f20"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40a59098"/>
        <function-ref name="localPan" scoped="" ref="0x40a59178"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40a59258"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40a59338"/>
        <function-ref name="setFramePending" scoped="" ref="0x40a59418"/>
        <function-ref name="setDestPan" scoped="" ref="0x40a594f8"/>
        <function-ref name="isForMe" scoped="" ref="0x40a595d8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40a596b8"/>
        <function-ref name="getFCF" scoped="" ref="0x40a59798"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40a59878"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40a59958"/>
        <function-ref name="getFramePending" scoped="" ref="0x40a59a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40a3f600" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40a3f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40a3f7d8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40a3f8b8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40a3f998"/>
        <function-ref name="getSender" scoped="" ref="0x40a3fa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x40a5c3f0" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40a5c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40a5c5c8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40a5c6a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40a5c788"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40a5c868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x40a608e8" loc="63:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x40a608e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a60ac0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a60ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a60c80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a60d60"/>
        <function-ref name="headerLength" scoped="" ref="0x40a60e40"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a60f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x40a48c58" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40a48c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a48e30"/>
        <function-ref name="headerLength" scoped="" ref="0x40a48f10"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a4a010"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a4a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40a9d348" loc="41:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40a9d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a9d530"/>
        <function-ref name="wait" scoped="" ref="0x40a9d610"/>
        <function-ref name="cancel" scoped="" ref="0x40a9d6f0"/>
        <function-ref name="isFree" scoped="" ref="0x40a9d7d0"/>
        <function-ref name="getNow" scoped="" ref="0x40a9d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40a9dc00" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a9dc00"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40aa60f8"/>
        <function-ref name="fired" scoped="" ref="0x40a9c898"/>
        <function-ref name="startAt" scoped="" ref="0x40a9cd88"/>
        <function-ref name="isRunning" scoped="" ref="0x40a9cb10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40aa6370"/>
        <function-ref name="start" scoped="" ref="0x40a9c380"/>
        <function-ref name="stop" scoped="" ref="0x40a9c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x413cf668" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x413cf668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x413cf850"/>
        <function-ref name="wait" scoped="" ref="0x413cf930"/>
        <function-ref name="cancel" scoped="" ref="0x413cfa10"/>
        <function-ref name="isFree" scoped="" ref="0x413cfaf0"/>
        <function-ref name="getNow" scoped="" ref="0x413cfbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x413cfe60" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x413cfe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413cd350"/>
        <function-ref name="fired" scoped="" ref="0x413ceaf8"/>
        <function-ref name="startAt" scoped="" ref="0x413cd010"/>
        <function-ref name="isRunning" scoped="" ref="0x413ced70"/>
        <function-ref name="getAlarm" scoped="" ref="0x413cd5c8"/>
        <function-ref name="start" scoped="" ref="0x413ce5e0"/>
        <function-ref name="stop" scoped="" ref="0x413ce880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x413cd7d8" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x413cd7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x413cd9b0"/>
        <function-ref name="suspend" scoped="" ref="0x413cda90"/>
        <function-ref name="resume" scoped="" ref="0x413cdb70"/>
        <function-ref name="run" scoped="" ref="0x413cdc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40aa8d38" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40aa8d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40aa8f10"/>
        <function-ref name="suspend" scoped="" ref="0x40ac9010"/>
        <function-ref name="resume" scoped="" ref="0x40ac90f0"/>
        <function-ref name="run" scoped="" ref="0x40ac91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b1af20" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b1af20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b18110"/>
        <function-ref name="cancel" scoped="" ref="0x40b181f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b182d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b18430" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b18430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b18608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40b1bc28" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40b1bc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40b1be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b1c5b0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b1c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b1c788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b1c868"/>
        <function-ref name="getPayload" scoped="" ref="0x40b1c948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b1ca28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b1cb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40b1cce0" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b1cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b1cec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40b1b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b1b0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40b1b1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b1b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40b1b868" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40b1b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b1ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b1a788" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b1a788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b1a960"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b1aa40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b1ab20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b1ac00"/>
        <function-ref name="headerLength" scoped="" ref="0x40b1ace0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b1adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b18768" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b18768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b18940"/>
        <function-ref name="checkFrame" scoped="" ref="0x40b18a20"/>
        <function-ref name="source" scoped="" ref="0x40b18b00"/>
        <function-ref name="destination" scoped="" ref="0x40b18be0"/>
        <function-ref name="setSource" scoped="" ref="0x40b18cc0"/>
        <function-ref name="setDestination" scoped="" ref="0x40b18da0"/>
        <function-ref name="setGroup" scoped="" ref="0x40b18e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b1b488" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b1b488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b1b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40b1a030" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40b1a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b1a218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b1d990" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b1d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b1db68"/>
        <function-ref name="source" scoped="" ref="0x40b1dc48"/>
        <function-ref name="address" scoped="" ref="0x40b1dd28"/>
        <function-ref name="destination" scoped="" ref="0x40b1de08"/>
        <function-ref name="setSource" scoped="" ref="0x40b1dee8"/>
        <function-ref name="setDestination" scoped="" ref="0x40b1c010"/>
        <function-ref name="type" scoped="" ref="0x40b1c0f0"/>
        <function-ref name="setType" scoped="" ref="0x40b1c1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40b1c2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40b1c390"/>
        <function-ref name="localGroup" scoped="" ref="0x40b1c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40b1a410" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40b1a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b1a5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x413bb430" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x413bb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413bb608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x413bcf20" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x413bcf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413bb110"/>
        <function-ref name="cancel" scoped="" ref="0x413bb1f0"/>
        <function-ref name="sendDone" scoped="" ref="0x413bb2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x413bdc28" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x413bdc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x413bde10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x413bf5b0" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x413bf5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413bf788"/>
        <function-ref name="payloadLength" scoped="" ref="0x413bf868"/>
        <function-ref name="getPayload" scoped="" ref="0x413bf948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413bfa28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413bfb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413bfce0" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413bfce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413bfec8"/>
        <function-ref name="getPayload" scoped="" ref="0x413bd010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413bd0f0"/>
        <function-ref name="cancel" scoped="" ref="0x413bd1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x413bd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x413bd868" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x413bd868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413bda50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x413c01c0" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x413c01c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413c0398"/>
        <function-ref name="payloadLength" scoped="" ref="0x413c0478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413c0558"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413c0638"/>
        <function-ref name="headerLength" scoped="" ref="0x413c0718"/>
        <function-ref name="metadataLength" scoped="" ref="0x413c07f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x413bb768" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x413bb768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413bb9c0"/>
        <function-ref name="checkFrame" scoped="" ref="0x413bbaa0"/>
        <function-ref name="source" scoped="" ref="0x413bbb80"/>
        <function-ref name="destination" scoped="" ref="0x413bbc60"/>
        <function-ref name="setSource" scoped="" ref="0x413bbd40"/>
        <function-ref name="setDestination" scoped="" ref="0x413bbe20"/>
        <function-ref name="setGroup" scoped="" ref="0x413bbf00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x413ba070" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x413ba070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x413ba248"/>
        <function-ref name="changed" scoped="" ref="0x413ba328"/>
        <function-ref name="amGroup" scoped="" ref="0x413ba408"/>
        <function-ref name="setAddress" scoped="" ref="0x413ba4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x413bc788" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x413bc788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413bc960"/>
        <function-ref name="payloadLength" scoped="" ref="0x413bca40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413bcb20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413bcc00"/>
        <function-ref name="headerLength" scoped="" ref="0x413bcce0"/>
        <function-ref name="metadataLength" scoped="" ref="0x413bcdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x413bd488" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x413bd488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413bd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x413bc030" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x413bc030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413bc218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413c0938" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413c0938"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413c0b10"/>
        <function-ref name="source" scoped="" ref="0x413c0bf0"/>
        <function-ref name="address" scoped="" ref="0x413c0cd0"/>
        <function-ref name="destination" scoped="" ref="0x413c0db0"/>
        <function-ref name="setSource" scoped="" ref="0x413c0e90"/>
        <function-ref name="setDestination" scoped="" ref="0x413bf010"/>
        <function-ref name="type" scoped="" ref="0x413bf0f0"/>
        <function-ref name="setType" scoped="" ref="0x413bf1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x413bf2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x413bf390"/>
        <function-ref name="localGroup" scoped="" ref="0x413bf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x413bc410" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x413bc410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413bc5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40b27010" loc="54:/usr/src/tinyos/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40b27010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40b271e8"/>
        <function-ref name="changed" scoped="" ref="0x40b272c8"/>
        <function-ref name="amGroup" scoped="" ref="0x40b273a8"/>
        <function-ref name="setAddress" scoped="" ref="0x40b27488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b39a60" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b39a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b39c38"/>
        <function-ref name="cancel" scoped="" ref="0x40b39d18"/>
        <function-ref name="sendDone" scoped="" ref="0x40b39df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40b38010" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b38010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b381e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b382c8"/>
        <function-ref name="request" scoped="" ref="0x40b383a8"/>
        <function-ref name="granted" scoped="" ref="0x40b38488"/>
        <function-ref name="isOwner" scoped="" ref="0x40b38568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40b39538" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40b39538"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b39710"/>
        <function-ref name="cancel" scoped="" ref="0x40b397f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b398d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b2db60" loc="86:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b2db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b2dd48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b2de28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b6a4c0" loc="89:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b6a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b6a6a8"/>
        <function-ref name="configure" scoped="" ref="0x40b6a788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b2d420" loc="85:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b2d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b2d608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b2d6e8"/>
        <function-ref name="request" scoped="" ref="0x40b2d7c8"/>
        <function-ref name="granted" scoped="" ref="0x40b2d8a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40b2d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b6a010" loc="87:/usr/src/tinyos/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b6a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b6a1e8"/>
        <function-ref name="userId" scoped="" ref="0x40b6a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413d5010" loc="44:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413d5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413d51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x413d5348" loc="45:/usr/src/tinyos/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x413d5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x413d5520"/>
        <function-ref name="isEmpty" scoped="" ref="0x413d5600"/>
        <function-ref name="isEnqueued" scoped="" ref="0x413d56e0"/>
        <function-ref name="dequeue" scoped="" ref="0x413d57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4141da90" loc="52:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4141da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4141dc78"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4141dd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4141c3a8" loc="56:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4141c3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4141c590"/>
        <function-ref name="configure" scoped="" ref="0x4141c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4141c7d0" loc="57:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4141c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4141c9a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4141ca88"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4141cb68"/>
        <function-ref name="dequeue" scoped="" ref="0x4141cc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4141d350" loc="51:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4141d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4141d538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4141d618"/>
        <function-ref name="request" scoped="" ref="0x4141d6f8"/>
        <function-ref name="granted" scoped="" ref="0x4141d7d8"/>
        <function-ref name="isOwner" scoped="" ref="0x4141d8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4141de98" loc="53:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4141de98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4141c0c0"/>
        <function-ref name="userId" scoped="" ref="0x4141c1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4141cdc8" loc="69:/usr/src/tinyos/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4141cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4141a010"/>
        <function-ref name="runTask" scoped="" ref="0x4141a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b9a9e8" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b9a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9abc0"/>
        <function-ref name="cancel" scoped="" ref="0x40b9aca0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b9aee0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b9aee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b990e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40b9c488" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40b9c488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40b9c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b673b0" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b673b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b67588"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b67668"/>
        <function-ref name="getPayload" scoped="" ref="0x40b67748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b67828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b67908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40b9a250" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b9a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b9a428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b9a508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b9a5e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b9a6c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40b9a7a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b9a888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40b9c7d0" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40b9c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40b9c9a8"/>
        <function-ref name="getDSN" scoped="" ref="0x40b9ca88"/>
        <function-ref name="setFCF" scoped="" ref="0x40b9cb68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40b9cc48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40b9cd28"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40b9ce08"/>
        <function-ref name="setDSN" scoped="" ref="0x40b9cee8"/>
        <function-ref name="createAckReply" scoped="" ref="0x40b9b010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40b9b0f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40b9b1d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40b9b2b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40b9b390"/>
        <function-ref name="localAddr" scoped="" ref="0x40b9b470"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40b9b5d0"/>
        <function-ref name="localPan" scoped="" ref="0x40b9b6b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40b9b790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40b9b870"/>
        <function-ref name="setFramePending" scoped="" ref="0x40b9b950"/>
        <function-ref name="setDestPan" scoped="" ref="0x40b9ba30"/>
        <function-ref name="isForMe" scoped="" ref="0x40b9bb10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40b9bbf0"/>
        <function-ref name="getFCF" scoped="" ref="0x40b9bcd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40b9bdb0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40b9be90"/>
        <function-ref name="getFramePending" scoped="" ref="0x40b9a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40b67a48" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40b67a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b67c20"/>
        <function-ref name="getPayload" scoped="" ref="0x40b67d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b67de0"/>
        <function-ref name="cancel" scoped="" ref="0x40b67ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40b9c170" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40b9c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b9c348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b9f280" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b9f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9f458"/>
        <function-ref name="cancel" scoped="" ref="0x40b9f538"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b9f778" loc="70:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b9f778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b9f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40b96a58" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40b96a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b96c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b96d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b96df0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b96ed0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b95010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b950f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x40b95748" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x40b95748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b95920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b9fab0" loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b9fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b9fc88"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b9fd68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b9fe48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b9ff28"/>
        <function-ref name="headerLength" scoped="" ref="0x40b9e018"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b9e0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x40b95250" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x40b95250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b95428"/>
        <function-ref name="cancel" scoped="" ref="0x40b95508"/>
        <function-ref name="sendDone" scoped="" ref="0x40b955e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40b96228" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40b96228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b96400"/>
        <function-ref name="cancel" scoped="" ref="0x40b964e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b965c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40b96720" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40b96720"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b968f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40b95a80" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40b95a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b95c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b95d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b95e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b95ef8"/>
        <function-ref name="headerLength" scoped="" ref="0x40b9f010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b9f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40c16170" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40c16170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40c16348"/>
        <function-ref name="address" scoped="" ref="0x40c16428"/>
        <function-ref name="destination" scoped="" ref="0x40c16508"/>
        <function-ref name="setSource" scoped="" ref="0x40c165e8"/>
        <function-ref name="setDestination" scoped="" ref="0x40c166c8"/>
        <function-ref name="pan" scoped="" ref="0x40c167a8"/>
        <function-ref name="setPan" scoped="" ref="0x40c16888"/>
        <function-ref name="isForMe" scoped="" ref="0x40c16968"/>
        <function-ref name="localPan" scoped="" ref="0x40c16a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c16b88" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c16b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c16d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c16e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c16f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c15018"/>
        <function-ref name="headerLength" scoped="" ref="0x40c150f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c151d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40bee658" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40bee658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40bee830"/>
        <function-ref name="getDSN" scoped="" ref="0x40bee910"/>
        <function-ref name="setFCF" scoped="" ref="0x40bee9f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40beead0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40beebb0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40beec90"/>
        <function-ref name="setDSN" scoped="" ref="0x40beed70"/>
        <function-ref name="createAckReply" scoped="" ref="0x40beee50"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40c17010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40c170f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40c171d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40c172b0"/>
        <function-ref name="localAddr" scoped="" ref="0x40c17390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40c174f0"/>
        <function-ref name="localPan" scoped="" ref="0x40c175d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40c176b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40c17790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40c17870"/>
        <function-ref name="setDestPan" scoped="" ref="0x40c17950"/>
        <function-ref name="isForMe" scoped="" ref="0x40c17a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40c17b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40c17bf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40c17cd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40c17db0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40c17e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c15368" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c15368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c15540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c15620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c15700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c157e0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c158c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c159a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4142c950" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4142c950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x4142cb28"/>
        <function-ref name="address" scoped="" ref="0x4142cc08"/>
        <function-ref name="destination" scoped="" ref="0x4142cce8"/>
        <function-ref name="setSource" scoped="" ref="0x4142cdc8"/>
        <function-ref name="setDestination" scoped="" ref="0x4142cea8"/>
        <function-ref name="pan" scoped="" ref="0x4142b010"/>
        <function-ref name="setPan" scoped="" ref="0x4142b0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x4142b1d0"/>
        <function-ref name="localPan" scoped="" ref="0x4142b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4142b3f0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4142b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4142b5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4142b6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4142b788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4142b868"/>
        <function-ref name="headerLength" scoped="" ref="0x4142b948"/>
        <function-ref name="metadataLength" scoped="" ref="0x4142ba28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x41434f20" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x41434f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4142d110"/>
        <function-ref name="getDSN" scoped="" ref="0x4142d1f0"/>
        <function-ref name="setFCF" scoped="" ref="0x4142d2d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4142d3b0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4142d490"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4142d570"/>
        <function-ref name="setDSN" scoped="" ref="0x4142d650"/>
        <function-ref name="createAckReply" scoped="" ref="0x4142d730"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4142d810"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4142d8f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4142d9d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4142dab0"/>
        <function-ref name="localAddr" scoped="" ref="0x4142db90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4142dcf0"/>
        <function-ref name="localPan" scoped="" ref="0x4142ddd0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4142deb0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4142c010"/>
        <function-ref name="setFramePending" scoped="" ref="0x4142c0f0"/>
        <function-ref name="setDestPan" scoped="" ref="0x4142c1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4142c2b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4142c390"/>
        <function-ref name="getFCF" scoped="" ref="0x4142c470"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4142c550"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4142c630"/>
        <function-ref name="getFramePending" scoped="" ref="0x4142c710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4142bb98" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4142bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4142bd70"/>
        <function-ref name="changed" scoped="" ref="0x4142be50"/>
        <function-ref name="amGroup" scoped="" ref="0x4142a010"/>
        <function-ref name="setAddress" scoped="" ref="0x4142a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4142a250" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4142a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4142a428"/>
        <function-ref name="payloadLength" scoped="" ref="0x4142a508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4142a5e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4142a6c8"/>
        <function-ref name="headerLength" scoped="" ref="0x4142a7a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4142a888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c12ca8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c12ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c12e80"/>
        <function-ref name="cancel" scoped="" ref="0x40c55010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c550f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c55250" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c55250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c55428"/>
        <function-ref name="header" scoped="" ref="0x40c55508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c12388" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c12388"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c12560"/>
        <function-ref name="cancel" scoped="" ref="0x40c12640"/>
        <function-ref name="sendDone" scoped="" ref="0x40c12720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40c55668" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40c55668"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40c55840"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40c55920"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40c55a00"/>
        <function-ref name="getSender" scoped="" ref="0x40c55ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40c12860" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40c12860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c12a38"/>
        <function-ref name="header" scoped="" ref="0x40c12b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4144ab20" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4144ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4144acf8"/>
        <function-ref name="cancel" scoped="" ref="0x4144add8"/>
        <function-ref name="sendDone" scoped="" ref="0x4144aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41449030" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41449030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41449208"/>
        <function-ref name="header" scoped="" ref="0x414492e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x41448150" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41448150"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41448328"/>
        <function-ref name="clearAll" scoped="" ref="0x41448408"/>
        <function-ref name="get" scoped="" ref="0x414484e8"/>
        <function-ref name="set" scoped="" ref="0x414485c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4144dea0" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4144dea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4144a0c0"/>
        <function-ref name="cancel" scoped="" ref="0x4144a1a0"/>
        <function-ref name="sendDone" scoped="" ref="0x4144a280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x414499e0" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x414499e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x41449bb8"/>
        <function-ref name="insertNode" scoped="" ref="0x41449c98"/>
        <function-ref name="getNode" scoped="" ref="0x41449d78"/>
        <function-ref name="evicted" scoped="" ref="0x41449e58"/>
        <function-ref name="getIndex" scoped="" ref="0x41448010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4144a3c0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4144a3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4144a598"/>
        <function-ref name="header" scoped="" ref="0x4144a678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4144a7b8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4144a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4144a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x41449428" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x41449428"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x41449600"/>
        <function-ref name="reportChannelError" scoped="" ref="0x414496e0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x414497c0"/>
        <function-ref name="getSender" scoped="" ref="0x414498a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40c1f540" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40c1f540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40c1f718"/>
        <function-ref name="insertNode" scoped="" ref="0x40c1f7f8"/>
        <function-ref name="getNode" scoped="" ref="0x40c1f8d8"/>
        <function-ref name="evicted" scoped="" ref="0x40c1f9b8"/>
        <function-ref name="getIndex" scoped="" ref="0x40c1fa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40c19010" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40c19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c191e8"/>
        <function-ref name="clearAll" scoped="" ref="0x40c192c8"/>
        <function-ref name="get" scoped="" ref="0x40c193a8"/>
        <function-ref name="set" scoped="" ref="0x40c19488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40c1a510" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40c1a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40c1a6e8"/>
        <function-ref name="insertNode" scoped="" ref="0x40c1a7c8"/>
        <function-ref name="getNode" scoped="" ref="0x40c1a8a8"/>
        <function-ref name="evicted" scoped="" ref="0x40c1a988"/>
        <function-ref name="getIndex" scoped="" ref="0x40c1aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c1a178" loc="41:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c1a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c1a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x41447578" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41447578"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41447750"/>
        <function-ref name="clearAll" scoped="" ref="0x41447830"/>
        <function-ref name="get" scoped="" ref="0x41447910"/>
        <function-ref name="set" scoped="" ref="0x414479f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c4c440" loc="85:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c4c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c4c618"/>
        <function-ref name="cancel" scoped="" ref="0x40c4c6f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c4c7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c4c938" loc="86:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c4c938"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c4cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x40c49010" loc="93:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x40c49010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c491e8"/>
        <function-ref name="noAck" scoped="" ref="0x40c492c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c493a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c53d38" loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c53d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c53f10"/>
        <function-ref name="cancel" scoped="" ref="0x40c52010"/>
        <function-ref name="sendDone" scoped="" ref="0x40c520f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c52c00" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c52c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c52dd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c52eb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c4c010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c4c0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c4c1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c4c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c4cc70" loc="87:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c4cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c4ce48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c4cf28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c4a018"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c4a0f8"/>
        <function-ref name="headerLength" scoped="" ref="0x40c4a1d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c4a2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x40c4a910" loc="92:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x40c4a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c4aae8"/>
        <function-ref name="setRetries" scoped="" ref="0x40c4abc8"/>
        <function-ref name="getRetries" scoped="" ref="0x40c4aca8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c4ad88"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c4ae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c52250" loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c52250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c52428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40c4a3f8" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40c4a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40c4a5d0"/>
        <function-ref name="noAck" scoped="" ref="0x40c4a6b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40c4a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40c52568" loc="79:/usr/src/tinyos/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40c52568"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40c52740"/>
        <function-ref name="setRetries" scoped="" ref="0x40c52820"/>
        <function-ref name="getRetries" scoped="" ref="0x40c52900"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40c529e0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40c52ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c46ba8" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c46ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c46d80"/>
        <function-ref name="stopDone" scoped="" ref="0x40c46e60"/>
        <function-ref name="start" scoped="" ref="0x40c45010"/>
        <function-ref name="stop" scoped="" ref="0x40c450f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40c6ae10" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40c6ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c63010"/>
        <function-ref name="cancel" scoped="" ref="0x40c630f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c631d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40c63330" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40c63330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c63508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c45250" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c45250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c45428"/>
        <function-ref name="cancel" scoped="" ref="0x40c45508"/>
        <function-ref name="sendDone" scoped="" ref="0x40c455e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40c45a60" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c45a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c45c38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c45d18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c45df8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c45ed8"/>
        <function-ref name="headerLength" scoped="" ref="0x40c6a010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c6a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40c6a230" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40c6a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40c6a408"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40c6a4e8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40c6a5c8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40c6a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40c6a838" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40c6a838"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c6aa10"/>
        <function-ref name="stopDone" scoped="" ref="0x40c6aaf0"/>
        <function-ref name="start" scoped="" ref="0x40c6abd0"/>
        <function-ref name="stop" scoped="" ref="0x40c6acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c45748" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c45748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c45920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40c63668" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40c63668"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c63840"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c63920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c63a00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c63ae0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c63bc0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c63ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4147d010" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4147d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4147d1e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4147d2c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4147d3a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4147d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c5f010" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c5f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c5f1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40c5f2c8"/>
        <function-ref name="start" scoped="" ref="0x40c5f3a8"/>
        <function-ref name="stop" scoped="" ref="0x40c5f488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40ca7340" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40ca7340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ca7518"/>
        <function-ref name="turnOn" scoped="" ref="0x40ca75f8"/>
        <function-ref name="setChannel" scoped="" ref="0x40ca76d8"/>
        <function-ref name="done" scoped="" ref="0x40ca77b8"/>
        <function-ref name="standby" scoped="" ref="0x40ca7898"/>
        <function-ref name="getChannel" scoped="" ref="0x40ca7978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40c5f5e8" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40c5f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c5f7c0"/>
        <function-ref name="cancel" scoped="" ref="0x40c5f8a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c5f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40ca6010" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ca6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ca61e8"/>
        <function-ref name="header" scoped="" ref="0x40ca62c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c5fae0" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c5fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c5fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40ca7ab8" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ca7ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ca7c90"/>
        <function-ref name="ready" scoped="" ref="0x40ca7d70"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca7e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40c5fdf8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40c5fdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40ca7010"/>
        <function-ref name="setChannel" scoped="" ref="0x40ca70f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40ca71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4147a360" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4147a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4147a538"/>
        <function-ref name="stopDone" scoped="" ref="0x4147a618"/>
        <function-ref name="start" scoped="" ref="0x4147a6f8"/>
        <function-ref name="stop" scoped="" ref="0x4147a7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x4147a938" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4147a938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4147ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x41478998" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x41478998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x41478b70"/>
        <function-ref name="turnOn" scoped="" ref="0x41478c50"/>
        <function-ref name="setChannel" scoped="" ref="0x41478d30"/>
        <function-ref name="done" scoped="" ref="0x41478e10"/>
        <function-ref name="standby" scoped="" ref="0x41478ef0"/>
        <function-ref name="getChannel" scoped="" ref="0x41477010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4147ac70" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4147ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4147ae48"/>
        <function-ref name="cancel" scoped="" ref="0x4147af28"/>
        <function-ref name="sendDone" scoped="" ref="0x41478018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41476468" loc="189:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41476468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41476640"/>
        <function-ref name="runTask" scoped="" ref="0x41476720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41477be0" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41477be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41477db8"/>
        <function-ref name="header" scoped="" ref="0x41477e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x414768a0" loc="144:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x414768a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41476a78"/>
        <function-ref name="runTask" scoped="" ref="0x41476b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41478178" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41478178"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41478350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x41476030" loc="322:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x41476030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41476208"/>
        <function-ref name="runTask" scoped="" ref="0x414762e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x41477708" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x41477708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414778e0"/>
        <function-ref name="ready" scoped="" ref="0x414779c0"/>
        <function-ref name="sendDone" scoped="" ref="0x41477aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x41478490" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x41478490"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41478668"/>
        <function-ref name="setChannel" scoped="" ref="0x41478748"/>
        <function-ref name="getChannel" scoped="" ref="0x41478828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41477150" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41477150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41477328"/>
        <function-ref name="suspend" scoped="" ref="0x41477408"/>
        <function-ref name="resume" scoped="" ref="0x414774e8"/>
        <function-ref name="run" scoped="" ref="0x414775c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ca22f0" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ca22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ca24c8"/>
        <function-ref name="ready" scoped="" ref="0x40ca25a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca2688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ca27e8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ca27e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ca29c0"/>
        <function-ref name="header" scoped="" ref="0x40ca2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40ca2be0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40ca2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ca2db8"/>
        <function-ref name="wait" scoped="" ref="0x40ca2e98"/>
        <function-ref name="cancel" scoped="" ref="0x40cd4010"/>
        <function-ref name="isFree" scoped="" ref="0x40cd40f0"/>
        <function-ref name="getNow" scoped="" ref="0x40cd41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40cd4330" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40cd4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40cd4508"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40cd45e8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40cd46c8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40cd47a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40ca3e90" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ca3e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ca2080"/>
        <function-ref name="header" scoped="" ref="0x40ca2160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40ca39b8" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ca39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ca3b90"/>
        <function-ref name="ready" scoped="" ref="0x40ca3c70"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca3d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x414a7b08" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x414a7b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414a7ce0"/>
        <function-ref name="ready" scoped="" ref="0x414a7dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x414a7ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x414a6030" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x414a6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414a6208"/>
        <function-ref name="header" scoped="" ref="0x414a62e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x414a6428" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x414a6428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x414a6600"/>
        <function-ref name="wait" scoped="" ref="0x414a66e0"/>
        <function-ref name="cancel" scoped="" ref="0x414a67c0"/>
        <function-ref name="isFree" scoped="" ref="0x414a68a0"/>
        <function-ref name="getNow" scoped="" ref="0x414a6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x414a6ac0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x414a6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x414a6c98"/>
        <function-ref name="rand32" scoped="" ref="0x414a6d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x414a6ed8" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x414a6ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x414a40c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x414a41a0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x414a4280"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x414a4360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x414a76c0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x414a76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414a7898"/>
        <function-ref name="header" scoped="" ref="0x414a7978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x414a71e8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x414a71e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414a73c0"/>
        <function-ref name="ready" scoped="" ref="0x414a74a0"/>
        <function-ref name="sendDone" scoped="" ref="0x414a7580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x414a44e0" loc="78:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x414a44e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414a46b8"/>
        <function-ref name="runTask" scoped="" ref="0x414a4798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40cd6e98" loc="46:/usr/src/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40cd6e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40cd80c0"/>
        <function-ref name="rand32" scoped="" ref="0x40cd81a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40cd65d8" loc="45:/usr/src/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40cd65d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cd6c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40caf330" loc="44:/usr/src/tinyos/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40caf330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40caf508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40cd3948" loc="48:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40cd3948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40cd3b20"/>
        <function-ref name="rand32" scoped="" ref="0x40cd3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40cd3088" loc="47:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40cd3088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cd36b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40cd8b40" loc="46:/usr/src/tinyos/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40cd8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40cd8d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cc7538" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cc7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc7710"/>
        <function-ref name="ready" scoped="" ref="0x40cc77f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cc78d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cc7a30" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cc7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc7c08"/>
        <function-ref name="header" scoped="" ref="0x40cc7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40cc7e28" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40cc7e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40cdb050"/>
        <function-ref name="wait" scoped="" ref="0x40cdb130"/>
        <function-ref name="cancel" scoped="" ref="0x40cdb210"/>
        <function-ref name="isFree" scoped="" ref="0x40cdb2f0"/>
        <function-ref name="getNow" scoped="" ref="0x40cdb3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40cdbe88" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40cdbe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d08070"/>
        <function-ref name="get" scoped="" ref="0x40d08150"/>
        <function-ref name="setValue" scoped="" ref="0x40d08230"/>
        <function-ref name="set" scoped="" ref="0x40d08310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40cdb530" loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40cdb530"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40cdb708"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40cdb7e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40cdb8c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40cdb9a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40cdba88"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40cdbb68"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40cdbc48"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40cdbd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40cc9b90" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40cc9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc9d68"/>
        <function-ref name="header" scoped="" ref="0x40cc9e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40cc96b8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40cc96b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc9890"/>
        <function-ref name="ready" scoped="" ref="0x40cc9970"/>
        <function-ref name="sendDone" scoped="" ref="0x40cc9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40cc7010" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40cc7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40cc71e8"/>
        <function-ref name="noAck" scoped="" ref="0x40cc72c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40cc73a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d042b0" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d04488"/>
        <function-ref name="stopDone" scoped="" ref="0x40d04568"/>
        <function-ref name="start" scoped="" ref="0x40d04648"/>
        <function-ref name="stop" scoped="" ref="0x40d04728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40cf8150" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40cf8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40cf8328"/>
        <function-ref name="request" scoped="" ref="0x40cf8408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40cf56a0" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40cf56a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cf5878"/>
        <function-ref name="ready" scoped="" ref="0x40cf5958"/>
        <function-ref name="sendDone" scoped="" ref="0x40cf5a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40cf5b98" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40cf5b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cf5d70"/>
        <function-ref name="header" scoped="" ref="0x40cf5e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40cf9070" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40cf9070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40cf9248"/>
        <function-ref name="turnOn" scoped="" ref="0x40cf9328"/>
        <function-ref name="setChannel" scoped="" ref="0x40cf9408"/>
        <function-ref name="done" scoped="" ref="0x40cf94e8"/>
        <function-ref name="standby" scoped="" ref="0x40cf95c8"/>
        <function-ref name="getChannel" scoped="" ref="0x40cf96a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40cf8548" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40cf8548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cf8720"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cf8800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cf88e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cf89c0"/>
        <function-ref name="headerLength" scoped="" ref="0x40cf8aa0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cf8b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40cf7e68" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40cf7e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40cf50e0"/>
        <function-ref name="turnOn" scoped="" ref="0x40cf51c0"/>
        <function-ref name="setChannel" scoped="" ref="0x40cf52a0"/>
        <function-ref name="done" scoped="" ref="0x40cf5380"/>
        <function-ref name="standby" scoped="" ref="0x40cf5460"/>
        <function-ref name="getChannel" scoped="" ref="0x40cf5540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40cf8ce0" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40cf8ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40cf8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40cf9cc0" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40cf9cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cf9e98"/>
        <function-ref name="header" scoped="" ref="0x40cf8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40cf7b30" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40cf7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cf7d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40cf7060" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40cf7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cf7238"/>
        <function-ref name="stopDone" scoped="" ref="0x40cf7318"/>
        <function-ref name="start" scoped="" ref="0x40cf73f8"/>
        <function-ref name="stop" scoped="" ref="0x40cf74d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40cf4428" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40cf4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cf4600"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cf46e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cf47c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cf48a0"/>
        <function-ref name="headerLength" scoped="" ref="0x40cf4980"/>
        <function-ref name="metadataLength" scoped="" ref="0x40cf4a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40d04d40" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40d04d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d04f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40cf4bc0" loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40cf4bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40cf4d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40cf7638" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40cf7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cf7810"/>
        <function-ref name="cancel" scoped="" ref="0x40cf78f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cf79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40cf97e8" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40cf97e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cf99c0"/>
        <function-ref name="ready" scoped="" ref="0x40cf9aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cf9b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40cf4010" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40cf4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40cf41e8"/>
        <function-ref name="request" scoped="" ref="0x40cf42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40d04868" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40d04868"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d04a40"/>
        <function-ref name="cancel" scoped="" ref="0x40d04b20"/>
        <function-ref name="sendDone" scoped="" ref="0x40d04c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40d3e338" loc="50:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40d3e338"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d3e510"/>
        <function-ref name="get" scoped="" ref="0x40d3e5f0"/>
        <function-ref name="setValue" scoped="" ref="0x40d3e6d0"/>
        <function-ref name="set" scoped="" ref="0x40d3e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d409f8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d409f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d40bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d40cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d40d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d40e70"/>
        <function-ref name="headerLength" scoped="" ref="0x40d3f010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d3f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d3fb88" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d3fb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d3fd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d3fe40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d3ff20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d3e018"/>
        <function-ref name="headerLength" scoped="" ref="0x40d3e0f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d3e1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40d41378" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40d41378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d41e78"/>
        <function-ref name="clear" scoped="" ref="0x40d40250"/>
        <function-ref name="isValid" scoped="" ref="0x40d41ac8"/>
        <function-ref name="set" scoped="" ref="0x40d40600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40d3f310" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d3f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d3f958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40d1db10" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40d1db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d4c6b8"/>
        <function-ref name="clear" scoped="" ref="0x40d4ca68"/>
        <function-ref name="isValid" scoped="" ref="0x40d4c308"/>
        <function-ref name="set" scoped="" ref="0x40d4ce18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x414c5af8" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x414c5af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414c5cd0"/>
        <function-ref name="get" scoped="" ref="0x414c5db0"/>
        <function-ref name="setValue" scoped="" ref="0x414c5e90"/>
        <function-ref name="set" scoped="" ref="0x414c4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x414c5330" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x414c5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414c5508"/>
        <function-ref name="payloadLength" scoped="" ref="0x414c55e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414c56c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414c57a8"/>
        <function-ref name="headerLength" scoped="" ref="0x414c5888"/>
        <function-ref name="metadataLength" scoped="" ref="0x414c5968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x414c3430" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x414c3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414c3608"/>
        <function-ref name="payloadLength" scoped="" ref="0x414c36e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414c37c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414c38a8"/>
        <function-ref name="headerLength" scoped="" ref="0x414c3988"/>
        <function-ref name="metadataLength" scoped="" ref="0x414c3a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x414c8ca8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x414c8ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x414c67c0"/>
        <function-ref name="clear" scoped="" ref="0x414c6b70"/>
        <function-ref name="isValid" scoped="" ref="0x414c6410"/>
        <function-ref name="set" scoped="" ref="0x414c6f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x414c4200" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x414c4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414c4848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x414c4b08" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x414c4b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414c3200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x414c94f0" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x414c94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x414c8010"/>
        <function-ref name="clear" scoped="" ref="0x414c83c0"/>
        <function-ref name="isValid" scoped="" ref="0x414c9c40"/>
        <function-ref name="set" scoped="" ref="0x414c8770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40d20b18" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40d20b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d4b200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40d4a010" loc="48:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40d4a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d4a658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d4a9a8" loc="49:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d4a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d49120"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d49610"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d49398"/>
        <function-ref name="overflow" scoped="" ref="0x40d49888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d3a5d8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d3a5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d3a7b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d3a890"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d3a970"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d3aa50"/>
        <function-ref name="headerLength" scoped="" ref="0x40d3ab30"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d3ac10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d3ada0" loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d3ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d39010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d390f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d391d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d392b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40d39390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d39470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40d3a010" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40d3a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d3a1f8"/>
        <function-ref name="get" scoped="" ref="0x40d3a2d8"/>
        <function-ref name="setValue" scoped="" ref="0x40d3a3b8"/>
        <function-ref name="set" scoped="" ref="0x40d3a498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d54718" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d54718"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d548f0"/>
        <function-ref name="stopDone" scoped="" ref="0x40d549d0"/>
        <function-ref name="start" scoped="" ref="0x40d54ab0"/>
        <function-ref name="stop" scoped="" ref="0x40d54b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40d52628" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40d52628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40d52800"/>
        <function-ref name="request" scoped="" ref="0x40d528e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d50be8" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d50be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d50dc0"/>
        <function-ref name="ready" scoped="" ref="0x40d50ea0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d4f170" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d4f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d4f348"/>
        <function-ref name="header" scoped="" ref="0x40d4f428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40d53548" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40d53548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d53720"/>
        <function-ref name="turnOn" scoped="" ref="0x40d53800"/>
        <function-ref name="setChannel" scoped="" ref="0x40d538e0"/>
        <function-ref name="done" scoped="" ref="0x40d539c0"/>
        <function-ref name="standby" scoped="" ref="0x40d53aa0"/>
        <function-ref name="getChannel" scoped="" ref="0x40d53b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d52a20" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d52a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d52bf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d52cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d52db8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d52e98"/>
        <function-ref name="headerLength" scoped="" ref="0x40d51010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d510f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40d503d0" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40d503d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d50628"/>
        <function-ref name="turnOn" scoped="" ref="0x40d50708"/>
        <function-ref name="setChannel" scoped="" ref="0x40d507e8"/>
        <function-ref name="done" scoped="" ref="0x40d508c8"/>
        <function-ref name="standby" scoped="" ref="0x40d509a8"/>
        <function-ref name="getChannel" scoped="" ref="0x40d50a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40d51250" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40d51250"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40d51428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40d52230" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40d52230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d52408"/>
        <function-ref name="header" scoped="" ref="0x40d524e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40d50098" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40d50098"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d50270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40d515b8" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40d515b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d51790"/>
        <function-ref name="stopDone" scoped="" ref="0x40d51870"/>
        <function-ref name="start" scoped="" ref="0x40d51950"/>
        <function-ref name="stop" scoped="" ref="0x40d51a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d4f9a0" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d4f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4fb78"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4fc58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4fd38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4fe18"/>
        <function-ref name="headerLength" scoped="" ref="0x40d4fef8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d4e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40d53230" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40d53230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d53408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40d4e170" loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40d4e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40d4e348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40d51b90" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40d51b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d51d68"/>
        <function-ref name="cancel" scoped="" ref="0x40d51e48"/>
        <function-ref name="sendDone" scoped="" ref="0x40d51f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40d53cc0" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40d53cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d53e98"/>
        <function-ref name="ready" scoped="" ref="0x40d52010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d520f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40d4f588" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40d4f588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40d4f760"/>
        <function-ref name="request" scoped="" ref="0x40d4f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40d54cd0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40d54cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d54ea8"/>
        <function-ref name="cancel" scoped="" ref="0x40d53010"/>
        <function-ref name="sendDone" scoped="" ref="0x40d530f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d7bc60" loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d7bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d7be38"/>
        <function-ref name="stopDone" scoped="" ref="0x40d7bf18"/>
        <function-ref name="start" scoped="" ref="0x40d79010"/>
        <function-ref name="stop" scoped="" ref="0x40d790f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40d78b00" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40d78b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40d78cd8"/>
        <function-ref name="request" scoped="" ref="0x40d78db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d75090" loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d75090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d75268"/>
        <function-ref name="ready" scoped="" ref="0x40d75348"/>
        <function-ref name="sendDone" scoped="" ref="0x40d75428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d75588" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d75588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d75760"/>
        <function-ref name="header" scoped="" ref="0x40d75840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40d79a20" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40d79a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d79bf8"/>
        <function-ref name="turnOn" scoped="" ref="0x40d79cd8"/>
        <function-ref name="setChannel" scoped="" ref="0x40d79db8"/>
        <function-ref name="done" scoped="" ref="0x40d79e98"/>
        <function-ref name="standby" scoped="" ref="0x40d78010"/>
        <function-ref name="getChannel" scoped="" ref="0x40d780f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d78ef8" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d78ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d770e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d771c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d772a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d77380"/>
        <function-ref name="headerLength" scoped="" ref="0x40d77460"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d77540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40d76840" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40d76840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d76a98"/>
        <function-ref name="turnOn" scoped="" ref="0x40d76b78"/>
        <function-ref name="setChannel" scoped="" ref="0x40d76c58"/>
        <function-ref name="done" scoped="" ref="0x40d76d38"/>
        <function-ref name="standby" scoped="" ref="0x40d76e18"/>
        <function-ref name="getChannel" scoped="" ref="0x40d76ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40d776a0" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40d776a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40d77878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40d78708" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40d78708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d788e0"/>
        <function-ref name="header" scoped="" ref="0x40d789c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40d76508" loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40d76508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d766e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40d77a08" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40d77a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d77be0"/>
        <function-ref name="stopDone" scoped="" ref="0x40d77cc0"/>
        <function-ref name="start" scoped="" ref="0x40d77da0"/>
        <function-ref name="stop" scoped="" ref="0x40d77e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d75db8" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d75db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d74010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d740f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d741d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d742b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40d74390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d74470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40d79708" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40d79708"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d798e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40d745d0" loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40d745d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40d747a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40d76010" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40d76010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d761e8"/>
        <function-ref name="cancel" scoped="" ref="0x40d762c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d763a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40d78230" loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40d78230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d78408"/>
        <function-ref name="ready" scoped="" ref="0x40d784e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d785c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40d759a0" loc="61:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40d759a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40d75b78"/>
        <function-ref name="request" scoped="" ref="0x40d75c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40d79230" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40d79230"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d79408"/>
        <function-ref name="cancel" scoped="" ref="0x40d794e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d795c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40d6fb58" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40d6fb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40d6fd30"/>
        <function-ref name="request" scoped="" ref="0x40d6fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40d6cd18" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40d6cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6b8f0"/>
        <function-ref name="get" scoped="" ref="0x40d6b630"/>
        <function-ref name="isSet" scoped="" ref="0x40d6b370"/>
        <function-ref name="set" scoped="" ref="0x40d6bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40d90918" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40d90918"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d90af0"/>
        <function-ref name="get" scoped="" ref="0x40d90bd0"/>
        <function-ref name="setValue" scoped="" ref="0x40d90cb0"/>
        <function-ref name="set" scoped="" ref="0x40d90d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40d93a50" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40d93a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40d915b0"/>
        <function-ref name="clear" scoped="" ref="0x40d91960"/>
        <function-ref name="isValid" scoped="" ref="0x40d91200"/>
        <function-ref name="set" scoped="" ref="0x40d91d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40d72918" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40d72918"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d72af0"/>
        <function-ref name="turnOn" scoped="" ref="0x40d72bd0"/>
        <function-ref name="setChannel" scoped="" ref="0x40d72cb0"/>
        <function-ref name="done" scoped="" ref="0x40d72d90"/>
        <function-ref name="standby" scoped="" ref="0x40d72e70"/>
        <function-ref name="getChannel" scoped="" ref="0x40d6f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40d6d9b0" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40d6d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6c590"/>
        <function-ref name="get" scoped="" ref="0x40d6c2d0"/>
        <function-ref name="isSet" scoped="" ref="0x40d6c010"/>
        <function-ref name="set" scoped="" ref="0x40d6c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d6d010" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d6d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6d1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d6d2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d6d3a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d6d488"/>
        <function-ref name="headerLength" scoped="" ref="0x40d6d568"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d6d648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40d931c8" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40d931c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d93420"/>
        <function-ref name="headerLength" scoped="" ref="0x40d93500"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d935e0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40d936c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40d6f708" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40d6f708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d6f8e0"/>
        <function-ref name="header" scoped="" ref="0x40d6f9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d65700" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d65700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d94bd8"/>
        <function-ref name="fired" scoped="" ref="0x40d943a8"/>
        <function-ref name="startAt" scoped="" ref="0x40d94898"/>
        <function-ref name="isRunning" scoped="" ref="0x40d94620"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d94e50"/>
        <function-ref name="start" scoped="" ref="0x40d65e50"/>
        <function-ref name="stop" scoped="" ref="0x40d94130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40d69100" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d69100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d69cc8"/>
        <function-ref name="get" scoped="" ref="0x40d69a08"/>
        <function-ref name="isSet" scoped="" ref="0x40d69748"/>
        <function-ref name="set" scoped="" ref="0x40d68010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40d67c60" loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40d67c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d652e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40d6f1b0" loc="44:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40d6f1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d6f388"/>
        <function-ref name="ready" scoped="" ref="0x40d6f468"/>
        <function-ref name="sendDone" scoped="" ref="0x40d6f548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40d68520" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40d68520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d670f8"/>
        <function-ref name="get" scoped="" ref="0x40d68e28"/>
        <function-ref name="isSet" scoped="" ref="0x40d68b68"/>
        <function-ref name="set" scoped="" ref="0x40d673b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40d8f010" loc="66:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40d8f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d8f1e8"/>
        <function-ref name="get" scoped="" ref="0x40d8f2c8"/>
        <function-ref name="setValue" scoped="" ref="0x40d8f3a8"/>
        <function-ref name="set" scoped="" ref="0x40d8f488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40d90280" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40d90280"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d90458"/>
        <function-ref name="get" scoped="" ref="0x40d90538"/>
        <function-ref name="setValue" scoped="" ref="0x40d90618"/>
        <function-ref name="set" scoped="" ref="0x40d906f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40d67768" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d67768"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40d67940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40d88d18" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40d88d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40d88ef0"/>
        <function-ref name="request" scoped="" ref="0x40d87010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40d86f08" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40d86f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d85af8"/>
        <function-ref name="get" scoped="" ref="0x40d85838"/>
        <function-ref name="isSet" scoped="" ref="0x40d85578"/>
        <function-ref name="set" scoped="" ref="0x40d85db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40dac418" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40dac418"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40dacb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40d8a768" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40d8a768"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d8a940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40da9778" loc="74:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40da9778"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40da9950"/>
        <function-ref name="get" scoped="" ref="0x40da9a30"/>
        <function-ref name="setValue" scoped="" ref="0x40da9b10"/>
        <function-ref name="set" scoped="" ref="0x40da9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40da8680" loc="77:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40da8680"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40da7198"/>
        <function-ref name="clear" scoped="" ref="0x40da7548"/>
        <function-ref name="isValid" scoped="" ref="0x40da8dd0"/>
        <function-ref name="set" scoped="" ref="0x40da78f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40d8aae8" loc="50:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40d8aae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40d8acc0"/>
        <function-ref name="turnOn" scoped="" ref="0x40d8ada0"/>
        <function-ref name="setChannel" scoped="" ref="0x40d8ae80"/>
        <function-ref name="done" scoped="" ref="0x40d88010"/>
        <function-ref name="standby" scoped="" ref="0x40d880f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40d881d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40daced0" loc="68:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40daced0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="TRadio" ref="0x4052c8b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d7e578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40d87b60" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40d87b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d86780"/>
        <function-ref name="get" scoped="" ref="0x40d864c0"/>
        <function-ref name="isSet" scoped="" ref="0x40d86200"/>
        <function-ref name="set" scoped="" ref="0x40d86a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40d871c0" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d871c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d87398"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d87478"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d87558"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d87638"/>
        <function-ref name="headerLength" scoped="" ref="0x40d87718"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d877f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40daa9d0" loc="71:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40daa9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40daaba8"/>
        <function-ref name="headerLength" scoped="" ref="0x40daac88"/>
        <function-ref name="metadataLength" scoped="" ref="0x40daad68"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40daae48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40d888c8" loc="52:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40d888c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d88aa0"/>
        <function-ref name="header" scoped="" ref="0x40d88b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40d81d00" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40d81d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40d7f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40d83300" loc="58:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40d83300"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d83ec8"/>
        <function-ref name="get" scoped="" ref="0x40d83c08"/>
        <function-ref name="isSet" scoped="" ref="0x40d83948"/>
        <function-ref name="set" scoped="" ref="0x40d821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40d8a108" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40d8a108"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d8a2e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40d88370" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40d88370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d88548"/>
        <function-ref name="ready" scoped="" ref="0x40d88628"/>
        <function-ref name="sendDone" scoped="" ref="0x40d88708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40d826c0" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40d826c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d812d0"/>
        <function-ref name="get" scoped="" ref="0x40d81010"/>
        <function-ref name="isSet" scoped="" ref="0x40d82d08"/>
        <function-ref name="set" scoped="" ref="0x40d81590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40da5398" loc="80:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40da5398"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40da5570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x40d7e980" loc="69:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40d7e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40daa418"/>
        <function-ref name="test" scoped="" ref="0x40d7d7a0"/>
        <function-ref name="fired" scoped="" ref="0x40d7d528"/>
        <function-ref name="get" scoped="" ref="0x40d7d010"/>
        <function-ref name="reset" scoped="" ref="0x40d7da18"/>
        <function-ref name="getMode" scoped="" ref="0x40daa6b8"/>
        <function-ref name="isOn" scoped="" ref="0x40daa1a0"/>
        <function-ref name="set" scoped="" ref="0x40d7d288"/>
        <function-ref name="start" scoped="" ref="0x40d7dc90"/>
        <function-ref name="stop" scoped="" ref="0x40d7df08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40da9e38" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40da9e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40da8050"/>
        <function-ref name="get" scoped="" ref="0x40da8130"/>
        <function-ref name="setValue" scoped="" ref="0x40da8210"/>
        <function-ref name="set" scoped="" ref="0x40da82f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40da90e0" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40da90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40da92b8"/>
        <function-ref name="get" scoped="" ref="0x40da9398"/>
        <function-ref name="setValue" scoped="" ref="0x40da9478"/>
        <function-ref name="set" scoped="" ref="0x40da9558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40d81940" loc="60:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40d81940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40d81b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40da7d38" loc="79:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40da7d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40da7f10"/>
        <function-ref name="suspend" scoped="" ref="0x40da5010"/>
        <function-ref name="resume" scoped="" ref="0x40da50f0"/>
        <function-ref name="run" scoped="" ref="0x40da51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40d8c998" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40d8c998"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40df6120"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40e26030" loc="53:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40e26030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40e26780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e26af8" loc="54:/usr/src/tinyos/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e26af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e1e308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e1e7f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e1e580"/>
        <function-ref name="overflow" scoped="" ref="0x40e1ea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40e1acd8" loc="63:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40e1acd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40445060"/>
            <typename><typedef-ref name="TMcu" ref="0x40445410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e19478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e19968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e196f0"/>
        <function-ref name="overflow" scoped="" ref="0x40e19be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40e1c9f0" loc="62:/usr/src/tinyos/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e1c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e1a200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e1a6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e1a478"/>
        <function-ref name="overflow" scoped="" ref="0x40e1a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40df98b0" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40df98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40df9ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40e15cc8" loc="48:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40e15cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e14330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e14680" loc="49:/usr/src/tinyos/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e14680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e14dd0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e132e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e13068"/>
        <function-ref name="overflow" scoped="" ref="0x40e13558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e12ea8" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e12ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e17388"/>
        <function-ref name="fired" scoped="" ref="0x40df8b28"/>
        <function-ref name="startAt" scoped="" ref="0x40e17048"/>
        <function-ref name="isRunning" scoped="" ref="0x40df8da0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e17600"/>
        <function-ref name="start" scoped="" ref="0x40df8610"/>
        <function-ref name="stop" scoped="" ref="0x40df88b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x41525010" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x41525010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41524a68"/>
        <function-ref name="test" scoped="" ref="0x41525de8"/>
        <function-ref name="fired" scoped="" ref="0x41525b70"/>
        <function-ref name="force" scoped="" ref="0x41522010"/>
        <function-ref name="get" scoped="" ref="0x41525658"/>
        <function-ref name="reset" scoped="" ref="0x41524088"/>
        <function-ref name="getMode" scoped="" ref="0x41524d08"/>
        <function-ref name="isOn" scoped="" ref="0x415247f0"/>
        <function-ref name="set" scoped="" ref="0x415258d0"/>
        <function-ref name="start" scoped="" ref="0x41524300"/>
        <function-ref name="stop" scoped="" ref="0x41524578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4152a568" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4152a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40445818"/>
            <typename><typedef-ref name="T62khz" ref="0x404459c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41529ab8"/>
        <function-ref name="fired" scoped="" ref="0x41529288"/>
        <function-ref name="startAt" scoped="" ref="0x41529778"/>
        <function-ref name="isRunning" scoped="" ref="0x41529500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41529d30"/>
        <function-ref name="start" scoped="" ref="0x4152acb8"/>
        <function-ref name="stop" scoped="" ref="0x41529010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4152a130" loc="39:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4152a130"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403277d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403277d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4152a308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x41528010" loc="45:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x41528010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41526a68"/>
        <function-ref name="test" scoped="" ref="0x41528de8"/>
        <function-ref name="get" scoped="" ref="0x41528658"/>
        <function-ref name="reset" scoped="" ref="0x41526088"/>
        <function-ref name="getMode" scoped="" ref="0x41526d08"/>
        <function-ref name="overflow" scoped="" ref="0x41528b70"/>
        <function-ref name="isOn" scoped="" ref="0x415267f0"/>
        <function-ref name="set" scoped="" ref="0x415288d0"/>
        <function-ref name="start" scoped="" ref="0x41526300"/>
        <function-ref name="stop" scoped="" ref="0x41526578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f0b240" loc="143:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f0b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f0b418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x40f0a4d0" loc="146:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40f0a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40f0a7a8"/>
        <function-ref name="setRoot" scoped="" ref="0x40f0a888"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40f0a968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ee2850" loc="127:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ee2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee2a28"/>
        <function-ref name="getPayload" scoped="" ref="0x40ee2b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ee2be8"/>
        <function-ref name="cancel" scoped="" ref="0x40ee2cc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ee2da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40ee47e8" loc="116:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40ee47e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40ee49c0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40ee4aa0"/>
        <function-ref name="setType" scoped="" ref="0x40ee4b80"/>
        <function-ref name="getOrigin" scoped="" ref="0x40ee4c60"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40ee4d40"/>
        <function-ref name="getType" scoped="" ref="0x40ee4e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40f15708" loc="130:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40f15708"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40f158e0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40f159c0"/>
        <function-ref name="txNoAck" scoped="" ref="0x40f15aa0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40f15b80"/>
        <function-ref name="evicted" scoped="" ref="0x40f15c60"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40f15d40"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40f15e20"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40f15f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x40f0d468" loc="141:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x40f0d468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40f0da90"/>
        <function-ref name="flush" scoped="" ref="0x40f0b010"/>
        <function-ref name="lookup" scoped="" ref="0x40f0dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40ee5db8" loc="114:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40ee5db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40ee4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ee4150" loc="115:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ee4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ee4328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ee4408"/>
        <function-ref name="getPayload" scoped="" ref="0x40ee44e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ee45c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ee46a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40ee59f8" loc="113:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40ee59f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ee5be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40f089b0" loc="150:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40f089b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40f08b88"/>
        <function-ref name="rand32" scoped="" ref="0x40f08c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ee7ea8" loc="111:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ee7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee50c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ee51a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ee5280"/>
        <function-ref name="cancel" scoped="" ref="0x40ee5360"/>
        <function-ref name="sendDone" scoped="" ref="0x40ee5440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x40ee1538" loc="129:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x40ee1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f15048"/>
        <function-ref name="fired" scoped="" ref="0x40f162e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f169e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f16790"/>
        <function-ref name="getdt" scoped="" ref="0x40f154f8"/>
        <function-ref name="gett0" scoped="" ref="0x40f152a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40f16538"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ee1b60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f16d08"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ee1de0"/>
        <function-ref name="stop" scoped="" ref="0x40f16088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40f08dc8" loc="155:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40f08dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f06010"/>
        <function-ref name="stopDone" scoped="" ref="0x40f060f0"/>
        <function-ref name="start" scoped="" ref="0x40f061d0"/>
        <function-ref name="stop" scoped="" ref="0x40f062b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40f06430" loc="246:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40f06430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f06608"/>
        <function-ref name="runTask" scoped="" ref="0x40f066e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x40f13db0" loc="138:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x40f13db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e4cc98"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e4cf20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40f12af8"/>
        <function-ref name="enqueue" scoped="" ref="0x40f11208"/>
        <function-ref name="element" scoped="" ref="0x40f11558"/>
        <function-ref name="maxSize" scoped="" ref="0x40f128a0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f12e68"/>
        <function-ref name="empty" scoped="" ref="0x40f123f0"/>
        <function-ref name="size" scoped="" ref="0x40f12648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x40f0b890" loc="145:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40f0b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40f0ba68"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40f0bb48"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40f0bc28"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40f0bd08"/>
        <function-ref name="getEtx" scoped="" ref="0x40f0bde8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40f0bec8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40f0a010"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40f0a0f0"/>
        <function-ref name="getParent" scoped="" ref="0x40f0a1d0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40f0a2b0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40f0a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f13648" loc="132:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f13648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f13820"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f13900"/>
        <function-ref name="getPayload" scoped="" ref="0x40f139e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f13ac0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f13ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ee7700" loc="109:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ee7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ee78d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ee5618" loc="112:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ee5618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ee5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40ee2010" loc="118:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40ee2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40ee21e8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40ee22c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x40f13070" loc="131:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40f13070"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40f13248"/>
        <function-ref name="routeFound" scoped="" ref="0x40f13328"/>
        <function-ref name="nextHop" scoped="" ref="0x40f13408"/>
        <function-ref name="noRoute" scoped="" ref="0x40f134e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f09a50" loc="149:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f09a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f09c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f09d08"/>
        <function-ref name="led1On" scoped="" ref="0x40f09de8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f09ec8"/>
        <function-ref name="led3Off" scoped="" ref="0x40f08010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f080f0"/>
        <function-ref name="get" scoped="" ref="0x40f081d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40f082b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40f08390"/>
        <function-ref name="led3On" scoped="" ref="0x40f08470"/>
        <function-ref name="led0On" scoped="" ref="0x40f08550"/>
        <function-ref name="led2Off" scoped="" ref="0x40f08630"/>
        <function-ref name="led2On" scoped="" ref="0x40f08710"/>
        <function-ref name="set" scoped="" ref="0x40f08870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Talk" ref="0x40ee2408" loc="119:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Talk" scoped="" ref="0x40ee2408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Talk"/>
      </instance>
      <interface-functions>
        <function-ref name="get_s71" scoped="" ref="0x40ee25e0"/>
        <function-ref name="get_r71" scoped="" ref="0x40ee26c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40ee2ee8" loc="128:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ee2ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ee1188"/>
        <function-ref name="noAck" scoped="" ref="0x40ee1268"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ee1348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40ee3010" loc="117:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40ee3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40ee31e8"/>
        <function-ref name="option" scoped="" ref="0x40ee32c8"/>
        <function-ref name="setEtx" scoped="" ref="0x40ee33a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40ee3488"/>
        <function-ref name="clearOption" scoped="" ref="0x40ee3568"/>
        <function-ref name="getEtx" scoped="" ref="0x40ee3648"/>
        <function-ref name="getOrigin" scoped="" ref="0x40ee3728"/>
        <function-ref name="setType" scoped="" ref="0x40ee3808"/>
        <function-ref name="setOption" scoped="" ref="0x40ee38e8"/>
        <function-ref name="matchPacket" scoped="" ref="0x40ee39c8"/>
        <function-ref name="getThl" scoped="" ref="0x40ee3aa8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40ee3b88"/>
        <function-ref name="matchInstance" scoped="" ref="0x40ee3c68"/>
        <function-ref name="getType" scoped="" ref="0x40ee3dc8"/>
        <function-ref name="setThl" scoped="" ref="0x40ee3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x40f11958" loc="139:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x40f11958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e4cc98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e4cf20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f0faa8"/>
        <function-ref name="maxSize" scoped="" ref="0x40f0f4c0"/>
        <function-ref name="empty" scoped="" ref="0x40f0f010"/>
        <function-ref name="put" scoped="" ref="0x40f0f718"/>
        <function-ref name="size" scoped="" ref="0x40f0f268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f0ae68" loc="148:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f0ae68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f09050"/>
        <function-ref name="source" scoped="" ref="0x40f09130"/>
        <function-ref name="address" scoped="" ref="0x40f09210"/>
        <function-ref name="destination" scoped="" ref="0x40f092f0"/>
        <function-ref name="setSource" scoped="" ref="0x40f093d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f094b0"/>
        <function-ref name="type" scoped="" ref="0x40f09590"/>
        <function-ref name="setType" scoped="" ref="0x40f09670"/>
        <function-ref name="isForMe" scoped="" ref="0x40f09750"/>
        <function-ref name="setGroup" scoped="" ref="0x40f09830"/>
        <function-ref name="localGroup" scoped="" ref="0x40f09910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ee7a18" loc="110:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ee7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ee7bf0"/>
        <function-ref name="stop" scoped="" ref="0x40ee7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x40f0b578" loc="144:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x40f0b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f0b750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40f0fee0" loc="140:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40f0fee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f0d010"/>
        <function-ref name="maxSize" scoped="" ref="0x40f0ea08"/>
        <function-ref name="empty" scoped="" ref="0x40f0e558"/>
        <function-ref name="put" scoped="" ref="0x40f0ec60"/>
        <function-ref name="size" scoped="" ref="0x40f0e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40f0ab40" loc="147:./net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40f0ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40f0ad28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40f00950" loc="42:/usr/src/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40f00950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40effaa8"/>
        <function-ref name="maxSize" scoped="" ref="0x40eff4c0"/>
        <function-ref name="empty" scoped="" ref="0x40eff010"/>
        <function-ref name="put" scoped="" ref="0x40eff718"/>
        <function-ref name="size" scoped="" ref="0x40eff268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x415579f0" loc="56:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x415579f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41556ae0"/>
        <function-ref name="maxSize" scoped="" ref="0x415564f8"/>
        <function-ref name="empty" scoped="" ref="0x41556048"/>
        <function-ref name="put" scoped="" ref="0x41556750"/>
        <function-ref name="size" scoped="" ref="0x415562a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41557648" loc="55:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41557648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41557820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40f21e40" loc="42:/usr/src/tinyos/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40f21e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e4cc98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e4cf20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f1e010"/>
        <function-ref name="maxSize" scoped="" ref="0x40f1f968"/>
        <function-ref name="empty" scoped="" ref="0x40f1f4b8"/>
        <function-ref name="put" scoped="" ref="0x40f1fbc0"/>
        <function-ref name="size" scoped="" ref="0x40f1f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4159b1e0" loc="56:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4159b1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e4cc98"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e4cf20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4159a2b8"/>
        <function-ref name="maxSize" scoped="" ref="0x4159bcb8"/>
        <function-ref name="empty" scoped="" ref="0x4159b808"/>
        <function-ref name="put" scoped="" ref="0x4159bf10"/>
        <function-ref name="size" scoped="" ref="0x4159ba60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4159de00" loc="55:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4159de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4159b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40f1c278" loc="43:/usr/src/tinyos/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f1c278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40e4cc98"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40e4cf20"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40f1b010"/>
        <function-ref name="enqueue" scoped="" ref="0x40f1b6f0"/>
        <function-ref name="element" scoped="" ref="0x40f1ba40"/>
        <function-ref name="maxSize" scoped="" ref="0x40f1cd50"/>
        <function-ref name="dequeue" scoped="" ref="0x40f1b380"/>
        <function-ref name="empty" scoped="" ref="0x40f1c8a0"/>
        <function-ref name="size" scoped="" ref="0x40f1caf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x40f41c48" loc="39:./net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x40f41c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40f40288"/>
        <function-ref name="flush" scoped="" ref="0x40f40788"/>
        <function-ref name="lookup" scoped="" ref="0x40f40508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x4158c120" loc="46:./net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x4158c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x4158c748"/>
        <function-ref name="flush" scoped="" ref="0x4158cc48"/>
        <function-ref name="lookup" scoped="" ref="0x4158c9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4158dd18" loc="45:./net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4158dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4158def0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x4158ce88" loc="49:./net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x4158ce88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4158a070"/>
        <function-ref name="option" scoped="" ref="0x4158a150"/>
        <function-ref name="setEtx" scoped="" ref="0x4158a230"/>
        <function-ref name="setOrigin" scoped="" ref="0x4158a310"/>
        <function-ref name="clearOption" scoped="" ref="0x4158a3f0"/>
        <function-ref name="getEtx" scoped="" ref="0x4158a4d0"/>
        <function-ref name="getOrigin" scoped="" ref="0x4158a5b0"/>
        <function-ref name="setType" scoped="" ref="0x4158a690"/>
        <function-ref name="setOption" scoped="" ref="0x4158a770"/>
        <function-ref name="matchPacket" scoped="" ref="0x4158a850"/>
        <function-ref name="getThl" scoped="" ref="0x4158a930"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4158aa10"/>
        <function-ref name="matchInstance" scoped="" ref="0x4158aaf0"/>
        <function-ref name="getType" scoped="" ref="0x4158ac50"/>
        <function-ref name="setThl" scoped="" ref="0x4158ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f5b680" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f5b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f58170"/>
        <function-ref name="fired" scoped="" ref="0x40f5a410"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f5ab18"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f5a8c0"/>
        <function-ref name="getdt" scoped="" ref="0x40f58620"/>
        <function-ref name="gett0" scoped="" ref="0x40f583c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40f5a668"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f5bca8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f5ae38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f5bf28"/>
        <function-ref name="stop" scoped="" ref="0x40f5a1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f57458" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f57458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f55010"/>
        <function-ref name="fired" scoped="" ref="0x40f56268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f56970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f56718"/>
        <function-ref name="getdt" scoped="" ref="0x40f554c0"/>
        <function-ref name="gett0" scoped="" ref="0x40f55268"/>
        <function-ref name="isRunning" scoped="" ref="0x40f564c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f57a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f56c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f57d00"/>
        <function-ref name="stop" scoped="" ref="0x40f56010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f81220" loc="49:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f81220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f813f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40f4d9b8" loc="39:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40f4d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40f4db90"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40f4dc70"/>
        <function-ref name="txNoAck" scoped="" ref="0x40f4dd50"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40f4de30"/>
        <function-ref name="evicted" scoped="" ref="0x40f4df10"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40f83010"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40f830f0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40f831d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f83698" loc="41:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f83698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f83870"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f83950"/>
        <function-ref name="getPayload" scoped="" ref="0x40f83a30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f83b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f83bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40f7e510" loc="46:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f7e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f7e6e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f7e7c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f7e8a8"/>
        <function-ref name="cancel" scoped="" ref="0x40f7e988"/>
        <function-ref name="sendDone" scoped="" ref="0x40f7ea68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f4ef20" loc="37:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f4ef20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f4d110"/>
        <function-ref name="getPayload" scoped="" ref="0x40f4d1f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4d2d0"/>
        <function-ref name="cancel" scoped="" ref="0x40f4d3b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4d490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40f81948" loc="51:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40f81948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40f81ba0"/>
        <function-ref name="rand32" scoped="" ref="0x40f81c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f829f0" loc="48:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f829f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f82bc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f82ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f82d88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f82e68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f81010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f83340" loc="40:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f83340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f83518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x40f7ec90" loc="47:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x40f7ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f7ee68"/>
        <function-ref name="source" scoped="" ref="0x40f82010"/>
        <function-ref name="address" scoped="" ref="0x40f820f0"/>
        <function-ref name="destination" scoped="" ref="0x40f821d0"/>
        <function-ref name="setSource" scoped="" ref="0x40f822b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f82390"/>
        <function-ref name="type" scoped="" ref="0x40f82470"/>
        <function-ref name="setType" scoped="" ref="0x40f82550"/>
        <function-ref name="isForMe" scoped="" ref="0x40f82630"/>
        <function-ref name="setGroup" scoped="" ref="0x40f82710"/>
        <function-ref name="localGroup" scoped="" ref="0x40f827f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f4d618" loc="38:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f4d618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x40f7e178" loc="42:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40f7e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40f7e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f4ea98" loc="36:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f4ea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f4ec70"/>
        <function-ref name="stop" scoped="" ref="0x40f4ed50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x40f815f0" loc="50:./net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40f815f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40f817c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ff4280" loc="49:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ff4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ff4458"/>
        <function-ref name="getPayload" scoped="" ref="0x40ff4538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ff4618"/>
        <function-ref name="cancel" scoped="" ref="0x40ff46f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ff47d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ff4918" loc="50:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ff4918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ff4af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ff4bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ff4cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ff4d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ff4e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4101e010" loc="51:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4101e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4101e1e8"/>
        <function-ref name="source" scoped="" ref="0x4101e2c8"/>
        <function-ref name="address" scoped="" ref="0x4101e3a8"/>
        <function-ref name="destination" scoped="" ref="0x4101e488"/>
        <function-ref name="setSource" scoped="" ref="0x4101e568"/>
        <function-ref name="setDestination" scoped="" ref="0x4101e648"/>
        <function-ref name="type" scoped="" ref="0x4101e728"/>
        <function-ref name="setType" scoped="" ref="0x4101e808"/>
        <function-ref name="isForMe" scoped="" ref="0x4101e8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x4101e9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x4101eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4101ec08" loc="52:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4101ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4101ede0"/>
        <function-ref name="noAck" scoped="" ref="0x4101eec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4101d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415c4010" loc="49:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415c4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415c41e8"/>
        <function-ref name="getPayload" scoped="" ref="0x415c42c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415c43a8"/>
        <function-ref name="cancel" scoped="" ref="0x415c4488"/>
        <function-ref name="sendDone" scoped="" ref="0x415c4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x415c46a8" loc="50:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x415c46a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x415c4880"/>
        <function-ref name="payloadLength" scoped="" ref="0x415c4960"/>
        <function-ref name="getPayload" scoped="" ref="0x415c4a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415c4b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415c4c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x415c4d40" loc="51:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415c4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415c4f18"/>
        <function-ref name="source" scoped="" ref="0x415c2010"/>
        <function-ref name="address" scoped="" ref="0x415c20f0"/>
        <function-ref name="destination" scoped="" ref="0x415c21d0"/>
        <function-ref name="setSource" scoped="" ref="0x415c22b0"/>
        <function-ref name="setDestination" scoped="" ref="0x415c2390"/>
        <function-ref name="type" scoped="" ref="0x415c2470"/>
        <function-ref name="setType" scoped="" ref="0x415c2550"/>
        <function-ref name="isForMe" scoped="" ref="0x415c2630"/>
        <function-ref name="setGroup" scoped="" ref="0x415c2710"/>
        <function-ref name="localGroup" scoped="" ref="0x415c27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x415c2950" loc="52:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x415c2950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x415c2b28"/>
        <function-ref name="noAck" scoped="" ref="0x415c2c08"/>
        <function-ref name="wasAcked" scoped="" ref="0x415c2ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415bd670" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415bd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415bd848"/>
        <function-ref name="getPayload" scoped="" ref="0x415bd928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415bda08"/>
        <function-ref name="cancel" scoped="" ref="0x415bdae8"/>
        <function-ref name="sendDone" scoped="" ref="0x415bdbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x415bdd38" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x415bdd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415bdf10"/>
        <function-ref name="getPayload" scoped="" ref="0x415bc010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415bc0f0"/>
        <function-ref name="cancel" scoped="" ref="0x415bc1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x415bc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x415bc3f0" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415bc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415bc5c8"/>
        <function-ref name="source" scoped="" ref="0x415bc6a8"/>
        <function-ref name="address" scoped="" ref="0x415bc788"/>
        <function-ref name="destination" scoped="" ref="0x415bc868"/>
        <function-ref name="setSource" scoped="" ref="0x415bc948"/>
        <function-ref name="setDestination" scoped="" ref="0x415bca28"/>
        <function-ref name="type" scoped="" ref="0x415bcb08"/>
        <function-ref name="setType" scoped="" ref="0x415bcbe8"/>
        <function-ref name="isForMe" scoped="" ref="0x415bccc8"/>
        <function-ref name="setGroup" scoped="" ref="0x415bcda8"/>
        <function-ref name="localGroup" scoped="" ref="0x415bce88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fde4c0" loc="43:/usr/src/tinyos/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fde4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fde698"/>
        <function-ref name="getPayload" scoped="" ref="0x40fde778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fde858"/>
        <function-ref name="cancel" scoped="" ref="0x40fde938"/>
        <function-ref name="sendDone" scoped="" ref="0x40fdea18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41028b48" loc="48:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41028b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41028d30"/>
        <function-ref name="getPayload" scoped="" ref="0x41028e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41028ef0"/>
        <function-ref name="cancel" scoped="" ref="0x41027010"/>
        <function-ref name="sendDone" scoped="" ref="0x410270f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410283d8" loc="46:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410283d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410285c0"/>
        <function-ref name="getPayload" scoped="" ref="0x410286a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41028780"/>
        <function-ref name="cancel" scoped="" ref="0x41028860"/>
        <function-ref name="sendDone" scoped="" ref="0x41028940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x41027e08" loc="50:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41027e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41026010"/>
        <function-ref name="payloadLength" scoped="" ref="0x410260f0"/>
        <function-ref name="getPayload" scoped="" ref="0x410261d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410262b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41026390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x41026510" loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x41026510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410266e8"/>
        <function-ref name="runTask" scoped="" ref="0x410267c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x41026948" loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x41026948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41026b20"/>
        <function-ref name="runTask" scoped="" ref="0x41026c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41027230" loc="49:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41027230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41027408"/>
        <function-ref name="source" scoped="" ref="0x410274e8"/>
        <function-ref name="address" scoped="" ref="0x410275c8"/>
        <function-ref name="destination" scoped="" ref="0x410276a8"/>
        <function-ref name="setSource" scoped="" ref="0x41027788"/>
        <function-ref name="setDestination" scoped="" ref="0x41027868"/>
        <function-ref name="type" scoped="" ref="0x41027948"/>
        <function-ref name="setType" scoped="" ref="0x41027a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41027b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41027be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41027cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4101ca70" loc="46:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4101ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4101cc48"/>
        <function-ref name="payloadLength" scoped="" ref="0x4101cd28"/>
        <function-ref name="getPayload" scoped="" ref="0x4101ce08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4101cee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4101b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4101c758" loc="45:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4101c758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4101c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4101b150" loc="47:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4101b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4101b328"/>
        <function-ref name="source" scoped="" ref="0x4101b408"/>
        <function-ref name="address" scoped="" ref="0x4101b4e8"/>
        <function-ref name="destination" scoped="" ref="0x4101b5c8"/>
        <function-ref name="setSource" scoped="" ref="0x4101b6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x4101b788"/>
        <function-ref name="type" scoped="" ref="0x4101b868"/>
        <function-ref name="setType" scoped="" ref="0x4101b948"/>
        <function-ref name="isForMe" scoped="" ref="0x4101ba28"/>
        <function-ref name="setGroup" scoped="" ref="0x4101bb08"/>
        <function-ref name="localGroup" scoped="" ref="0x4101bbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41015410" loc="47:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41015410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410155e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x410156c8"/>
        <function-ref name="getPayload" scoped="" ref="0x410157a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41015888"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41015968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x410150f8" loc="46:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x410150f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410152d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41015aa8" loc="48:/usr/src/tinyos/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41015aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41015c80"/>
        <function-ref name="source" scoped="" ref="0x41015d60"/>
        <function-ref name="address" scoped="" ref="0x41015e40"/>
        <function-ref name="destination" scoped="" ref="0x41015f20"/>
        <function-ref name="setSource" scoped="" ref="0x4104b018"/>
        <function-ref name="setDestination" scoped="" ref="0x4104b0f8"/>
        <function-ref name="type" scoped="" ref="0x4104b1d8"/>
        <function-ref name="setType" scoped="" ref="0x4104b2b8"/>
        <function-ref name="isForMe" scoped="" ref="0x4104b398"/>
        <function-ref name="setGroup" scoped="" ref="0x4104b478"/>
        <function-ref name="localGroup" scoped="" ref="0x4104b558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x410b16f8" loc="99:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x410b16f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x410b18d0"/>
        <function-ref name="setRoot" scoped="" ref="0x410b19b0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x410b1a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x410a5448" loc="245:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x410a5448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410a5620"/>
        <function-ref name="runTask" scoped="" ref="0x410a5700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x410ad328" loc="108:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x410ad328"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x410ad500"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x410ad5e0"/>
        <function-ref name="txNoAck" scoped="" ref="0x410ad6c0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x410ad7a0"/>
        <function-ref name="evicted" scoped="" ref="0x410ad880"/>
        <function-ref name="clearDLQ" scoped="" ref="0x410ad960"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x410ada40"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x410adb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x410afc48" loc="102:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x410afc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x410afe20"/>
        <function-ref name="setEtx" scoped="" ref="0x410aff00"/>
        <function-ref name="clearOption" scoped="" ref="0x410ae010"/>
        <function-ref name="getEtx" scoped="" ref="0x410ae0f0"/>
        <function-ref name="setOption" scoped="" ref="0x410ae1d0"/>
        <function-ref name="setParent" scoped="" ref="0x410ae2b0"/>
        <function-ref name="getParent" scoped="" ref="0x410ae390"/>
        <function-ref name="getOption" scoped="" ref="0x410ae470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x410ac870" loc="110:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x410ac870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410aca48"/>
        <function-ref name="stopDone" scoped="" ref="0x410acb28"/>
        <function-ref name="start" scoped="" ref="0x410acc08"/>
        <function-ref name="stop" scoped="" ref="0x410acce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x410a6478" loc="113:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x410a6478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x410a6650"/>
        <function-ref name="rand32" scoped="" ref="0x410a6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x410b1bd0" loc="100:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x410b1bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x410b1da8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x410b1e88"/>
        <function-ref name="numNeighbors" scoped="" ref="0x410af010"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x410af0f0"/>
        <function-ref name="getEtx" scoped="" ref="0x410af1d0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x410af2b0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x410af390"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x410af470"/>
        <function-ref name="getParent" scoped="" ref="0x410af550"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x410af630"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x410af710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x410a5010" loc="354:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x410a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410a51e8"/>
        <function-ref name="runTask" scoped="" ref="0x410a52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410ae5b0" loc="103:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410ae5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410ae788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x410ae918" loc="106:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x410ae918"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410aeaf0"/>
        <function-ref name="getPayload" scoped="" ref="0x410aebd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410aecb0"/>
        <function-ref name="cancel" scoped="" ref="0x410aed90"/>
        <function-ref name="sendDone" scoped="" ref="0x410aee70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x410aced8" loc="111:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x410aced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410aaa18"/>
        <function-ref name="fired" scoped="" ref="0x410abcb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410aa3d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x410aa180"/>
        <function-ref name="getdt" scoped="" ref="0x410aaec8"/>
        <function-ref name="gett0" scoped="" ref="0x410aac70"/>
        <function-ref name="isRunning" scoped="" ref="0x410abf08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410ab558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410aa6f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x410ab7d8"/>
        <function-ref name="stop" scoped="" ref="0x410aba58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x410a81b8" loc="112:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x410a81b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410a7d58"/>
        <function-ref name="fired" scoped="" ref="0x410a7010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410a7718"/>
        <function-ref name="isOneShot" scoped="" ref="0x410a74c0"/>
        <function-ref name="getdt" scoped="" ref="0x410a6268"/>
        <function-ref name="gett0" scoped="" ref="0x410a6010"/>
        <function-ref name="isRunning" scoped="" ref="0x410a7268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410a8860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410a7a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x410a8ae0"/>
        <function-ref name="stop" scoped="" ref="0x410a8d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x410a6870" loc="114:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x410a6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x410a6a48"/>
        <function-ref name="setClientCongested" scoped="" ref="0x410a6b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x410a6c68" loc="116:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x410a6c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x410a6e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x410ad010" loc="107:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x410ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410ad1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410adc60" loc="109:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410adc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410ade38"/>
        <function-ref name="source" scoped="" ref="0x410adf18"/>
        <function-ref name="address" scoped="" ref="0x410ac010"/>
        <function-ref name="destination" scoped="" ref="0x410ac0f0"/>
        <function-ref name="setSource" scoped="" ref="0x410ac1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x410ac2b0"/>
        <function-ref name="type" scoped="" ref="0x410ac390"/>
        <function-ref name="setType" scoped="" ref="0x410ac470"/>
        <function-ref name="isForMe" scoped="" ref="0x410ac550"/>
        <function-ref name="setGroup" scoped="" ref="0x410ac630"/>
        <function-ref name="localGroup" scoped="" ref="0x410ac710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410af850" loc="101:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410af850"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410afa28"/>
        <function-ref name="stop" scoped="" ref="0x410afb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x410b1140" loc="98:./net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x410b1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x410b1318"/>
        <function-ref name="routeFound" scoped="" ref="0x410b13f8"/>
        <function-ref name="nextHop" scoped="" ref="0x410b14d8"/>
        <function-ref name="noRoute" scoped="" ref="0x410b15b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x410db010" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410db010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410dab00"/>
        <function-ref name="fired" scoped="" ref="0x410dbd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410da4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x410da268"/>
        <function-ref name="getdt" scoped="" ref="0x410d9010"/>
        <function-ref name="gett0" scoped="" ref="0x410dad58"/>
        <function-ref name="isRunning" scoped="" ref="0x410da010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410db638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410da7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x410db8b8"/>
        <function-ref name="stop" scoped="" ref="0x410dbb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x410d6360" loc="49:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410d6360"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410d6538"/>
        <function-ref name="getPayload" scoped="" ref="0x410d6618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d66f8"/>
        <function-ref name="cancel" scoped="" ref="0x410d67d8"/>
        <function-ref name="sendDone" scoped="" ref="0x410d68b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x410d69f8" loc="50:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410d69f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410d6bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410d6cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x410d6d90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d6e70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410d5150" loc="51:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410d5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410d5328"/>
        <function-ref name="source" scoped="" ref="0x410d5408"/>
        <function-ref name="address" scoped="" ref="0x410d54e8"/>
        <function-ref name="destination" scoped="" ref="0x410d55c8"/>
        <function-ref name="setSource" scoped="" ref="0x410d56a8"/>
        <function-ref name="setDestination" scoped="" ref="0x410d5788"/>
        <function-ref name="type" scoped="" ref="0x410d5868"/>
        <function-ref name="setType" scoped="" ref="0x410d5948"/>
        <function-ref name="isForMe" scoped="" ref="0x410d5a28"/>
        <function-ref name="setGroup" scoped="" ref="0x410d5b08"/>
        <function-ref name="localGroup" scoped="" ref="0x410d5be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x410d5d48" loc="52:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x410d5d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x410d5f20"/>
        <function-ref name="noAck" scoped="" ref="0x410d4018"/>
        <function-ref name="wasAcked" scoped="" ref="0x410d40f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415f1238" loc="49:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415f1238"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415f1410"/>
        <function-ref name="getPayload" scoped="" ref="0x415f14f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415f15d0"/>
        <function-ref name="cancel" scoped="" ref="0x415f16b0"/>
        <function-ref name="sendDone" scoped="" ref="0x415f1790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x415f18d0" loc="50:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x415f18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x415f1aa8"/>
        <function-ref name="payloadLength" scoped="" ref="0x415f1b88"/>
        <function-ref name="getPayload" scoped="" ref="0x415f1c68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415f1d48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415f1e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41642010" loc="51:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41642010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416421e8"/>
        <function-ref name="source" scoped="" ref="0x416422c8"/>
        <function-ref name="address" scoped="" ref="0x416423a8"/>
        <function-ref name="destination" scoped="" ref="0x41642488"/>
        <function-ref name="setSource" scoped="" ref="0x41642568"/>
        <function-ref name="setDestination" scoped="" ref="0x41642648"/>
        <function-ref name="type" scoped="" ref="0x41642728"/>
        <function-ref name="setType" scoped="" ref="0x41642808"/>
        <function-ref name="isForMe" scoped="" ref="0x416428e8"/>
        <function-ref name="setGroup" scoped="" ref="0x416429c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41642aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41642c08" loc="52:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41642c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41642de0"/>
        <function-ref name="noAck" scoped="" ref="0x41642ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41641010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4163f998" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4163f998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4163fb70"/>
        <function-ref name="getPayload" scoped="" ref="0x4163fc50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4163fd30"/>
        <function-ref name="cancel" scoped="" ref="0x4163fe10"/>
        <function-ref name="sendDone" scoped="" ref="0x4163fef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4163c080" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4163c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4163c258"/>
        <function-ref name="getPayload" scoped="" ref="0x4163c338"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4163c418"/>
        <function-ref name="cancel" scoped="" ref="0x4163c4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x4163c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4163c718" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4163c718"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4163c8f0"/>
        <function-ref name="source" scoped="" ref="0x4163c9d0"/>
        <function-ref name="address" scoped="" ref="0x4163cab0"/>
        <function-ref name="destination" scoped="" ref="0x4163cb90"/>
        <function-ref name="setSource" scoped="" ref="0x4163cc70"/>
        <function-ref name="setDestination" scoped="" ref="0x4163cd50"/>
        <function-ref name="type" scoped="" ref="0x4163ce30"/>
        <function-ref name="setType" scoped="" ref="0x4163cf10"/>
        <function-ref name="isForMe" scoped="" ref="0x4163b010"/>
        <function-ref name="setGroup" scoped="" ref="0x4163b0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4163b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x410d36d0" loc="46:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410d36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410d38a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x410d3988"/>
        <function-ref name="getPayload" scoped="" ref="0x410d3a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410d3b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410d3c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x410d33b8" loc="45:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x410d33b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410d3590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x410d3d68" loc="47:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410d3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410d1010"/>
        <function-ref name="source" scoped="" ref="0x410d10f0"/>
        <function-ref name="address" scoped="" ref="0x410d11d0"/>
        <function-ref name="destination" scoped="" ref="0x410d12b0"/>
        <function-ref name="setSource" scoped="" ref="0x410d1390"/>
        <function-ref name="setDestination" scoped="" ref="0x410d1470"/>
        <function-ref name="type" scoped="" ref="0x410d1550"/>
        <function-ref name="setType" scoped="" ref="0x410d1630"/>
        <function-ref name="isForMe" scoped="" ref="0x410d1710"/>
        <function-ref name="setGroup" scoped="" ref="0x410d17f0"/>
        <function-ref name="localGroup" scoped="" ref="0x410d18d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x410cf498" loc="2:./net/ctp/DummyActiveMessageP.nc">
      <component-ref qname="DummyActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x410cf498"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x410cf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x410fb150" loc="46:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="BaseC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410fb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410fb328"/>
        <function-ref name="payloadLength" scoped="" ref="0x410fb408"/>
        <function-ref name="getPayload" scoped="" ref="0x410fb4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410fb5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410fb6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410fc9e8" loc="45:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="BaseC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410fc9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410fcbc0"/>
        <function-ref name="getPayload" scoped="" ref="0x410fcca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410fcd80"/>
        <function-ref name="cancel" scoped="" ref="0x410fce60"/>
        <function-ref name="sendDone" scoped="" ref="0x410fb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4162d318" loc="38:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="BaseC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4162d318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4162d4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4162d5d0"/>
        <function-ref name="getPayload" scoped="" ref="0x4162d6b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4162d790"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4162d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4162fc68" loc="37:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="BaseC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4162fc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4162fe40"/>
        <function-ref name="getPayload" scoped="" ref="0x4162ff20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4162d018"/>
        <function-ref name="cancel" scoped="" ref="0x4162d0f8"/>
        <function-ref name="sendDone" scoped="" ref="0x4162d1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x4162a420" loc="46:./net/CollectionIdP.nc">
      <component-ref qname="BaseC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x4162a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x4162a5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x410edbf0" loc="49:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BaseC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410edbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410eddc8"/>
        <function-ref name="getPayload" scoped="" ref="0x410edea8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4111b010"/>
        <function-ref name="cancel" scoped="" ref="0x4111b0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4111b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4111b310" loc="50:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BaseC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4111b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4111b4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4111b5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4111b6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4111b788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4111b868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4111b9a8" loc="51:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BaseC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4111b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4111bb80"/>
        <function-ref name="source" scoped="" ref="0x4111bc60"/>
        <function-ref name="address" scoped="" ref="0x4111bd40"/>
        <function-ref name="destination" scoped="" ref="0x4111be20"/>
        <function-ref name="setSource" scoped="" ref="0x4111bf00"/>
        <function-ref name="setDestination" scoped="" ref="0x4111a010"/>
        <function-ref name="type" scoped="" ref="0x4111a0f0"/>
        <function-ref name="setType" scoped="" ref="0x4111a1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x4111a2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x4111a390"/>
        <function-ref name="localGroup" scoped="" ref="0x4111a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4111a5d0" loc="52:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="BaseC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4111a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4111a7a8"/>
        <function-ref name="noAck" scoped="" ref="0x4111a888"/>
        <function-ref name="wasAcked" scoped="" ref="0x4111a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41625670" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41625670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41625848"/>
        <function-ref name="getPayload" scoped="" ref="0x41625928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41625a08"/>
        <function-ref name="cancel" scoped="" ref="0x41625ae8"/>
        <function-ref name="sendDone" scoped="" ref="0x41625bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41625d38" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41625d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41625f10"/>
        <function-ref name="getPayload" scoped="" ref="0x41624010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416240f0"/>
        <function-ref name="cancel" scoped="" ref="0x416241d0"/>
        <function-ref name="sendDone" scoped="" ref="0x416242b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416243f0" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="BaseC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416245c8"/>
        <function-ref name="source" scoped="" ref="0x416246a8"/>
        <function-ref name="address" scoped="" ref="0x41624788"/>
        <function-ref name="destination" scoped="" ref="0x41624868"/>
        <function-ref name="setSource" scoped="" ref="0x41624948"/>
        <function-ref name="setDestination" scoped="" ref="0x41624a28"/>
        <function-ref name="type" scoped="" ref="0x41624b08"/>
        <function-ref name="setType" scoped="" ref="0x41624be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41624cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41624da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41624e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410e7b70" loc="44:/usr/src/tinyos/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410e7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e7d48"/>
        <function-ref name="getPayload" scoped="" ref="0x410e7e28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410e7f08"/>
        <function-ref name="cancel" scoped="" ref="0x410e4010"/>
        <function-ref name="sendDone" scoped="" ref="0x410e40f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x410e39f0" loc="48:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410e39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e3bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x410e3cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410e3d98"/>
        <function-ref name="cancel" scoped="" ref="0x410e3e78"/>
        <function-ref name="sendDone" scoped="" ref="0x41120010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410e3280" loc="46:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410e3280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410e3468"/>
        <function-ref name="getPayload" scoped="" ref="0x410e3548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410e3628"/>
        <function-ref name="cancel" scoped="" ref="0x410e3708"/>
        <function-ref name="sendDone" scoped="" ref="0x410e37e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x41120d28" loc="50:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41120d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41120f00"/>
        <function-ref name="payloadLength" scoped="" ref="0x4111f010"/>
        <function-ref name="getPayload" scoped="" ref="0x4111f0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4111f1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4111f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x4111f430" loc="169:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x4111f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4111f608"/>
        <function-ref name="runTask" scoped="" ref="0x4111f6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x4111f868" loc="126:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x4111f868"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4111fa40"/>
        <function-ref name="runTask" scoped="" ref="0x4111fb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41120150" loc="49:/usr/src/tinyos/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41120150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41120328"/>
        <function-ref name="source" scoped="" ref="0x41120408"/>
        <function-ref name="address" scoped="" ref="0x411204e8"/>
        <function-ref name="destination" scoped="" ref="0x411205c8"/>
        <function-ref name="setSource" scoped="" ref="0x411206a8"/>
        <function-ref name="setDestination" scoped="" ref="0x41120788"/>
        <function-ref name="type" scoped="" ref="0x41120868"/>
        <function-ref name="setType" scoped="" ref="0x41120948"/>
        <function-ref name="isForMe" scoped="" ref="0x41120a28"/>
        <function-ref name="setGroup" scoped="" ref="0x41120b08"/>
        <function-ref name="localGroup" scoped="" ref="0x41120be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411136d0" loc="46:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="BaseC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411136d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411138a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41113988"/>
        <function-ref name="getPayload" scoped="" ref="0x41113a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41113b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41113c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411133b8" loc="45:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="BaseC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411133b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41113590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41113d68" loc="47:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="BaseC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41113d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41112010"/>
        <function-ref name="source" scoped="" ref="0x411120f0"/>
        <function-ref name="address" scoped="" ref="0x411121d0"/>
        <function-ref name="destination" scoped="" ref="0x411122b0"/>
        <function-ref name="setSource" scoped="" ref="0x41112390"/>
        <function-ref name="setDestination" scoped="" ref="0x41112470"/>
        <function-ref name="type" scoped="" ref="0x41112550"/>
        <function-ref name="setType" scoped="" ref="0x41112630"/>
        <function-ref name="isForMe" scoped="" ref="0x41112710"/>
        <function-ref name="setGroup" scoped="" ref="0x411127f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411128d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x411103d0" loc="42:/usr/src/tinyos/tos/system/PoolC.nc">
      <component-ref qname="BaseC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x411103d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4110e4c0"/>
        <function-ref name="maxSize" scoped="" ref="0x41110ea8"/>
        <function-ref name="empty" scoped="" ref="0x411109f8"/>
        <function-ref name="put" scoped="" ref="0x4110e130"/>
        <function-ref name="size" scoped="" ref="0x41110c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4164dce0" loc="56:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="BaseC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4164dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4164cde8"/>
        <function-ref name="maxSize" scoped="" ref="0x4164c800"/>
        <function-ref name="empty" scoped="" ref="0x4164c350"/>
        <function-ref name="put" scoped="" ref="0x4164ca58"/>
        <function-ref name="size" scoped="" ref="0x4164c5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4164d938" loc="55:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="BaseC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4164d938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4164db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x4110d6c8" loc="43:/usr/src/tinyos/tos/system/QueueC.nc">
      <component-ref qname="BaseC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4110d6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4110c4c0"/>
        <function-ref name="enqueue" scoped="" ref="0x4110cba0"/>
        <function-ref name="element" scoped="" ref="0x4110cef0"/>
        <function-ref name="maxSize" scoped="" ref="0x4110c268"/>
        <function-ref name="dequeue" scoped="" ref="0x4110c830"/>
        <function-ref name="empty" scoped="" ref="0x4110dcf0"/>
        <function-ref name="size" scoped="" ref="0x4110c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AutoOn" ref="0x41103bc8" loc="11:./SerialToDis/SerialToDisseminationC.nc">
      <component-ref qname="SerialToDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AutoOn" scoped="" ref="0x41103bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AutoOn"/>
      </instance>
      <interface-functions>
        <function-ref name="AutoOnControl" scoped="" ref="0x41103da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41103188" loc="10:./SerialToDis/SerialToDisseminationC.nc">
      <component-ref qname="SerialToDisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41103188"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41103360"/>
        <function-ref name="stop" scoped="" ref="0x41103440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x411370e8" loc="25:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x411370e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411372c0"/>
        <function-ref name="stopDone" scoped="" ref="0x411373a0"/>
        <function-ref name="start" scoped="" ref="0x41137480"/>
        <function-ref name="stop" scoped="" ref="0x41137560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunCommand" ref="0x41132098" loc="28:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommand" scoped="" ref="0x41132098"/></type-interface>
      <instance>
        <interfacedef-ref qname="RunCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="exec" scoped="" ref="0x41132270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x411397a0" loc="22:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x411397a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41139978"/>
        <function-ref name="stop" scoped="" ref="0x41139a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41134900" loc="33:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41134900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41134ad8"/>
        <function-ref name="getPayload" scoped="" ref="0x41134bb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41134c98"/>
        <function-ref name="cancel" scoped="" ref="0x41134d78"/>
        <function-ref name="sendDone" scoped="" ref="0x41134e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunCommandControl" ref="0x411324e8" loc="29:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommandControl" scoped="" ref="0x411324e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411326c0"/>
        <function-ref name="stop" scoped="" ref="0x411327a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x411330e0" loc="34:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x411330e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411332b8"/>
        <function-ref name="stopDone" scoped="" ref="0x41133398"/>
        <function-ref name="start" scoped="" ref="0x41133478"/>
        <function-ref name="stop" scoped="" ref="0x41133558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandUpdate" ref="0x41136cd0" loc="21:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandUpdate" scoped="" ref="0x41136cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x4113fe78"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x4113c910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x41139310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x4112c2a0" loc="53:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x4112c2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4112c478"/>
        <function-ref name="runTask" scoped="" ref="0x4112c558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x411337b0" loc="35:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x411337b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41133a08"/>
        <function-ref name="stop" scoped="" ref="0x41133ae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandValue" ref="0x41138d40" loc="20:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandValue" scoped="" ref="0x41138d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x4113fe78"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x4113c910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x4113a8b8"/>
        <function-ref name="get" scoped="" ref="0x4113a3a0"/>
        <function-ref name="set" scoped="" ref="0x4113a618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x41139c88" loc="24:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x41139c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41139e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41132910" loc="31:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41132910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41132ae8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41132bc8"/>
        <function-ref name="led1On" scoped="" ref="0x41132ca8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41132d88"/>
        <function-ref name="led3Off" scoped="" ref="0x41132e68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41134010"/>
        <function-ref name="get" scoped="" ref="0x411340f0"/>
        <function-ref name="led1Off" scoped="" ref="0x411341d0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x411342b0"/>
        <function-ref name="led3On" scoped="" ref="0x41134390"/>
        <function-ref name="led0On" scoped="" ref="0x41134470"/>
        <function-ref name="led2Off" scoped="" ref="0x41134550"/>
        <function-ref name="led2On" scoped="" ref="0x41134630"/>
        <function-ref name="set" scoped="" ref="0x41134790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AutoOn" ref="0x4113b190" loc="16:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AutoOn" scoped="" ref="0x4113b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AutoOn"/>
      </instance>
      <interface-functions>
        <function-ref name="AutoOnControl" scoped="" ref="0x4113b368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4113cc98" loc="15:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4113cc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4113ce70"/>
        <function-ref name="stop" scoped="" ref="0x4113b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41133d30" loc="37:./SerialToDis/SerialToDisseminationP.nc">
      <component-ref qname="SerialToDisseminationP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41133d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4112f8a8"/>
        <function-ref name="fired" scoped="" ref="0x41131ac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4112f268"/>
        <function-ref name="isOneShot" scoped="" ref="0x4112f010"/>
        <function-ref name="getdt" scoped="" ref="0x4112fd58"/>
        <function-ref name="gett0" scoped="" ref="0x4112fb00"/>
        <function-ref name="isRunning" scoped="" ref="0x41131d20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41131370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4112f588"/>
        <function-ref name="startOneShot" scoped="" ref="0x411315f0"/>
        <function-ref name="stop" scoped="" ref="0x41131870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41153070" loc="46:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="SerialToDisseminationC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41153070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41153248"/>
        <function-ref name="payloadLength" scoped="" ref="0x41153328"/>
        <function-ref name="getPayload" scoped="" ref="0x41153408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411534e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411535c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41154d38" loc="45:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="SerialToDisseminationC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41154d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41154f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41153708" loc="47:/usr/src/tinyos/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="SerialToDisseminationC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41153708"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411538e0"/>
        <function-ref name="source" scoped="" ref="0x411539c0"/>
        <function-ref name="address" scoped="" ref="0x41153aa0"/>
        <function-ref name="destination" scoped="" ref="0x41153b80"/>
        <function-ref name="setSource" scoped="" ref="0x41153c60"/>
        <function-ref name="setDestination" scoped="" ref="0x41153d40"/>
        <function-ref name="type" scoped="" ref="0x41153e20"/>
        <function-ref name="setType" scoped="" ref="0x41153f00"/>
        <function-ref name="isForMe" scoped="" ref="0x41150010"/>
        <function-ref name="setGroup" scoped="" ref="0x411500f0"/>
        <function-ref name="localGroup" scoped="" ref="0x411501d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4114b890" loc="47:./net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4114b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4114ba68"/>
        <function-ref name="stop" scoped="" ref="0x4114bb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x4117e590" loc="52:./net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4117e590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4117e768"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4117e848"/>
        <function-ref name="reset" scoped="" ref="0x4117e928"/>
        <function-ref name="start" scoped="" ref="0x4117ea08"/>
        <function-ref name="stop" scoped="" ref="0x4117eae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x411471b8" loc="51:./net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x411471b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x41147470"/>
        <function-ref name="stop" scoped="" ref="0x411477f0"/>
        <function-ref name="newData" scoped="" ref="0x41147550"/>
        <function-ref name="start" scoped="" ref="0x41147630"/>
        <function-ref name="requestSeqno" scoped="" ref="0x41147710"/>
        <function-ref name="requestData" scoped="" ref="0x41147390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4114a440" loc="48:./net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4114a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4114a618"/>
        <function-ref name="stop" scoped="" ref="0x4114a6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x41146100" loc="53:./net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x41146100"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411462d8"/>
        <function-ref name="stop" scoped="" ref="0x411463b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x411780e0" loc="57:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x411780e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411782b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x41179940" loc="56:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x41179940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41179b18"/>
        <function-ref name="getPayload" scoped="" ref="0x41179bf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41179cd8"/>
        <function-ref name="cancel" scoped="" ref="0x41179db8"/>
        <function-ref name="sendDone" scoped="" ref="0x41179e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x4117be38" loc="53:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4117be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41179050"/>
        <function-ref name="getPayload" scoped="" ref="0x41179130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41179210"/>
        <function-ref name="cancel" scoped="" ref="0x411792f0"/>
        <function-ref name="sendDone" scoped="" ref="0x411793d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x4117cf10" loc="50:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4117cf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4117b108"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4117b1e8"/>
        <function-ref name="reset" scoped="" ref="0x4117b2c8"/>
        <function-ref name="start" scoped="" ref="0x4117b3a8"/>
        <function-ref name="stop" scoped="" ref="0x4117b488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x4117c420" loc="49:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x4117c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x4117c6d8"/>
        <function-ref name="stop" scoped="" ref="0x4117ca58"/>
        <function-ref name="newData" scoped="" ref="0x4117c7b8"/>
        <function-ref name="start" scoped="" ref="0x4117c898"/>
        <function-ref name="requestSeqno" scoped="" ref="0x4117c978"/>
        <function-ref name="requestData" scoped="" ref="0x4117c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x41179558" loc="54:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41179558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41179730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41178428" loc="59:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41178428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41178600"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411786e0"/>
        <function-ref name="led1On" scoped="" ref="0x411787c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411788a0"/>
        <function-ref name="led3Off" scoped="" ref="0x41178980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41178a60"/>
        <function-ref name="get" scoped="" ref="0x41178b40"/>
        <function-ref name="led1Off" scoped="" ref="0x41178c20"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41178d00"/>
        <function-ref name="led3On" scoped="" ref="0x41178de0"/>
        <function-ref name="led0On" scoped="" ref="0x41178ec0"/>
        <function-ref name="led2Off" scoped="" ref="0x41177010"/>
        <function-ref name="led2On" scoped="" ref="0x411770f0"/>
        <function-ref name="set" scoped="" ref="0x41177250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41146c30" loc="46:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41146c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41146e08"/>
        <function-ref name="stop" scoped="" ref="0x41146ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x4117ba00" loc="51:./net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x4117ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4117bbd8"/>
        <function-ref name="stop" scoped="" ref="0x4117bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4117d778" loc="49:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4117d778"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4117d950"/>
        <function-ref name="getPayload" scoped="" ref="0x4117da30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4117db10"/>
        <function-ref name="cancel" scoped="" ref="0x4117dbf0"/>
        <function-ref name="sendDone" scoped="" ref="0x4117dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4117de10" loc="50:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4117de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4118b010"/>
        <function-ref name="payloadLength" scoped="" ref="0x4118b0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4118b1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4118b2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4118b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4118b4d0" loc="51:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4118b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4118b6a8"/>
        <function-ref name="source" scoped="" ref="0x4118b788"/>
        <function-ref name="address" scoped="" ref="0x4118b868"/>
        <function-ref name="destination" scoped="" ref="0x4118b948"/>
        <function-ref name="setSource" scoped="" ref="0x4118ba28"/>
        <function-ref name="setDestination" scoped="" ref="0x4118bb08"/>
        <function-ref name="type" scoped="" ref="0x4118bbe8"/>
        <function-ref name="setType" scoped="" ref="0x4118bcc8"/>
        <function-ref name="isForMe" scoped="" ref="0x4118bda8"/>
        <function-ref name="setGroup" scoped="" ref="0x4118be88"/>
        <function-ref name="localGroup" scoped="" ref="0x4118a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4118a170" loc="52:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4118a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4118a348"/>
        <function-ref name="noAck" scoped="" ref="0x4118a428"/>
        <function-ref name="wasAcked" scoped="" ref="0x4118a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41688450" loc="49:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41688450"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41688628"/>
        <function-ref name="getPayload" scoped="" ref="0x41688708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416887e8"/>
        <function-ref name="cancel" scoped="" ref="0x416888c8"/>
        <function-ref name="sendDone" scoped="" ref="0x416889a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41688ae8" loc="50:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41688ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41688cc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41688da0"/>
        <function-ref name="getPayload" scoped="" ref="0x41688e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41687010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x416870f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41687230" loc="51:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41687230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41687408"/>
        <function-ref name="source" scoped="" ref="0x416874e8"/>
        <function-ref name="address" scoped="" ref="0x416875c8"/>
        <function-ref name="destination" scoped="" ref="0x416876a8"/>
        <function-ref name="setSource" scoped="" ref="0x41687788"/>
        <function-ref name="setDestination" scoped="" ref="0x41687868"/>
        <function-ref name="type" scoped="" ref="0x41687948"/>
        <function-ref name="setType" scoped="" ref="0x41687a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41687b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41687be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41687cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41687e28" loc="52:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41687e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41686050"/>
        <function-ref name="noAck" scoped="" ref="0x41686130"/>
        <function-ref name="wasAcked" scoped="" ref="0x41686210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41680010" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41680010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416801e8"/>
        <function-ref name="getPayload" scoped="" ref="0x416802c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416803a8"/>
        <function-ref name="cancel" scoped="" ref="0x41680488"/>
        <function-ref name="sendDone" scoped="" ref="0x41680568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416806d8" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416806d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416808b0"/>
        <function-ref name="getPayload" scoped="" ref="0x41680990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41680a70"/>
        <function-ref name="cancel" scoped="" ref="0x41680b50"/>
        <function-ref name="sendDone" scoped="" ref="0x41680c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41680d70" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41680d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4167f010"/>
        <function-ref name="source" scoped="" ref="0x4167f0f0"/>
        <function-ref name="address" scoped="" ref="0x4167f1d0"/>
        <function-ref name="destination" scoped="" ref="0x4167f2b0"/>
        <function-ref name="setSource" scoped="" ref="0x4167f390"/>
        <function-ref name="setDestination" scoped="" ref="0x4167f470"/>
        <function-ref name="type" scoped="" ref="0x4167f550"/>
        <function-ref name="setType" scoped="" ref="0x4167f630"/>
        <function-ref name="isForMe" scoped="" ref="0x4167f710"/>
        <function-ref name="setGroup" scoped="" ref="0x4167f7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4167f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41189f20" loc="46:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41189f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41188110"/>
        <function-ref name="payloadLength" scoped="" ref="0x411881f0"/>
        <function-ref name="getPayload" scoped="" ref="0x411882d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411883b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41188490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41189c08" loc="45:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41189c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41189de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411885d0" loc="47:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411885d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411887a8"/>
        <function-ref name="source" scoped="" ref="0x41188888"/>
        <function-ref name="address" scoped="" ref="0x41188968"/>
        <function-ref name="destination" scoped="" ref="0x41188a48"/>
        <function-ref name="setSource" scoped="" ref="0x41188b28"/>
        <function-ref name="setDestination" scoped="" ref="0x41188c08"/>
        <function-ref name="type" scoped="" ref="0x41188ce8"/>
        <function-ref name="setType" scoped="" ref="0x41188dc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41188ea8"/>
        <function-ref name="setGroup" scoped="" ref="0x41187010"/>
        <function-ref name="localGroup" scoped="" ref="0x411870f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411866a0" loc="49:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411866a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41186878"/>
        <function-ref name="getPayload" scoped="" ref="0x41186958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41186a38"/>
        <function-ref name="cancel" scoped="" ref="0x41186b18"/>
        <function-ref name="sendDone" scoped="" ref="0x41186bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41186d38" loc="50:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41186d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41186f10"/>
        <function-ref name="payloadLength" scoped="" ref="0x41185010"/>
        <function-ref name="getPayload" scoped="" ref="0x411850f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411851d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411853f0" loc="51:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411853f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411855c8"/>
        <function-ref name="source" scoped="" ref="0x411856a8"/>
        <function-ref name="address" scoped="" ref="0x41185788"/>
        <function-ref name="destination" scoped="" ref="0x41185868"/>
        <function-ref name="setSource" scoped="" ref="0x41185948"/>
        <function-ref name="setDestination" scoped="" ref="0x41185a28"/>
        <function-ref name="type" scoped="" ref="0x41185b08"/>
        <function-ref name="setType" scoped="" ref="0x41185be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41185cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41185da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41185e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41183010" loc="52:/usr/src/tinyos/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41183010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411831e8"/>
        <function-ref name="noAck" scoped="" ref="0x411832c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x411833a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416702e8" loc="49:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416702e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416704c0"/>
        <function-ref name="getPayload" scoped="" ref="0x416705a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41670680"/>
        <function-ref name="cancel" scoped="" ref="0x41670760"/>
        <function-ref name="sendDone" scoped="" ref="0x41670840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41670980" loc="50:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41670980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41670b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x41670c38"/>
        <function-ref name="getPayload" scoped="" ref="0x41670d18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41670df8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41670ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4166f030" loc="51:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4166f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4166f208"/>
        <function-ref name="source" scoped="" ref="0x4166f2e8"/>
        <function-ref name="address" scoped="" ref="0x4166f3c8"/>
        <function-ref name="destination" scoped="" ref="0x4166f4a8"/>
        <function-ref name="setSource" scoped="" ref="0x4166f588"/>
        <function-ref name="setDestination" scoped="" ref="0x4166f668"/>
        <function-ref name="type" scoped="" ref="0x4166f748"/>
        <function-ref name="setType" scoped="" ref="0x4166f828"/>
        <function-ref name="isForMe" scoped="" ref="0x4166f908"/>
        <function-ref name="setGroup" scoped="" ref="0x4166f9e8"/>
        <function-ref name="localGroup" scoped="" ref="0x4166fac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4166fc28" loc="52:/usr/src/tinyos/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4166fc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4166fe00"/>
        <function-ref name="noAck" scoped="" ref="0x4166fee0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4166e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4166cda0" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4166cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416bd010"/>
        <function-ref name="getPayload" scoped="" ref="0x416bd0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416bd1d0"/>
        <function-ref name="cancel" scoped="" ref="0x416bd2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x416bd390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416bd500" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416bd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416bd6d8"/>
        <function-ref name="getPayload" scoped="" ref="0x416bd7b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416bd898"/>
        <function-ref name="cancel" scoped="" ref="0x416bd978"/>
        <function-ref name="sendDone" scoped="" ref="0x416bda58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416bdb98" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416bdb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416bdd70"/>
        <function-ref name="source" scoped="" ref="0x416bde50"/>
        <function-ref name="address" scoped="" ref="0x416bc010"/>
        <function-ref name="destination" scoped="" ref="0x416bc0f0"/>
        <function-ref name="setSource" scoped="" ref="0x416bc1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x416bc2b0"/>
        <function-ref name="type" scoped="" ref="0x416bc390"/>
        <function-ref name="setType" scoped="" ref="0x416bc470"/>
        <function-ref name="isForMe" scoped="" ref="0x416bc550"/>
        <function-ref name="setGroup" scoped="" ref="0x416bc630"/>
        <function-ref name="localGroup" scoped="" ref="0x416bc710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41182f28" loc="46:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41182f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41181110"/>
        <function-ref name="payloadLength" scoped="" ref="0x411811f0"/>
        <function-ref name="getPayload" scoped="" ref="0x411812d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411813b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41181490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41182c10" loc="45:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41182c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41182de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411815d0" loc="47:/usr/src/tinyos/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411815d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411817a8"/>
        <function-ref name="source" scoped="" ref="0x41181888"/>
        <function-ref name="address" scoped="" ref="0x41181968"/>
        <function-ref name="destination" scoped="" ref="0x41181a48"/>
        <function-ref name="setSource" scoped="" ref="0x41181b28"/>
        <function-ref name="setDestination" scoped="" ref="0x41181c08"/>
        <function-ref name="type" scoped="" ref="0x41181ce8"/>
        <function-ref name="setType" scoped="" ref="0x41181dc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41181ea8"/>
        <function-ref name="setGroup" scoped="" ref="0x41180010"/>
        <function-ref name="localGroup" scoped="" ref="0x411800f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x411ddcb0" loc="51:./net/drip/DisseminatorC.nc">
      <component-ref qname="SerialToDisseminationC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x411ddcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x4113fe78"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x4113c910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x412082e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x4114de78" loc="50:./net/drip/DisseminatorC.nc">
      <component-ref qname="SerialToDisseminationC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x4114de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x4113fe78"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x4113c910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x411dd9f0"/>
        <function-ref name="get" scoped="" ref="0x411dd4d8"/>
        <function-ref name="set" scoped="" ref="0x411dd750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x416ab750" loc="62:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x416ab750"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x416ab928"/>
        <function-ref name="runTask" scoped="" ref="0x416aba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x416ac010" loc="50:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x416ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x416ac2c8"/>
        <function-ref name="storeData" scoped="" ref="0x416ac648"/>
        <function-ref name="newData" scoped="" ref="0x416ac3a8"/>
        <function-ref name="start" scoped="" ref="0x416ac488"/>
        <function-ref name="requestSeqno" scoped="" ref="0x416ac568"/>
        <function-ref name="stop" scoped="" ref="0x416ac1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x416ad650" loc="49:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x416ad650"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x4113fe78"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x4113c910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x416adc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x416ac7a8" loc="52:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x416ac7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x416ac980"/>
        <function-ref name="led0Toggle" scoped="" ref="0x416aca60"/>
        <function-ref name="led1On" scoped="" ref="0x416acb40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x416acc20"/>
        <function-ref name="led3Off" scoped="" ref="0x416acd00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x416acde0"/>
        <function-ref name="get" scoped="" ref="0x416acec0"/>
        <function-ref name="led1Off" scoped="" ref="0x416ab010"/>
        <function-ref name="led3Toggle" scoped="" ref="0x416ab0f0"/>
        <function-ref name="led3On" scoped="" ref="0x416ab1d0"/>
        <function-ref name="led0On" scoped="" ref="0x416ab2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x416ab390"/>
        <function-ref name="led2On" scoped="" ref="0x416ab470"/>
        <function-ref name="set" scoped="" ref="0x416ab5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x416af808" loc="48:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x416af808"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cmd_msg" ref="0x4113fe78"/>
            <typename><typedef-ref name="cmd_msg_t" ref="0x4113c910"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x416ad390"/>
        <function-ref name="get" scoped="" ref="0x416afe50"/>
        <function-ref name="set" scoped="" ref="0x416ad0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x416af360" loc="46:./net/drip/DisseminatorP.nc">
      <component-ref qname="SerialToDisseminationC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x416af360"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x416af538"/>
        <function-ref name="stop" scoped="" ref="0x416af618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x4119f950" loc="45:./net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4119f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4119fb28"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4119fc08"/>
        <function-ref name="reset" scoped="" ref="0x4119fce8"/>
        <function-ref name="start" scoped="" ref="0x4119fdc8"/>
        <function-ref name="stop" scoped="" ref="0x4119fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x4120aad8" loc="47:./net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4120aad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4120acc0"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4120ada0"/>
        <function-ref name="reset" scoped="" ref="0x4120ae80"/>
        <function-ref name="start" scoped="" ref="0x41209010"/>
        <function-ref name="stop" scoped="" ref="0x412090f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x41698778" loc="54:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x41698778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41698950"/>
        <function-ref name="clear" scoped="" ref="0x41698a30"/>
        <function-ref name="toggle" scoped="" ref="0x41698b10"/>
        <function-ref name="get" scoped="" ref="0x41698bf0"/>
        <function-ref name="assign" scoped="" ref="0x41698cd0"/>
        <function-ref name="setAll" scoped="" ref="0x41698db0"/>
        <function-ref name="set" scoped="" ref="0x41698e90"/>
        <function-ref name="size" scoped="" ref="0x41697010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x41697170" loc="55:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x41697170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41697348"/>
        <function-ref name="clear" scoped="" ref="0x41697428"/>
        <function-ref name="toggle" scoped="" ref="0x41697508"/>
        <function-ref name="get" scoped="" ref="0x416975e8"/>
        <function-ref name="assign" scoped="" ref="0x416976c8"/>
        <function-ref name="setAll" scoped="" ref="0x416977a8"/>
        <function-ref name="set" scoped="" ref="0x41697888"/>
        <function-ref name="size" scoped="" ref="0x41697968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41697aa8" loc="56:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41697aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41697c80"/>
        <function-ref name="rand32" scoped="" ref="0x41697d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x4169cda0" loc="50:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4169cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4169b010"/>
        <function-ref name="incrementCounter" scoped="" ref="0x4169b0f0"/>
        <function-ref name="reset" scoped="" ref="0x4169b1d0"/>
        <function-ref name="start" scoped="" ref="0x4169b2b0"/>
        <function-ref name="stop" scoped="" ref="0x4169b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4169c9f0" loc="49:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4169c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4169cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x41696e20" loc="146:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x41696e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x416e9010"/>
        <function-ref name="runTask" scoped="" ref="0x416e90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41697ea0" loc="57:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41697ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x416960c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x416961a0"/>
        <function-ref name="led1On" scoped="" ref="0x41696280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41696360"/>
        <function-ref name="led3Off" scoped="" ref="0x41696440"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41696520"/>
        <function-ref name="get" scoped="" ref="0x41696600"/>
        <function-ref name="led1Off" scoped="" ref="0x416966e0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x416967c0"/>
        <function-ref name="led3On" scoped="" ref="0x416968a0"/>
        <function-ref name="led0On" scoped="" ref="0x41696980"/>
        <function-ref name="led2Off" scoped="" ref="0x41696a60"/>
        <function-ref name="led2On" scoped="" ref="0x41696b40"/>
        <function-ref name="set" scoped="" ref="0x41696ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4169b590" loc="53:./net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4169b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41698098"/>
        <function-ref name="fired" scoped="" ref="0x4169a330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4169aa38"/>
        <function-ref name="isOneShot" scoped="" ref="0x4169a7e0"/>
        <function-ref name="getdt" scoped="" ref="0x41698548"/>
        <function-ref name="gett0" scoped="" ref="0x416982f0"/>
        <function-ref name="isRunning" scoped="" ref="0x4169a588"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4169bbb8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4169ad58"/>
        <function-ref name="startOneShot" scoped="" ref="0x4169be38"/>
        <function-ref name="stop" scoped="" ref="0x4169a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x416e8ab8" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x416e8ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x416e6650"/>
        <function-ref name="fired" scoped="" ref="0x416e7858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x416e6010"/>
        <function-ref name="isOneShot" scoped="" ref="0x416e7d08"/>
        <function-ref name="getdt" scoped="" ref="0x416e6b00"/>
        <function-ref name="gett0" scoped="" ref="0x416e68a8"/>
        <function-ref name="isRunning" scoped="" ref="0x416e7ab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x416e7100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x416e6330"/>
        <function-ref name="startOneShot" scoped="" ref="0x416e7380"/>
        <function-ref name="stop" scoped="" ref="0x416e7600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416e4800" loc="46:/usr/src/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416e4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416e49d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x416e4b38" loc="47:/usr/src/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x416e4b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x416e4d10"/>
        <function-ref name="clear" scoped="" ref="0x416e4df0"/>
        <function-ref name="toggle" scoped="" ref="0x416e4ed0"/>
        <function-ref name="get" scoped="" ref="0x416e3010"/>
        <function-ref name="assign" scoped="" ref="0x416e30f0"/>
        <function-ref name="setAll" scoped="" ref="0x416e31d0"/>
        <function-ref name="set" scoped="" ref="0x416e32b0"/>
        <function-ref name="size" scoped="" ref="0x416e3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416e2010" loc="46:/usr/src/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416e2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416e21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x416e2348" loc="47:/usr/src/tinyos/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x416e2348"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x416e2520"/>
        <function-ref name="clear" scoped="" ref="0x416e2600"/>
        <function-ref name="toggle" scoped="" ref="0x416e26e0"/>
        <function-ref name="get" scoped="" ref="0x416e27c0"/>
        <function-ref name="assign" scoped="" ref="0x416e28a0"/>
        <function-ref name="setAll" scoped="" ref="0x416e2980"/>
        <function-ref name="set" scoped="" ref="0x416e2a60"/>
        <function-ref name="size" scoped="" ref="0x416e2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RunCommand" ref="0x412066e8" loc="3:./Command/RunCommandC.nc">
      <component-ref qname="RunCommandC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommand" scoped="" ref="0x412066e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RunCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="exec" scoped="" ref="0x412068c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RunCommandControl" ref="0x41206b38" loc="4:./Command/RunCommandC.nc">
      <component-ref qname="RunCommandC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommandControl" scoped="" ref="0x41206b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41206d10"/>
        <function-ref name="stop" scoped="" ref="0x41206df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RunCommand" ref="0x41200628" loc="7:./Command/RunCommandP.nc">
      <component-ref qname="RunCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommand" scoped="" ref="0x41200628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RunCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="exec" scoped="" ref="0x41200800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RealExeControl" ref="0x41200a98" loc="10:./Command/RunCommandP.nc">
      <component-ref qname="RunCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RealExeControl" scoped="" ref="0x41200a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41200c70"/>
        <function-ref name="stop" scoped="" ref="0x41200d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RunCommandControl" ref="0x412001c8" loc="6:./Command/RunCommandP.nc">
      <component-ref qname="RunCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunCommandControl" scoped="" ref="0x412001c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412003a0"/>
        <function-ref name="stop" scoped="" ref="0x41200480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41240010" loc="12:./Command/RunCommandP.nc">
      <component-ref qname="RunCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41240010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412401e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412402c8"/>
        <function-ref name="led1On" scoped="" ref="0x412403a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41240488"/>
        <function-ref name="led3Off" scoped="" ref="0x41240568"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41240648"/>
        <function-ref name="get" scoped="" ref="0x41240728"/>
        <function-ref name="led1Off" scoped="" ref="0x41240808"/>
        <function-ref name="led3Toggle" scoped="" ref="0x412408e8"/>
        <function-ref name="led3On" scoped="" ref="0x412409c8"/>
        <function-ref name="led0On" scoped="" ref="0x41240aa8"/>
        <function-ref name="led2Off" scoped="" ref="0x41240b88"/>
        <function-ref name="led2On" scoped="" ref="0x41240c68"/>
        <function-ref name="set" scoped="" ref="0x41240dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Execute" ref="0x4123e8c0" loc="11:./Command/RunCommandP.nc">
      <component-ref qname="RunCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Execute" scoped="" ref="0x4123e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Execute"/>
      </instance>
      <interface-functions>
        <function-ref name="GpioControl" scoped="" ref="0x4123ea98"/>
        <function-ref name="LedToggle" scoped="" ref="0x4123eb78"/>
        <function-ref name="Ping" scoped="" ref="0x4123ec58"/>
        <function-ref name="Reboot" scoped="" ref="0x4123ed38"/>
        <function-ref name="GetNetInfo" scoped="" ref="0x4123ee18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RealExeControl" ref="0x41202e28" loc="4:./Command/RealExeC.nc">
      <component-ref qname="RealExeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RealExeControl" scoped="" ref="0x41202e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41238050"/>
        <function-ref name="stop" scoped="" ref="0x41238130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Execute" ref="0x41202678" loc="3:./Command/RealExeC.nc">
      <component-ref qname="RealExeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Execute" scoped="" ref="0x41202678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Execute"/>
      </instance>
      <interface-functions>
        <function-ref name="GpioControl" scoped="" ref="0x41202850"/>
        <function-ref name="LedToggle" scoped="" ref="0x41202930"/>
        <function-ref name="Ping" scoped="" ref="0x41202a10"/>
        <function-ref name="Reboot" scoped="" ref="0x41202af0"/>
        <function-ref name="GetNetInfo" scoped="" ref="0x41202bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x412292e8" loc="28:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x412292e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40446288"/>
            <typename><typedef-ref name="TMicro" ref="0x40446450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x41229a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x41232c68" loc="21:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x41232c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41232e40"/>
        <function-ref name="stopDone" scoped="" ref="0x41232f20"/>
        <function-ref name="start" scoped="" ref="0x41231018"/>
        <function-ref name="stop" scoped="" ref="0x412310f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendPing" ref="0x412622a0" loc="60:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendPing" scoped="" ref="0x412622a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41262478"/>
        <function-ref name="runTask" scoped="" ref="0x41262558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RealExeControl" ref="0x41235b98" loc="6:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RealExeControl" scoped="" ref="0x41235b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41235d70"/>
        <function-ref name="stop" scoped="" ref="0x41235e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x4125f080" loc="76:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x4125f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4125f258"/>
        <function-ref name="runTask" scoped="" ref="0x4125f338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x412330b0" loc="14:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x412330b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41233288"/>
        <function-ref name="stopDone" scoped="" ref="0x41233368"/>
        <function-ref name="start" scoped="" ref="0x41233448"/>
        <function-ref name="stop" scoped="" ref="0x41233528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x4122e888" loc="24:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x4122e888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4122d970"/>
        <function-ref name="maxSize" scoped="" ref="0x4122d388"/>
        <function-ref name="empty" scoped="" ref="0x4122eeb0"/>
        <function-ref name="put" scoped="" ref="0x4122d5e0"/>
        <function-ref name="size" scoped="" ref="0x4122d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x41231300" loc="22:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x41231300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412314d8"/>
        <function-ref name="getPayload" scoped="" ref="0x412315b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41231698"/>
        <function-ref name="cancel" scoped="" ref="0x41231778"/>
        <function-ref name="sendDone" scoped="" ref="0x41231858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x41233780" loc="15:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x41233780"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41233958"/>
        <function-ref name="stop" scoped="" ref="0x41233a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResponseSend" ref="0x41233c48" loc="16:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResponseSend" scoped="" ref="0x41233c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41233e20"/>
        <function-ref name="getPayload" scoped="" ref="0x41233f00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41232010"/>
        <function-ref name="cancel" scoped="" ref="0x412320f0"/>
        <function-ref name="sendDone" scoped="" ref="0x412321d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41234040" loc="9:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41234040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41234218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412342f8"/>
        <function-ref name="led1On" scoped="" ref="0x412343d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412344b8"/>
        <function-ref name="led3Off" scoped="" ref="0x41234598"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41234678"/>
        <function-ref name="get" scoped="" ref="0x41234758"/>
        <function-ref name="led1Off" scoped="" ref="0x41234838"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41234918"/>
        <function-ref name="led3On" scoped="" ref="0x412349f8"/>
        <function-ref name="led0On" scoped="" ref="0x41234ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x41234bb8"/>
        <function-ref name="led2On" scoped="" ref="0x41234c98"/>
        <function-ref name="set" scoped="" ref="0x41234df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResponseReceive" ref="0x41232410" loc="17:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResponseReceive" scoped="" ref="0x41232410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412325e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResponseSnoop" ref="0x41232818" loc="18:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResponseSnoop" scoped="" ref="0x41232818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412329f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Execute" ref="0x412353e8" loc="5:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Execute" scoped="" ref="0x412353e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Execute"/>
      </instance>
      <interface-functions>
        <function-ref name="GpioControl" scoped="" ref="0x412355c0"/>
        <function-ref name="LedToggle" scoped="" ref="0x412356a0"/>
        <function-ref name="Ping" scoped="" ref="0x41235780"/>
        <function-ref name="Reboot" scoped="" ref="0x41235860"/>
        <function-ref name="GetNetInfo" scoped="" ref="0x41235940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x41231b60" loc="23:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x41231b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x412308e8"/>
        <function-ref name="enqueue" scoped="" ref="0x4122e010"/>
        <function-ref name="element" scoped="" ref="0x4122e360"/>
        <function-ref name="maxSize" scoped="" ref="0x41230690"/>
        <function-ref name="dequeue" scoped="" ref="0x41230c58"/>
        <function-ref name="empty" scoped="" ref="0x412301e0"/>
        <function-ref name="size" scoped="" ref="0x41230438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4122de00" loc="26:./Command/RealExeP.nc">
      <component-ref qname="RealExeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4122de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4122a988"/>
        <function-ref name="fired" scoped="" ref="0x4122bc10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4122a348"/>
        <function-ref name="isOneShot" scoped="" ref="0x4122a0f0"/>
        <function-ref name="getdt" scoped="" ref="0x4122ae38"/>
        <function-ref name="gett0" scoped="" ref="0x4122abe0"/>
        <function-ref name="isRunning" scoped="" ref="0x4122be68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4122b4b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4122a668"/>
        <function-ref name="startOneShot" scoped="" ref="0x4122b738"/>
        <function-ref name="stop" scoped="" ref="0x4122b9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41283840" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="RealExeC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41283840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41281368"/>
        <function-ref name="fired" scoped="" ref="0x412825e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41282cf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41282a98"/>
        <function-ref name="getdt" scoped="" ref="0x41281818"/>
        <function-ref name="gett0" scoped="" ref="0x412815c0"/>
        <function-ref name="isRunning" scoped="" ref="0x41282840"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41283e68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41281048"/>
        <function-ref name="startOneShot" scoped="" ref="0x41282110"/>
        <function-ref name="stop" scoped="" ref="0x41282390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4127fd48" loc="46:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="RealExeC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4127fd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4127ff20"/>
        <function-ref name="payloadLength" scoped="" ref="0x4127d018"/>
        <function-ref name="getPayload" scoped="" ref="0x4127d0f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4127d1d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4127d2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4127f6b0" loc="45:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="RealExeC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4127f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4127f888"/>
        <function-ref name="getPayload" scoped="" ref="0x4127f968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4127fa48"/>
        <function-ref name="cancel" scoped="" ref="0x4127fb28"/>
        <function-ref name="sendDone" scoped="" ref="0x4127fc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41702e60" loc="38:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="RealExeC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41702e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41701050"/>
        <function-ref name="payloadLength" scoped="" ref="0x41701130"/>
        <function-ref name="getPayload" scoped="" ref="0x41701210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417012f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417013d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x417027c8" loc="37:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="RealExeC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x417027c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417029a0"/>
        <function-ref name="getPayload" scoped="" ref="0x41702a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41702b60"/>
        <function-ref name="cancel" scoped="" ref="0x41702c40"/>
        <function-ref name="sendDone" scoped="" ref="0x41702d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x41700f10" loc="46:./net/CollectionIdP.nc">
      <component-ref qname="RealExeC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x41700f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x416fe108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4127b368" loc="49:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="RealExeC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4127b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4127b540"/>
        <function-ref name="getPayload" scoped="" ref="0x4127b620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4127b700"/>
        <function-ref name="cancel" scoped="" ref="0x4127b7e0"/>
        <function-ref name="sendDone" scoped="" ref="0x4127b8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4127ba00" loc="50:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="RealExeC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4127ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4127bbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4127bcb8"/>
        <function-ref name="getPayload" scoped="" ref="0x4127bd98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4127be78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4127a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4127a150" loc="51:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="RealExeC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4127a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4127a328"/>
        <function-ref name="source" scoped="" ref="0x4127a408"/>
        <function-ref name="address" scoped="" ref="0x4127a4e8"/>
        <function-ref name="destination" scoped="" ref="0x4127a5c8"/>
        <function-ref name="setSource" scoped="" ref="0x4127a6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x4127a788"/>
        <function-ref name="type" scoped="" ref="0x4127a868"/>
        <function-ref name="setType" scoped="" ref="0x4127a948"/>
        <function-ref name="isForMe" scoped="" ref="0x4127aa28"/>
        <function-ref name="setGroup" scoped="" ref="0x4127ab08"/>
        <function-ref name="localGroup" scoped="" ref="0x4127abe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4127ad48" loc="52:/usr/src/tinyos/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="RealExeC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4127ad48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4127af20"/>
        <function-ref name="noAck" scoped="" ref="0x41279018"/>
        <function-ref name="wasAcked" scoped="" ref="0x412790f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x416f91f0" loc="44:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RealExeC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x416f91f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416f93c8"/>
        <function-ref name="getPayload" scoped="" ref="0x416f94a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416f9588"/>
        <function-ref name="cancel" scoped="" ref="0x416f9668"/>
        <function-ref name="sendDone" scoped="" ref="0x416f9748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x416f98b8" loc="46:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RealExeC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x416f98b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416f9a90"/>
        <function-ref name="getPayload" scoped="" ref="0x416f9b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416f9c50"/>
        <function-ref name="cancel" scoped="" ref="0x416f9d30"/>
        <function-ref name="sendDone" scoped="" ref="0x416f9e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416f8010" loc="47:/usr/src/tinyos/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RealExeC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x416f81e8"/>
        <function-ref name="source" scoped="" ref="0x416f82c8"/>
        <function-ref name="address" scoped="" ref="0x416f83a8"/>
        <function-ref name="destination" scoped="" ref="0x416f8488"/>
        <function-ref name="setSource" scoped="" ref="0x416f8568"/>
        <function-ref name="setDestination" scoped="" ref="0x416f8648"/>
        <function-ref name="type" scoped="" ref="0x416f8728"/>
        <function-ref name="setType" scoped="" ref="0x416f8808"/>
        <function-ref name="isForMe" scoped="" ref="0x416f88e8"/>
        <function-ref name="setGroup" scoped="" ref="0x416f89c8"/>
        <function-ref name="localGroup" scoped="" ref="0x416f8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41278b90" loc="42:/usr/src/tinyos/tos/system/PoolC.nc">
      <component-ref qname="RealExeC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41278b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41277c78"/>
        <function-ref name="maxSize" scoped="" ref="0x41277690"/>
        <function-ref name="empty" scoped="" ref="0x412771e0"/>
        <function-ref name="put" scoped="" ref="0x412778e8"/>
        <function-ref name="size" scoped="" ref="0x41277438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416ee9d0" loc="56:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="RealExeC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416ee9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
            <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416edaa8"/>
        <function-ref name="maxSize" scoped="" ref="0x416ed4c0"/>
        <function-ref name="empty" scoped="" ref="0x416ed010"/>
        <function-ref name="put" scoped="" ref="0x416ed718"/>
        <function-ref name="size" scoped="" ref="0x416ed268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416ee628" loc="55:/usr/src/tinyos/tos/system/PoolP.nc">
      <component-ref qname="RealExeC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416ee628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416ee800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x41276f00" loc="43:/usr/src/tinyos/tos/system/QueueC.nc">
      <component-ref qname="RealExeC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41276f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41274c60"/>
        <function-ref name="enqueue" scoped="" ref="0x41273380"/>
        <function-ref name="element" scoped="" ref="0x412736d0"/>
        <function-ref name="maxSize" scoped="" ref="0x41274a08"/>
        <function-ref name="dequeue" scoped="" ref="0x41273010"/>
        <function-ref name="empty" scoped="" ref="0x41274558"/>
        <function-ref name="size" scoped="" ref="0x412747b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4126e3f0" loc="46:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="SerialToDisseminationC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4126e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4126e5c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4126e6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x4126e788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4126e868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4126e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41204d20" loc="45:./net/ctp/CollectionSenderC_sonno.nc">
      <component-ref qname="SerialToDisseminationC.CollectionSenderC_sonno"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41204d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41204ef8"/>
        <function-ref name="getPayload" scoped="" ref="0x4126e010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4126e0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4126e1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4126e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41734e38" loc="38:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41734e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41733050"/>
        <function-ref name="payloadLength" scoped="" ref="0x41733130"/>
        <function-ref name="getPayload" scoped="" ref="0x41733210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x417332f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x417333d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x417347a0" loc="37:./net/ctp/CollectionSenderP.nc">
      <component-ref qname="SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x417347a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41734978"/>
        <function-ref name="getPayload" scoped="" ref="0x41734a58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41734b38"/>
        <function-ref name="cancel" scoped="" ref="0x41734c18"/>
        <function-ref name="sendDone" scoped="" ref="0x41734cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x41732f20" loc="46:./net/CollectionIdP.nc">
      <component-ref qname="SerialToDisseminationC.CollectionSenderC_sonno.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x41732f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x41730110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4126c030" loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialToDisseminationC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4126c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4043d928"/>
            <typename><typedef-ref name="TMilli" ref="0x4043daf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4126bb38"/>
        <function-ref name="fired" scoped="" ref="0x4126cdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4126b4f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4126b2a0"/>
        <function-ref name="getdt" scoped="" ref="0x4126a010"/>
        <function-ref name="gett0" scoped="" ref="0x4126bd90"/>
        <function-ref name="isRunning" scoped="" ref="0x4126b048"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4126c658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4126b818"/>
        <function-ref name="startOneShot" scoped="" ref="0x4126c8d8"/>
        <function-ref name="stop" scoped="" ref="0x4126cb58"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/usr/src/tinyos/tos/interfaces/Init.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404279d0" loc="62:/usr/src/tinyos/tos/interfaces/Init.nc">
        <documentation loc="53:/usr/src/tinyos/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/usr/src/tinyos/tos/interfaces/Boot.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40420dd0" loc="60:/usr/src/tinyos/tos/interfaces/Boot.nc">
        <documentation loc="51:/usr/src/tinyos/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4042cb40" loc="60:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4042c9e8" loc="60:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4042d158" loc="31:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4042d790" loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4042d638" loc="39:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4042de58" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4042dd00" loc="46:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4042c440" loc="53:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/usr/src/tinyos/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4046b010" loc="44:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4046b3f8" loc="45:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4046c838" loc="42:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4046bbc8" loc="47:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4046cbf8" loc="43:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4046b7d0" loc="46:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4046c0f8" loc="40:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4046c488" loc="41:/usr/src/tinyos/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404e7738" loc="113:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404e75e0" loc="113:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404f4730" loc="138:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404f45d8" loc="138:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404eaee8" loc="104:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404e7c48" loc="130:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/usr/src/tinyos/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40332888" loc="67:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40332da0" loc="75:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/usr/src/tinyos/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x404f2478" loc="68:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x404f2018" loc="61:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x404e9bf0" loc="54:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x404e9688" loc="53:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/usr/src/tinyos/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x40506538" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40506158" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x405050c8" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x405054d8" loc="57:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405068f0" loc="46:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x40505e48" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40505cf0" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40506cc0" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x405042c0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x405058f8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/usr/src/tinyos/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40537378" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40538de8" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40537030" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40537210" loc="80:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40534010" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="126:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40541bd0" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40541db0" loc="135:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40541670" loc="123:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="113:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40535058" loc="96:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="82:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40537ec0" loc="96:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40535d48" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
        <documentation loc="98:/usr/src/tinyos/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405359f0" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40535be8" loc="110:/usr/src/tinyos/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/usr/src/tinyos/tos/interfaces/Packet.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40521ba0" loc="65:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40521a48" loc="65:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x405475a0" loc="78:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40547448" loc="78:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40546558" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="109:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405461f8" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405463d8" loc="126:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40548bc0" loc="106:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="96:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40548228" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
        <documentation loc="80:/usr/src/tinyos/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40547ec0" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405480c8" loc="94:/usr/src/tinyos/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/usr/src/tinyos/tos/interfaces/Receive.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40523eb0" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
        <documentation loc="58:/usr/src/tinyos/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40523968" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40523b48" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40523d28" loc="78:/usr/src/tinyos/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
      <documentation loc="33:/usr/src/tinyos/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40411438" loc="63:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="60:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40411880" loc="69:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="65:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40411d00" loc="74:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="71:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40410580" loc="85:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="81:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x40418b40" loc="113:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="110:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40418298" loc="102:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="98:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404174b8" loc="134:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="122:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40410138" loc="79:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="76:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40417010" loc="119:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="115:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x40418718" loc="108:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="105:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40411010" loc="58:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="55:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40410e28" loc="96:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="93:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40410a00" loc="91:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="88:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40417c30" loc="149:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
        <documentation loc="137:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40417ad8" loc="149:/usr/src/tinyos/tos/platforms/ucmini/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x405553b8" loc="59:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40555260" loc="59:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40555eb0" loc="71:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40555d58" loc="71:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40554950" loc="85:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405547f8" loc="85:/usr/src/tinyos/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4054a648" loc="177:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054a4f0" loc="177:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40542010" loc="88:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40543e70" loc="88:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40545ee0" loc="68:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x405435c8" loc="78:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40543470" loc="78:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4054e8f8" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054e590" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4054e798" loc="121:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40542bf8" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40542890" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40542a98" loc="103:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4054c010" loc="147:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054dea0" loc="147:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4054cb48" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054c818" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4054c9e8" loc="162:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e65c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4054d4c0" loc="136:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054d368" loc="136:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4054b370" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4054b010" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4054b210" loc="187:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4054bbe8" loc="195:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/usr/src/tinyos/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/usr/src/tinyos/tos/interfaces/Send.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4055de88" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055db48" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4055dd28" loc="75:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40559a18" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="115:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405596b8" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40559898" loc="125:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40559158" loc="112:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="102:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4055ab38" loc="89:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="77:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055a9e0" loc="89:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40558820" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
        <documentation loc="91:/usr/src/tinyos/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405584c8" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405586c0" loc="100:/usr/src/tinyos/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40591d28" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40591998" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40591bc8" loc="31:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40594a80" loc="15:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40591388" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40591010" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40591228" loc="23:/usr/src/tinyos/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/usr/src/tinyos/tos/interfaces/StdControl.nc">
      <documentation loc="72:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x405b6e58" loc="95:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="88:/usr/src/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405b13c0" loc="105:/usr/src/tinyos/tos/interfaces/StdControl.nc">
        <documentation loc="97:/usr/src/tinyos/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x405b0590" loc="54:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x405b0158" loc="49:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x405ac9b0" loc="56:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x405b5698" loc="72:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x405b4790" loc="94:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405b4638" loc="94:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x405b5bc0" loc="79:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x405b5168" loc="65:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405b5010" loc="65:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x405b4c98" loc="100:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x405b4138" loc="85:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/usr/src/tinyos/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x405ab798" loc="71:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x405abd60" loc="81:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x405ab188" loc="62:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x405ab030" loc="62:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x405aa4c0" loc="91:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x405aa368" loc="91:/usr/src/tinyos/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x405ad8a8" loc="62:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x405a8168" loc="69:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405a8010" loc="69:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x405a8800" loc="80:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x405a86a8" loc="80:/usr/src/tinyos/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/usr/src/tinyos/tos/interfaces/UartStream.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40656940" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406565f0" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406567e0" loc="48:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40664cf0" loc="79:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="74:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40664b98" loc="79:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40663530" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="81:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406631e0" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406633d0" loc="90:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40664158" loc="65:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x406623c8" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="92:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40663e58" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40662068" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40662260" loc="99:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x406646e0" loc="72:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406657f0" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
        <documentation loc="50:/usr/src/tinyos/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406652a0" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40665490" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40665688" loc="57:/usr/src/tinyos/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/usr/src/tinyos/tos/interfaces/UartByte.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4067aa70" loc="46:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4067a918" loc="46:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40677378" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40677010" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40677218" loc="56:/usr/src/tinyos/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40674b80" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40674b80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40674ce8" loc="57:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40674ce8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406851f0" loc="64:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40674ce8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40685c18" loc="76:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40685718" loc="71:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40684038" loc="82:/usr/src/tinyos/tos/lib/timer/Counter.nc">
        <documentation loc="78:/usr/src/tinyos/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x4068f720" loc="44:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x4067fec0" loc="42:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x4068ed08" loc="49:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4068ebb0" loc="49:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x4068e408" loc="47:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x4067f648" loc="40:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x4067fa88" loc="41:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x4068f320" loc="43:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x4068fb20" loc="45:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x4068e058" loc="46:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4068fed0" loc="46:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x4068e7d8" loc="48:/usr/src/tinyos/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/usr/src/tinyos/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40414af0" loc="62:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403e6470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40331ed0" loc="52:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403f7a98" loc="76:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/usr/src/tinyos/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40718d18" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40718d18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40729490" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40729338" loc="72:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4072a010" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4072b230" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40718d18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4072a3c8" loc="56:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x407298a0" loc="75:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4072bb58" loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4072af20" loc="67:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4072b770" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40718d18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4072b618" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40718d18"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4072a790" loc="61:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4072ab40" loc="64:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4073d478" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073d478"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4074eae0" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4074e988" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40739668" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40739288" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4073d970" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073d478"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40739a20" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4074eef0" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4074e588" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4073deb0" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073d478"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4073dd58" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4073d478"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40739de8" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4074e1a8" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x4072fad0" loc="35:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4072fad0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4073f188" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4073f030" loc="70:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40741cf8" loc="51:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40741918" loc="48:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x4073f960" loc="78:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40741010" loc="40:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4072fad0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407400c8" loc="54:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4073f598" loc="73:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40740c20" loc="65:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40741550" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4072fad0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x407413f8" loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4072fad0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40740490" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40740840" loc="62:/usr/src/tinyos/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4032c010" loc="57:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4032c918" loc="72:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4032c450" loc="65:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensorControl" loc="1:./Sensor/SensorControl.nc">
      <function command="" provided="0" name="oneShotTimer" ref="0x4080d4c0" loc="11:./Sensor/SensorControl.nc">
        <interfacedef-ref qname="SensorControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="repeatTime" ref="0x4080d368" loc="11:./Sensor/SensorControl.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="repeatTimer" ref="0x407f8ea8" loc="8:./Sensor/SensorControl.nc">
        <interfacedef-ref qname="SensorControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="repeatTime" ref="0x407f8d50" loc="8:./Sensor/SensorControl.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407f88b8" loc="4:./Sensor/SensorControl.nc">
        <interfacedef-ref qname="SensorControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><nx_struct-ref name="base_oscilloscope" ref="0x407de450"/>
                <typename><typedef-ref name="base_info_t" ref="0x407def18"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="nodeInfo" ref="0x407f8760" loc="4:./Sensor/SensorControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><nx_struct-ref name="base_oscilloscope" ref="0x407de450"/>
                <typename><typedef-ref name="base_info_t" ref="0x407def18"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4080d898" loc="14:./Sensor/SensorControl.nc">
        <interfacedef-ref qname="SensorControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/usr/src/tinyos/tos/lib/timer/Timer.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4080b360" loc="53:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4080b360"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40807a80" loc="136:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="132:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4080a908" loc="83:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="80:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40808a60" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="100:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40808718" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40808900" loc="114:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40808270" loc="98:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="94:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40806460" loc="151:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="146:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40807ec8" loc="144:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="138:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4080ad98" loc="92:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="86:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4080b9b8" loc="64:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4080b860" loc="64:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40807460" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="116:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40807118" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40807300" loc="129:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4080a088" loc="73:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="66:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4080bef8" loc="73:/usr/src/tinyos/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4080a558" loc="78:/usr/src/tinyos/tos/lib/timer/Timer.nc">
        <documentation loc="75:/usr/src/tinyos/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BaseControl" loc="1:./Sensor/BaseControl.nc">
      <function command="" provided="0" name="oneShotTimer" ref="0x40810600" loc="11:./Sensor/BaseControl.nc">
        <interfacedef-ref qname="BaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="repeatTime" ref="0x408104a8" loc="11:./Sensor/BaseControl.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="repeatTimer" ref="0x40810010" loc="8:./Sensor/BaseControl.nc">
        <interfacedef-ref qname="BaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="repeatTime" ref="0x407f9e88" loc="8:./Sensor/BaseControl.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407f99f0" loc="4:./Sensor/BaseControl.nc">
        <interfacedef-ref qname="BaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><nx_struct-ref name="base_oscilloscope" ref="0x407de450"/>
                <typename><typedef-ref name="base_info_t" ref="0x407def18"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="nodeInfo" ref="0x407f9898" loc="4:./Sensor/BaseControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><nx_struct-ref name="base_oscilloscope" ref="0x407de450"/>
                <typename><typedef-ref name="base_info_t" ref="0x407def18"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408109d8" loc="14:./Sensor/BaseControl.nc">
        <interfacedef-ref qname="BaseControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4082aca0" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4082aca0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4082ae08" loc="56:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082ae08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x408220c8" loc="109:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082ae08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40824d98" loc="78:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40823a68" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082ae08"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082ae08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40823718" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082ae08"/></type-var>
          </variable>
          <variable name="dt" ref="0x40823908" loc="103:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082ae08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40823210" loc="88:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40822558" loc="116:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082ae08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40824458" loc="66:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082ae08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40824300" loc="66:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4082ae08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40824938" loc="73:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/usr/src/tinyos/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:./net/RootControl.nc">
      <documentation loc="35:./net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x4094c038" loc="43:./net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x40953850" loc="41:./net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x40953c48" loc="42:./net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:./net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x4094f910" loc="50:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094f5b8" loc="50:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x4094f7b0" loc="50:./net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40951d28" loc="44:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409519c0" loc="44:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40951bc8" loc="44:./net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40950ac0" loc="47:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40950738" loc="47:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40950960" loc="47:./net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x409515c0" loc="43:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40951468" loc="43:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x4094f168" loc="49:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094f010" loc="49:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40950350" loc="46:./net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409501f8" loc="46:./net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/usr/src/tinyos/tos/interfaces/Pool.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4094da80" loc="50:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4094da80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40962770" loc="97:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="91:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4094da80"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40963980" loc="80:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="74:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x4094df20" loc="61:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40962010" loc="89:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="82:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4094da80"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40963e30" loc="89:/usr/src/tinyos/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4094da80"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40963448" loc="72:/usr/src/tinyos/tos/interfaces/Pool.nc">
        <documentation loc="63:/usr/src/tinyos/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/usr/src/tinyos/tos/interfaces/Queue.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4094c9e8" loc="43:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4094c9e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x4094bbd0" loc="73:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4094c9e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x4094aa98" loc="90:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="83:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4094c9e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4094a940" loc="90:/usr/src/tinyos/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4094c9e8"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40038840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x40038840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x409483c8" loc="101:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="92:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4094c9e8"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40948270" loc="101:/usr/src/tinyos/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x4094b7a0" loc="65:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="60:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4094a288" loc="81:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="75:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4094c9e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x4094ce88" loc="50:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="45:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4094b2e8" loc="58:/usr/src/tinyos/tos/interfaces/Queue.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/usr/src/tinyos/tos/interfaces/Intercept.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x409ba178" loc="31:/usr/src/tinyos/tos/interfaces/Intercept.nc">
        <documentation loc="16:/usr/src/tinyos/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409bdba0" loc="31:/usr/src/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x409bdd80" loc="31:/usr/src/tinyos/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409ba010" loc="31:/usr/src/tinyos/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="33:./net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x409c94f8" loc="84:./net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x409c93a0" loc="84:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x409ccc58" loc="71:./net/ctp/CtpInfo.nc">
        <documentation loc="68:./net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x409cbef0" loc="83:./net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x409cc1f0" loc="59:./net/ctp/CtpInfo.nc">
        <documentation loc="54:./net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x409cdc10" loc="52:./net/ctp/CtpInfo.nc">
        <documentation loc="44:./net/ctp/CtpInfo.nc">
          <short>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.</short>
          <long>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.  The pointer is allocated by the&#10; caller.  If the parent is invalid, return FAIL (no info).  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x409cdab8" loc="52:./net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x409cc740" loc="66:./net/ctp/CtpInfo.nc">
        <documentation loc="61:./net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x409cb480" loc="76:./net/ctp/CtpInfo.nc">
        <documentation loc="73:./net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x409cb118" loc="76:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x409cb320" loc="76:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x409c8168" loc="86:./net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x409c8010" loc="86:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x409cd588" loc="42:./net/ctp/CtpInfo.nc">
        <documentation loc="35:./net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x409cd430" loc="42:./net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x409c9ae8" loc="85:./net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x409c9990" loc="85:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x409cba88" loc="81:./net/ctp/CtpInfo.nc">
        <documentation loc="78:./net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x409cb930" loc="81:./net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:./net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x409b7450" loc="7:./net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x409b7a00" loc="14:./net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x409b78a8" loc="14:./net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Talk" loc="1:./Sensor/250Dummy/Talk.nc">
      <function command="" provided="0" name="get_s71" ref="0x409ced80" loc="3:./Sensor/250Dummy/Talk.nc">
        <interfacedef-ref qname="Talk"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get_r71" ref="0x409ce9a0" loc="2:./Sensor/250Dummy/Talk.nc">
        <interfacedef-ref qname="Talk"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:./net/ctp/CtpPacket.nc">
      <documentation loc="33:./net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007/11/28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x409d1060" loc="64:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d2ce0" loc="64:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x409d2ed8" loc="64:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x409b6b50" loc="52:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409b67d0" loc="52:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x409b69f0" loc="52:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x409d3568" loc="58:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d3218" loc="58:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x409d3408" loc="58:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x409d22a0" loc="61:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d3f20" loc="61:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x409d2140" loc="61:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x409b63b0" loc="49:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409b6010" loc="49:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x409b6250" loc="49:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x409d5e18" loc="57:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d5cc0" loc="57:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x409d3b20" loc="60:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d39c8" loc="60:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x409d1d08" loc="67:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d19d0" loc="67:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x409d1ba8" loc="67:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x409bbb28" loc="46:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409bb788" loc="46:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x409bb9c8" loc="46:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x409cfd08" loc="70:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x409cf998" loc="70:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x409cfba8" loc="70:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x409d5168" loc="54:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d5010" loc="54:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x409d2890" loc="63:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d2738" loc="63:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x409cf560" loc="69:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x409cf1f0" loc="69:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x409cf400" loc="69:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x409d15e8" loc="66:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d1490" loc="66:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x409d5888" loc="55:./net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d5548" loc="55:./net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x409d5728" loc="55:./net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:./net/CollectionId.nc">
      <documentation loc="35:./net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x409c7a30" loc="46:./net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x40954c48"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="35:./net/4bitle/LinkEstimator.nc">
      <documentation loc="24:./net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2007/11/16 23:14:49 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x409db7f8" loc="51:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x409db6a0" loc="51:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x409dcc58" loc="44:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x409dcb00" loc="44:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x409dbda8" loc="55:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x409dbc50" loc="55:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x409dc680" loc="41:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x409dc528" loc="41:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x409d98f0" loc="61:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x409d9798" loc="61:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x409d9388" loc="58:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x409d9230" loc="58:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x409db258" loc="47:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x409db100" loc="47:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x409dc088" loc="38:./net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x409dfef8" loc="38:./net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x409f2880" loc="59:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x409f2508" loc="59:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x409f2720" loc="59:/usr/src/tinyos/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x409ee590" loc="65:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409ee1f8" loc="65:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x409ee430" loc="65:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x409ed088" loc="71:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409eeef8" loc="71:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x409efce0" loc="57:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x409ef660" loc="52:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x409ef508" loc="52:/usr/src/tinyos/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x409f1a28" loc="35:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409f1a28"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409f1b90" loc="35:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f1b90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40a08d90" loc="63:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f1b90"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a08c38" loc="63:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40a079c0" loc="70:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a07868" loc="70:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40a08240" loc="49:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a080e8" loc="49:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a064b8" loc="78:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f1b90"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a06148" loc="78:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40a06358" loc="78:/usr/src/tinyos/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f1b90"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x409e9168" loc="65:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409e9010" loc="65:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x409eb4e0" loc="46:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409eb148" loc="46:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x409eb380" loc="46:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x409ea7e8" loc="59:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409ea690" loc="59:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x409ea170" loc="53:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409ebd20" loc="53:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x409ea010" loc="53:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x409e9a88" loc="71:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409e9930" loc="71:/usr/src/tinyos/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x409f96f0" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x409f96f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40a179d8" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a17880" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a173b8" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x409f96f0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a17260" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x409f9d68" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409f9c10" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a16190" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x409f96f0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a17e08" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40a16030" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x409f96f0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a12650" loc="53:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a12650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40a12b30" loc="61:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/usr/src/tinyos/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40a19820" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40a19340" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40a191e8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40a19ca8" loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40a106c0" loc="47:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a10568" loc="47:/usr/src/tinyos/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/usr/src/tinyos/tos/interfaces/Resource.nc">
      <documentation loc="63:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40a1d1a8" loc="120:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="104:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40a1e878" loc="97:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="90:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40a1e278" loc="88:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="78:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40a1ed28" loc="102:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="99:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40a1d8a0" loc="128:/usr/src/tinyos/tos/interfaces/Resource.nc">
        <documentation loc="122:/usr/src/tinyos/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x40a3b870" loc="41:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3b718" loc="41:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40a24c40" loc="37:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40a3b2a0" loc="39:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3b148" loc="39:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40a3a800" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3a460" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a3a6a0" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40a3a060" loc="43:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3bca0" loc="43:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a3bee0" loc="43:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40a38350" loc="49:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052bec8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a381f8" loc="49:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40a38ac0" loc="51:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4052bec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a38730" loc="51:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40a38960" loc="51:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4052bec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40a3ad70" loc="47:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3ac18" loc="47:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40a38f00" loc="53:/usr/src/tinyos/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052bec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a233d0" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40a26e58" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40a23088" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a23268" loc="67:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40a207f0" loc="122:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a20490" loc="122:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a20670" loc="122:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40a21ee0" loc="110:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40a23d60" loc="83:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a23c08" loc="83:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a218e8" loc="97:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a21590" loc="97:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40a21788" loc="97:/usr/src/tinyos/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40a416a8" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x40a3d168" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3d010" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x40a56860" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a56708" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x40a555e8" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a55490" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40a57ac0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a57968" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40a46cf0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a46b98" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40a56298" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a57ef0" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a56138" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40a574f0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a57188" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a57390" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40a55010" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a56c88" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40a56e88" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x40a5b0c8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40a5b6d0" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40a5abb0" loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a5aa58" loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x40a5bd80" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a5bc28" loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40a5a4a0" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a5a348" loc="60:/usr/src/tinyos/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40a64158" loc="60:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40a658e0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40a65788" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40a65d28" loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40a65250" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40a645d0" loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4052cb60"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x40a3e370" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3e218" loc="41:/usr/src/tinyos/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x40a43d20" loc="86:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40a43868" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a434f0" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40a43708" loc="80:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40a457c8" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a45670" loc="55:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x40a45e90" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a45d38" loc="62:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40a44820" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a444a8" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40a446c0" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40a4a8b8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40a45170" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a4ad88" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40a45010" loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40a43010" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a44de0" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40a6ed38" loc="131:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6ebe0" loc="131:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40a6fed8" loc="120:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6fd80" loc="120:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x40a52e38" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a52ae8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x40a52cd8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x40a50220" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a500c8" loc="75:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40a6a190" loc="156:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6be10" loc="156:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a6a030" loc="156:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x40a51b58" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a51a00" loc="69:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x40a6e728" loc="125:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6e3e8" loc="125:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40a6e5c8" loc="125:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x40a4f1c8" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a50e10" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40a4f068" loc="88:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x40a6b998" loc="151:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6b840" loc="151:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x40a514b8" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a51360" loc="63:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x40a4d1c0" loc="99:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a4d068" loc="99:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x40a4fad0" loc="94:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a4f758" loc="94:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40a4f970" loc="94:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x40a688b8" loc="178:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052a178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40a6a7b8" loc="162:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6a660" loc="162:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40a68418" loc="173:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052bec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40a6b370" loc="146:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6b010" loc="146:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40a6b210" loc="146:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x40a508d0" loc="81:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a50778" loc="81:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40a6f8c8" loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6f578" loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x40a6f768" loc="115:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40a6c548" loc="136:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6c1f8" loc="136:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40a6c3e8" loc="136:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40a68e90" loc="185:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a68d38" loc="185:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40a4d9c8" loc="105:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a4d6a0" loc="105:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40a4d868" loc="105:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x40a52630" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a524d8" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40a6aec8" loc="168:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6ad70" loc="168:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40a6cb78" loc="141:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a6ca20" loc="141:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x40a6f090" loc="110:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a4df20" loc="110:/usr/src/tinyos/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40a40ed0" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a40b70" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40a40d70" loc="52:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40a3f398" loc="58:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40a40058" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a49ec8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40a406a0" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a40548" loc="47:/usr/src/tinyos/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40a5d5c8" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a5d470" loc="46:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x40a3dee0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a3dd88" loc="40:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x40a5dac0" loc="51:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40a5c188" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a5c030" loc="57:/usr/src/tinyos/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x40a606a0" loc="70:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a60548" loc="70:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40a54cf0" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a54b98" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40a619f0" loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40a61558" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a611f8" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40a613f8" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40a545f8" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a544a0" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40a60088" loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a61f18" loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x40a4bcb0" loc="47:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="43:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40a4b7b0" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="38:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a4b658" loc="41:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40a483b8" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="49:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a48260" loc="53:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40a48a68" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="55:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a48910" loc="59:/usr/src/tinyos/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40ab3610" loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40ab3be0" loc="72:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40ab2250" loc="79:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40ab3210" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x40ab81e0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ab8088" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40adb2a0" loc="64:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40adb148" loc="64:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ab8b50" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ab87f8" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40ab89f0" loc="54:/usr/src/tinyos/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40ada260" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ada0e8" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40acfcc8" loc="50:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40ace558" loc="60:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40ace158" loc="55:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40acf7d8" loc="45:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40acf470" loc="45:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404e6818"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40acf678" loc="45:/usr/src/tinyos/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40b2b9a8" loc="53:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40b28010" loc="61:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40b4cb90" loc="65:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40b4c6d0" loc="59:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40b4d268" loc="90:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40b4d768" loc="98:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/usr/src/tinyos/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40b454d0" loc="79:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b2ae98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b45378" loc="79:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b2ae98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40b46158" loc="53:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40b46818" loc="62:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b2ae98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40b466c0" loc="62:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40b2ae98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40b46dc8" loc="70:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/usr/src/tinyos/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40b2ae98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40c0e4f0" loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c0e378" loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40c11ce0" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c11b88" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40c2b2c8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c2b170" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40c2b748" loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40c07810" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c076b8" loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c07d58" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c07c00" loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40c05220" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c050c8" loc="57:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40c05ed0" loc="71:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40c05d78" loc="71:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40c058f0" loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c05798" loc="62:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40c045b8" loc="80:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40c04460" loc="80:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40c08b80" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40c08a28" loc="49:/usr/src/tinyos/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40c5dc98" loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40c5a670" loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40c5acb8" loc="63:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40c5ab60" loc="63:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40c59138" loc="69:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40c5a1f0" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40c595f0" loc="74:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/usr/src/tinyos/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40c5c660" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c5c508" loc="48:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40c823e8" loc="63:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40c5cdd8" loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c5cc80" loc="56:/usr/src/tinyos/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/usr/src/tinyos/tos/interfaces/Random.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40cc44b8" loc="52:/usr/src/tinyos/tos/interfaces/Random.nc">
        <documentation loc="48:/usr/src/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40cc4010" loc="46:/usr/src/tinyos/tos/interfaces/Random.nc">
        <documentation loc="42:/usr/src/tinyos/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/usr/src/tinyos/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40cafa70" loc="53:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40cafa70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40cd6168" loc="64:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40cafa70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40cd6010" loc="64:/usr/src/tinyos/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40cafa70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40cedd18" loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cedbc0" loc="55:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40cf1a08" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cf18b0" loc="40:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40ced1c8" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cf1e60" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40ced068" loc="45:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ced788" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ced630" loc="50:/usr/src/tinyos/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40cff988" loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40cff830" loc="52:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40cff350" loc="44:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/usr/src/tinyos/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40d7f880" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40d7f880"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40d7f9e8" loc="59:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d7f9e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40dac018" loc="66:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d7f9e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40d7fea8" loc="66:/usr/src/tinyos/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40d7f9e8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/usr/src/tinyos/tos/interfaces/Cache.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40e659b0" loc="44:/usr/src/tinyos/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e659b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x40e62010" loc="51:/usr/src/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="45:/usr/src/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e659b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40e65e18" loc="51:/usr/src/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e659b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40e62a48" loc="65:/usr/src/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="61:/usr/src/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x40e625f8" loc="59:/usr/src/tinyos/tos/interfaces/Cache.nc">
        <documentation loc="53:/usr/src/tinyos/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e659b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40e624a0" loc="59:/usr/src/tinyos/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40e659b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:./net/UnicastNameFreeRouting.nc">
      <documentation loc="35:./net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x40e6b578" loc="49:./net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x40e6b930" loc="51:./net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40e6b090" loc="48:./net/UnicastNameFreeRouting.nc">
        <documentation loc="43:./net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x40e6bcc8" loc="52:./net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="39:./net/ctp/CompareBit.nc">
      <documentation loc="27:./net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2008/09/27 17:00:54 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x40f7e010" loc="43:./net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40f80800" loc="43:./net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40f80c88" loc="43:./net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f80e68" loc="43:./net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:./net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:./net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009/09/21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x4103d498" loc="51:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103d340" loc="51:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x4103a590" loc="57:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103a240" loc="57:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x4103a430" loc="57:./net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x4103ed30" loc="48:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103e9b0" loc="48:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x4103ebd0" loc="48:./net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x4103bc80" loc="56:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103bb28" loc="56:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x4103e3e8" loc="47:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103e068" loc="47:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x4103e288" loc="47:./net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x4103b538" loc="54:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103b1d0" loc="54:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4103b3d8" loc="54:./net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x4103dc08" loc="53:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404e6a78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103dab0" loc="53:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x41041a90" loc="46:./net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41041710" loc="46:./net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40539bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40538950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x41041930" loc="46:./net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x409c2480"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AutoOn" loc="1:./net/AutoOn.nc">
      <function event="" provided="0" name="AutoOnControl" ref="0x41103a60" loc="2:./net/AutoOn.nc">
        <interfacedef-ref qname="AutoOn"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RunCommand" loc="1:./Command/RunCommand.nc">
      <function command="" provided="0" name="exec" ref="0x41137f10" loc="2:./Command/RunCommand.nc">
        <interfacedef-ref qname="RunCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x41137ba8" loc="2:./Command/RunCommand.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x41137db0" loc="2:./Command/RunCommand.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="40:./net/DisseminationUpdate.nc">
      <documentation loc="25:./net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x41136038" loc="40:./net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41136038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x411367e0" loc="52:./net/DisseminationUpdate.nc">
        <documentation loc="41:./net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41136038"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x41136688" loc="52:./net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x41136038"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="36:./net/DisseminationValue.nc">
      <documentation loc="25:./net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4113b928" loc="36:./net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4113b928"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x41138a08" loc="61:./net/DisseminationValue.nc">
        <documentation loc="58:./net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4113bdd0" loc="47:./net/DisseminationValue.nc">
        <documentation loc="38:./net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4113b928"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x41138548" loc="56:./net/DisseminationValue.nc">
        <documentation loc="49:./net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4113b928"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x411383f0" loc="56:./net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4113b928"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="49:./net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x4117e0c8" loc="82:./net/TrickleTimer.nc">
        <documentation loc="79:./net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x41141cb0" loc="77:./net/TrickleTimer.nc">
        <documentation loc="74:./net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x41141808" loc="72:./net/TrickleTimer.nc">
        <documentation loc="68:./net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x41147eb0" loc="60:./net/TrickleTimer.nc">
        <documentation loc="51:./net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x41141400" loc="66:./net/TrickleTimer.nc">
        <documentation loc="62:./net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:./net/drip/DisseminationCache.nc">
      <documentation loc="34:./net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x41144958" loc="47:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x411447e0" loc="47:./net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x41143570" loc="48:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41143010" loc="48:./net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x41143200" loc="48:./net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401eab78"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x41143408" loc="48:./net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x41143d30" loc="50:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x41144010" loc="45:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x41143998" loc="49:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x411443d8" loc="46:./net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40333340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/usr/src/tinyos/tos/interfaces/BitVector.nc">
      <documentation loc="34:/usr/src/tinyos/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x411d07f0" loc="45:/usr/src/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="42:/usr/src/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x411cdd20" loc="69:/usr/src/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="65:/usr/src/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411cdbc8" loc="69:/usr/src/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x411cc2f8" loc="75:/usr/src/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="71:/usr/src/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411cc1a0" loc="75:/usr/src/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x411cd1c0" loc="57:/usr/src/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="52:/usr/src/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411cd068" loc="57:/usr/src/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x411ccaa0" loc="82:/usr/src/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="77:/usr/src/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411cc760" loc="82:/usr/src/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x411cc940" loc="82:/usr/src/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403236e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x411d0bd0" loc="50:/usr/src/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="47:/usr/src/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x411cd770" loc="63:/usr/src/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="59:/usr/src/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x411cd618" loc="63:/usr/src/tinyos/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x411ccf20" loc="88:/usr/src/tinyos/tos/interfaces/BitVector.nc">
        <documentation loc="84:/usr/src/tinyos/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401eb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Execute" loc="1:./Command/Execute.nc">
      <function command="" provided="0" name="GpioControl" ref="0x41241a48" loc="4:./Command/Execute.nc">
        <interfacedef-ref qname="Execute"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x412418f0" loc="4:./Command/Execute.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="LedToggle" ref="0x412414f0" loc="2:./Command/Execute.nc">
        <interfacedef-ref qname="Execute"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x41241398" loc="2:./Command/Execute.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Ping" ref="0x4123e010" loc="6:./Command/Execute.nc">
        <interfacedef-ref qname="Execute"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x41241e08" loc="6:./Command/Execute.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401eb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Reboot" ref="0x4123e3a0" loc="8:./Command/Execute.nc">
        <interfacedef-ref qname="Execute"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="GetNetInfo" ref="0x4123e758" loc="10:./Command/Execute.nc">
        <interfacedef-ref qname="Execute"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
