<?xml version="1.0" ?><component loc="3:ESP8266C.nc" nicename="ESP8266C" qname="ESP8266C">
      <configuration/>
      <wiring>
        <wire loc="21:ESP8266C.nc">
          <from><interface-ref name="ESP8266" ref="0x405ec6f0" scoped=""/></from>
          <to><interface-ref name="ESP8266" ref="0x40703180" scoped=""/></to>
        </wire>
        <wire loc="22:ESP8266C.nc">
          <from><interface-ref name="ESP_INIT" ref="0x40703648" scoped=""/></from>
          <to><interface-ref name="Timer" ref="0x40767cd8" scoped=""/></to>
        </wire>
        <wire loc="23:ESP8266C.nc">
          <from><interface-ref name="ESP_RESET" ref="0x407019b8" scoped=""/></from>
          <to><interface-ref name="Timer" ref="0x409a4bf0" scoped=""/></to>
        </wire>
        <wire loc="24:ESP8266C.nc">
          <from><interface-ref name="ESP_MODE_1" ref="0x40714d18" scoped=""/></from>
          <to><interface-ref name="Timer" ref="0x409a1ab0" scoped=""/></to>
        </wire>
        <wire loc="25:ESP8266C.nc">
          <from><interface-ref name="ESP_CON_AP" ref="0x40710110" scoped=""/></from>
          <to><interface-ref name="Timer" ref="0x409bd8f0" scoped=""/></to>
        </wire>
        <wire loc="26:ESP8266C.nc">
          <from><interface-ref name="ESP_SERVER" ref="0x4070e490" scoped=""/></from>
          <to><interface-ref name="Timer" ref="0x409b96f0" scoped=""/></to>
        </wire>
        <wire loc="27:ESP8266C.nc">
          <from><interface-ref name="ESP_SENDING" ref="0x40721868" scoped=""/></from>
          <to><interface-ref name="Timer" ref="0x409b65a8" scoped=""/></to>
        </wire>
        <wire loc="28:ESP8266C.nc">
          <from><interface-ref name="ESP_SEND_PRESENT" ref="0x4071fbf8" scoped=""/></from>
          <to><interface-ref name="Timer" ref="0x409b23b8" scoped=""/></to>
        </wire>
        <wire loc="29:ESP8266C.nc">
          <from><interface-ref name="Leds" ref="0x4071ce20" scoped=""/></from>
          <to><interface-ref name="Leds" ref="0x4076a820" scoped=""/></to>
        </wire>
        <wire loc="32:ESP8266C.nc">
          <from><interface-ref name="SerialControl" ref="0x40718ad0" scoped=""/></from>
          <to><interface-ref name="StdControl" ref="0x409ce468" scoped=""/></to>
        </wire>
        <wire loc="33:ESP8266C.nc">
          <from><interface-ref name="UartStream" ref="0x407278b0" scoped=""/></from>
          <to><interface-ref name="UartStream" ref="0x409ce8e8" scoped=""/></to>
        </wire>
      </wiring>
    <specification><interface loc="5:ESP8266C.nc" name="ESP8266" provided="1" ref="0x405ec6f0">
      <component-ref nicename="ESP8266C" qname="ESP8266C"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ESP8266" ref="0x405ec6f0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="ESP8266" qname="ESP8266"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x405ec8c8" scoped=""/>
      </interface-functions>
    </interface></specification><referenced><interface loc="19:ESP8266P.nc" name="ESP_SEND_PRESENT" provided="0" ref="0x4071fbf8">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ESP_SEND_PRESENT" ref="0x4071fbf8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x4071c730" scoped=""/>
        <function-ref name="fired" ref="0x4071d9b0" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x4071c0f0" scoped=""/>
        <function-ref name="isOneShot" ref="0x4071de60" scoped=""/>
        <function-ref name="getdt" ref="0x4071cbe0" scoped=""/>
        <function-ref name="gett0" ref="0x4071c988" scoped=""/>
        <function-ref name="isRunning" ref="0x4071dc08" scoped=""/>
        <function-ref name="startPeriodic" ref="0x4071d258" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x4071c410" scoped=""/>
        <function-ref name="startOneShot" ref="0x4071d4d8" scoped=""/>
        <function-ref name="stop" ref="0x4071d758" scoped=""/>
      </interface-functions>
    </interface><interface loc="18:ESP8266P.nc" name="ESP_SENDING" provided="0" ref="0x40721868">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ESP_SENDING" ref="0x40721868" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x4071f368" scoped=""/>
        <function-ref name="fired" ref="0x40720608" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x40720d10" scoped=""/>
        <function-ref name="isOneShot" ref="0x40720ab8" scoped=""/>
        <function-ref name="getdt" ref="0x4071f818" scoped=""/>
        <function-ref name="gett0" ref="0x4071f5c0" scoped=""/>
        <function-ref name="isRunning" ref="0x40720860" scoped=""/>
        <function-ref name="startPeriodic" ref="0x40721e90" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x4071f048" scoped=""/>
        <function-ref name="startOneShot" ref="0x40720130" scoped=""/>
        <function-ref name="stop" ref="0x407203b0" scoped=""/>
      </interface-functions>
    </interface><interface loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc" name="Timer" provided="1" ref="0x40767cd8">
      <component-ref nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_INIT"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Timer" ref="0x40767cd8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x408c58a8" scoped=""/>
        <function-ref name="fired" ref="0x408afaa8" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x408c5268" scoped=""/>
        <function-ref name="isOneShot" ref="0x408c5010" scoped=""/>
        <function-ref name="getdt" ref="0x408c5d58" scoped=""/>
        <function-ref name="gett0" ref="0x408c5b00" scoped=""/>
        <function-ref name="isRunning" ref="0x408afd00" scoped=""/>
        <function-ref name="startPeriodic" ref="0x408af350" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x408c5588" scoped=""/>
        <function-ref name="startOneShot" ref="0x408af5d0" scoped=""/>
        <function-ref name="stop" ref="0x408af850" scoped=""/>
      </interface-functions>
    </interface><interface loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc" name="Timer" provided="1" ref="0x409a4bf0">
      <component-ref nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_RESET"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Timer" ref="0x409a4bf0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x409a2730" scoped=""/>
        <function-ref name="fired" ref="0x409a39b0" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x409a20f0" scoped=""/>
        <function-ref name="isOneShot" ref="0x409a3e60" scoped=""/>
        <function-ref name="getdt" ref="0x409a2be0" scoped=""/>
        <function-ref name="gett0" ref="0x409a2988" scoped=""/>
        <function-ref name="isRunning" ref="0x409a3c08" scoped=""/>
        <function-ref name="startPeriodic" ref="0x409a3258" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x409a2410" scoped=""/>
        <function-ref name="startOneShot" ref="0x409a34d8" scoped=""/>
        <function-ref name="stop" ref="0x409a3758" scoped=""/>
      </interface-functions>
    </interface><interface loc="23:ESP8266P.nc" name="UartStream" provided="0" ref="0x407278b0">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="UartStream" ref="0x407278b0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.UartStream" qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" ref="0x40727a88" scoped=""/>
        <function-ref name="receivedByte" ref="0x40727b68" scoped=""/>
        <function-ref name="receive" ref="0x40727c48" scoped=""/>
        <function-ref name="enableReceiveInterrupt" ref="0x40727d28" scoped=""/>
        <function-ref name="receiveDone" ref="0x40727e08" scoped=""/>
        <function-ref name="disableReceiveInterrupt" ref="0x40727ee8" scoped=""/>
        <function-ref name="sendDone" ref="0x40719010" scoped=""/>
      </interface-functions>
    </interface><interface loc="20:ESP8266P.nc" name="Leds" provided="0" ref="0x4071ce20">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Leds" ref="0x4071ce20" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" ref="0x4071b010" scoped=""/>
        <function-ref name="led0Toggle" ref="0x4071b0f0" scoped=""/>
        <function-ref name="led1On" ref="0x4071b1d0" scoped=""/>
        <function-ref name="led1Toggle" ref="0x4071b2b0" scoped=""/>
        <function-ref name="led2Toggle" ref="0x4071b390" scoped=""/>
        <function-ref name="get" ref="0x4071b470" scoped=""/>
        <function-ref name="led1Off" ref="0x4071b550" scoped=""/>
        <function-ref name="led2Off" ref="0x4071b8d0" scoped=""/>
        <function-ref name="set" ref="0x4071b630" scoped=""/>
        <function-ref name="led0On" ref="0x4071b710" scoped=""/>
        <function-ref name="led2On" ref="0x4071b7f0" scoped=""/>
      </interface-functions>
    </interface><interface loc="15:ESP8266P.nc" name="ESP_MODE_1" provided="0" ref="0x40714d18">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ESP_MODE_1" ref="0x40714d18" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x407128a8" scoped=""/>
        <function-ref name="fired" ref="0x40713aa8" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x40712268" scoped=""/>
        <function-ref name="isOneShot" ref="0x40712010" scoped=""/>
        <function-ref name="getdt" ref="0x40712d58" scoped=""/>
        <function-ref name="gett0" ref="0x40712b00" scoped=""/>
        <function-ref name="isRunning" ref="0x40713d00" scoped=""/>
        <function-ref name="startPeriodic" ref="0x40713350" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x40712588" scoped=""/>
        <function-ref name="startOneShot" ref="0x407135d0" scoped=""/>
        <function-ref name="stop" ref="0x40713850" scoped=""/>
      </interface-functions>
    </interface><interface loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc" name="Timer" provided="1" ref="0x409b23b8">
      <component-ref nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_SEND_PRESENT"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Timer" ref="0x409b23b8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x409b1e98" scoped=""/>
        <function-ref name="fired" ref="0x409b1150" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x409b1858" scoped=""/>
        <function-ref name="isOneShot" ref="0x409b1600" scoped=""/>
        <function-ref name="getdt" ref="0x409b0368" scoped=""/>
        <function-ref name="gett0" ref="0x409b0110" scoped=""/>
        <function-ref name="isRunning" ref="0x409b13a8" scoped=""/>
        <function-ref name="startPeriodic" ref="0x409b29e0" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x409b1b78" scoped=""/>
        <function-ref name="startOneShot" ref="0x409b2c60" scoped=""/>
        <function-ref name="stop" ref="0x409b2ee0" scoped=""/>
      </interface-functions>
    </interface><interface loc="17:ESP8266P.nc" name="ESP_SERVER" provided="0" ref="0x4070e490">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ESP_SERVER" ref="0x4070e490" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x40721010" scoped=""/>
        <function-ref name="fired" ref="0x4070d268" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x4070d970" scoped=""/>
        <function-ref name="isOneShot" ref="0x4070d718" scoped=""/>
        <function-ref name="getdt" ref="0x407214c0" scoped=""/>
        <function-ref name="gett0" ref="0x40721268" scoped=""/>
        <function-ref name="isRunning" ref="0x4070d4c0" scoped=""/>
        <function-ref name="startPeriodic" ref="0x4070eab8" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x4070dc90" scoped=""/>
        <function-ref name="startOneShot" ref="0x4070ed38" scoped=""/>
        <function-ref name="stop" ref="0x4070d010" scoped=""/>
      </interface-functions>
    </interface><interface loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc" name="Timer" provided="1" ref="0x409a1ab0">
      <component-ref nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_MODE_1"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Timer" ref="0x409a1ab0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x409be650" scoped=""/>
        <function-ref name="fired" ref="0x409a0858" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x409be010" scoped=""/>
        <function-ref name="isOneShot" ref="0x409a0d08" scoped=""/>
        <function-ref name="getdt" ref="0x409beb00" scoped=""/>
        <function-ref name="gett0" ref="0x409be8a8" scoped=""/>
        <function-ref name="isRunning" ref="0x409a0ab0" scoped=""/>
        <function-ref name="startPeriodic" ref="0x409a0100" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x409be330" scoped=""/>
        <function-ref name="startOneShot" ref="0x409a0380" scoped=""/>
        <function-ref name="stop" ref="0x409a0600" scoped=""/>
      </interface-functions>
    </interface><interface loc="5:/usr/src/tinyos/tos/platforms/telosa/PlatformSerialC.nc" name="UartStream" provided="1" ref="0x409ce8e8">
      <component-ref nicename="tos.platforms.telosa.PlatformSerialC" qname="PlatformSerialC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="UartStream" ref="0x409ce8e8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.UartStream" qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" ref="0x409ceac0" scoped=""/>
        <function-ref name="receivedByte" ref="0x409ceba0" scoped=""/>
        <function-ref name="receive" ref="0x409cec80" scoped=""/>
        <function-ref name="enableReceiveInterrupt" ref="0x409ced60" scoped=""/>
        <function-ref name="receiveDone" ref="0x409cee40" scoped=""/>
        <function-ref name="disableReceiveInterrupt" ref="0x409cef20" scoped=""/>
        <function-ref name="sendDone" ref="0x409cb018" scoped=""/>
      </interface-functions>
    </interface><interface loc="14:ESP8266P.nc" name="ESP_RESET" provided="0" ref="0x407019b8">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ESP_RESET" ref="0x407019b8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x407144c8" scoped=""/>
        <function-ref name="fired" ref="0x40716768" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x40716e70" scoped=""/>
        <function-ref name="isOneShot" ref="0x40716c18" scoped=""/>
        <function-ref name="getdt" ref="0x40714978" scoped=""/>
        <function-ref name="gett0" ref="0x40714720" scoped=""/>
        <function-ref name="isRunning" ref="0x407169c0" scoped=""/>
        <function-ref name="startPeriodic" ref="0x40716010" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x407141a8" scoped=""/>
        <function-ref name="startOneShot" ref="0x40716290" scoped=""/>
        <function-ref name="stop" ref="0x40716510" scoped=""/>
      </interface-functions>
    </interface><interface loc="13:ESP8266P.nc" name="ESP_INIT" provided="0" ref="0x40703648">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ESP_INIT" ref="0x40703648" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x40701170" scoped=""/>
        <function-ref name="fired" ref="0x407023f8" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x40702b00" scoped=""/>
        <function-ref name="isOneShot" ref="0x407028a8" scoped=""/>
        <function-ref name="getdt" ref="0x40701620" scoped=""/>
        <function-ref name="gett0" ref="0x407013c8" scoped=""/>
        <function-ref name="isRunning" ref="0x40702650" scoped=""/>
        <function-ref name="startPeriodic" ref="0x40703c70" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x40702e20" scoped=""/>
        <function-ref name="startOneShot" ref="0x40703ef0" scoped=""/>
        <function-ref name="stop" ref="0x407021a0" scoped=""/>
      </interface-functions>
    </interface><interface loc="46:/usr/src/tinyos/tos/system/LedsC.nc" name="Leds" provided="1" ref="0x4076a820">
      <component-ref nicename="tos.system.LedsC" qname="LedsC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Leds" ref="0x4076a820" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.Leds" qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" ref="0x4076a9f8" scoped=""/>
        <function-ref name="led0Toggle" ref="0x4076aad8" scoped=""/>
        <function-ref name="led1On" ref="0x4076abb8" scoped=""/>
        <function-ref name="led1Toggle" ref="0x4076ac98" scoped=""/>
        <function-ref name="led2Toggle" ref="0x4076ad78" scoped=""/>
        <function-ref name="get" ref="0x4076ae58" scoped=""/>
        <function-ref name="led1Off" ref="0x40766010" scoped=""/>
        <function-ref name="led2Off" ref="0x40766390" scoped=""/>
        <function-ref name="set" ref="0x407660f0" scoped=""/>
        <function-ref name="led0On" ref="0x407661d0" scoped=""/>
        <function-ref name="led2On" ref="0x407662b0" scoped=""/>
      </interface-functions>
    </interface><interface loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc" name="Timer" provided="1" ref="0x409b96f0">
      <component-ref nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_SERVER"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Timer" ref="0x409b96f0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x409b7248" scoped=""/>
        <function-ref name="fired" ref="0x409b84e8" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x409b8bf0" scoped=""/>
        <function-ref name="isOneShot" ref="0x409b8998" scoped=""/>
        <function-ref name="getdt" ref="0x409b76f8" scoped=""/>
        <function-ref name="gett0" ref="0x409b74a0" scoped=""/>
        <function-ref name="isRunning" ref="0x409b8740" scoped=""/>
        <function-ref name="startPeriodic" ref="0x409b9d18" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x409b8f10" scoped=""/>
        <function-ref name="startOneShot" ref="0x409b8010" scoped=""/>
        <function-ref name="stop" ref="0x409b8290" scoped=""/>
      </interface-functions>
    </interface><interface loc="22:ESP8266P.nc" name="SerialControl" provided="0" ref="0x40718ad0">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="SerialControl" ref="0x40718ad0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.StdControl" qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" ref="0x40718ca8" scoped=""/>
        <function-ref name="stop" ref="0x40718d88" scoped=""/>
      </interface-functions>
    </interface><interface loc="11:ESP8266P.nc" name="ESP8266" provided="1" ref="0x40703180">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ESP8266" ref="0x40703180" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="ESP8266" qname="ESP8266"/>
      </instance>
      <interface-functions>
        <function-ref name="init" ref="0x40703358" scoped=""/>
      </interface-functions>
    </interface><interface loc="16:ESP8266P.nc" name="ESP_CON_AP" provided="0" ref="0x40710110">
      <component-ref nicename="ESP8266P" qname="ESP8266P"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="ESP_CON_AP" ref="0x40710110" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x4070fc00" scoped=""/>
        <function-ref name="fired" ref="0x40710e90" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x4070f5c0" scoped=""/>
        <function-ref name="isOneShot" ref="0x4070f368" scoped=""/>
        <function-ref name="getdt" ref="0x4070e0f0" scoped=""/>
        <function-ref name="gett0" ref="0x4070fe58" scoped=""/>
        <function-ref name="isRunning" ref="0x4070f110" scoped=""/>
        <function-ref name="startPeriodic" ref="0x40710738" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x4070f8e0" scoped=""/>
        <function-ref name="startOneShot" ref="0x407109b8" scoped=""/>
        <function-ref name="stop" ref="0x40710c38" scoped=""/>
      </interface-functions>
    </interface><interface loc="4:/usr/src/tinyos/tos/platforms/telosa/PlatformSerialC.nc" name="StdControl" provided="1" ref="0x409ce468">
      <component-ref nicename="tos.platforms.telosa.PlatformSerialC" qname="PlatformSerialC"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="StdControl" ref="0x409ce468" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.interfaces.StdControl" qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" ref="0x409ce640" scoped=""/>
        <function-ref name="stop" ref="0x409ce720" scoped=""/>
      </interface-functions>
    </interface><interface loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc" name="Timer" provided="1" ref="0x409b65a8">
      <component-ref nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_SENDING"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Timer" ref="0x409b65a8" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x409b30d8" scoped=""/>
        <function-ref name="fired" ref="0x409b5368" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x409b5a70" scoped=""/>
        <function-ref name="isOneShot" ref="0x409b5818" scoped=""/>
        <function-ref name="getdt" ref="0x409b3588" scoped=""/>
        <function-ref name="gett0" ref="0x409b3330" scoped=""/>
        <function-ref name="isRunning" ref="0x409b55c0" scoped=""/>
        <function-ref name="startPeriodic" ref="0x409b6bd0" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x409b5d90" scoped=""/>
        <function-ref name="startOneShot" ref="0x409b6e50" scoped=""/>
        <function-ref name="stop" ref="0x409b5110" scoped=""/>
      </interface-functions>
    </interface><interface loc="45:/usr/src/tinyos/tos/system/TimerMilliC.nc" name="Timer" provided="1" ref="0x409bd8f0">
      <component-ref nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_CON_AP"/>
      <type-interface alignment="I:2" size="I:2"><interface-ref name="Timer" ref="0x409bd8f0" scoped=""/></type-interface>
      <instance>
        <interfacedef-ref nicename="tos.lib.timer.Timer" qname="Timer"/>
        <arguments>
          <type-tag alignment="I:2" size="I:2"><struct-ref ref="0x406ed668"/>
            <typename><typedef-ref name="TMilli" ref="0x406ed830"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" ref="0x409bb3f8" scoped=""/>
        <function-ref name="fired" ref="0x409bc688" scoped=""/>
        <function-ref name="startPeriodicAt" ref="0x409bcd90" scoped=""/>
        <function-ref name="isOneShot" ref="0x409bcb38" scoped=""/>
        <function-ref name="getdt" ref="0x409bb8a8" scoped=""/>
        <function-ref name="gett0" ref="0x409bb650" scoped=""/>
        <function-ref name="isRunning" ref="0x409bc8e0" scoped=""/>
        <function-ref name="startPeriodic" ref="0x409bdf18" scoped=""/>
        <function-ref name="startOneShotAt" ref="0x409bb0d8" scoped=""/>
        <function-ref name="startOneShot" ref="0x409bc1b0" scoped=""/>
        <function-ref name="stop" ref="0x409bc430" scoped=""/>
      </interface-functions>
    </interface><component loc="45:/usr/src/tinyos/tos/system/LedsC.nc" nicename="tos.system.LedsC" qname="LedsC">
      <documentation loc="34:/usr/src/tinyos/tos/system/LedsC.nc">
        <short>

 The basic TinyOS LEDs abstraction.</short>
        <long>

 The basic TinyOS LEDs abstraction.

 @author Phil Buonadonna
 @author David Gay
 @author Philip Levis
 @author Joe Polastre
</long>
      </documentation>
      <configuration/>
      <wiring>
        <wire loc="51:/usr/src/tinyos/tos/system/LedsC.nc">
          <from><interface-ref name="Leds" ref="0x4076a820" scoped=""/></from>
          <to><interface-ref name="Leds" ref="0x4077b010" scoped=""/></to>
        </wire>
        <wire loc="53:/usr/src/tinyos/tos/system/LedsC.nc">
          <from><interface-ref name="Init" ref="0x4077ea38" scoped=""/></from>
          <to><interface-ref name="Init" ref="0x40766c10" scoped=""/></to>
        </wire>
        <wire loc="54:/usr/src/tinyos/tos/system/LedsC.nc">
          <from><interface-ref name="Led0" ref="0x40777e10" scoped=""/></from>
          <to><interface-ref name="Led0" ref="0x40765c30" scoped=""/></to>
        </wire>
        <wire loc="55:/usr/src/tinyos/tos/system/LedsC.nc">
          <from><interface-ref name="Led1" ref="0x4077a820" scoped=""/></from>
          <to><interface-ref name="Led1" ref="0x4077f680" scoped=""/></to>
        </wire>
        <wire loc="56:/usr/src/tinyos/tos/system/LedsC.nc">
          <from><interface-ref name="Led2" ref="0x407792e0" scoped=""/></from>
          <to><interface-ref name="Led2" ref="0x4077e0b0" scoped=""/></to>
        </wire>
      </wiring>
    </component><component loc="2:/usr/src/tinyos/tos/platforms/telosa/PlatformSerialC.nc" nicename="tos.platforms.telosa.PlatformSerialC" qname="PlatformSerialC">
      <configuration/>
      <wiring>
        <wire loc="14:/usr/src/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
          <from><interface-ref name="UartByte" ref="0x409c76e8" scoped=""/></from>
          <to><interface-ref name="UartByte" ref="0x40b26010" scoped=""/></to>
        </wire>
        <wire loc="13:/usr/src/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
          <from><interface-ref name="UartStream" ref="0x409ce8e8" scoped=""/></from>
          <to><interface-ref name="UartStream" ref="0x40b27748" scoped=""/></to>
        </wire>
        <wire loc="17:/usr/src/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
          <from><interface-ref name="StdControl" ref="0x409ce468" scoped=""/></from>
          <to><interface-ref name="StdControl" ref="0x40b25550" scoped=""/></to>
        </wire>
        <wire loc="18:/usr/src/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
          <from><interface-ref name="Msp430UartConfigure" ref="0x40b26428" scoped=""/></from>
          <to><interface-ref name="Msp430UartConfigure" ref="0x40b25a28" scoped=""/></to>
        </wire>
        <wire loc="19:/usr/src/tinyos/tos/platforms/telosa/PlatformSerialC.nc">
          <from><interface-ref name="Resource" ref="0x40b25db8" scoped=""/></from>
          <to><interface-ref name="Resource" ref="0x409c9c10" scoped=""/></to>
        </wire>
      </wiring>
    </component><component loc="44(ESP8266C.ESP_SEND_PRESENT):/usr/src/tinyos/tos/system/TimerMilliC.nc" nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_SEND_PRESENT">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>
 The virtualized millisecond timer abstraction.</short>
        <long>
 The virtualized millisecond timer abstraction. Instantiating this 
 component gives an independent millisecond granularity timer.

 @author Philip Levis
 @date   January 16 2006
 @see    TEP 102: Timers
</long>
      </documentation>
      <instance number="6">
        <component-ref nicename="tos.system.TimerMilliC" qname="TimerMilliC"/>
      </instance>
      <configuration/>
      <wiring>
        <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
          <from><interface-ref name="Timer" ref="0x409b23b8" scoped=""/></from>
          <to><interface-ref name="TimerMilli" ref="0x408c41b0" scoped=""/>
          <arguments>
            <value cst="I:6">
              <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned=""/>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component><component loc="44(ESP8266C.ESP_MODE_1):/usr/src/tinyos/tos/system/TimerMilliC.nc" nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_MODE_1">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>
 The virtualized millisecond timer abstraction.</short>
        <long>
 The virtualized millisecond timer abstraction. Instantiating this 
 component gives an independent millisecond granularity timer.

 @author Philip Levis
 @date   January 16 2006
 @see    TEP 102: Timers
</long>
      </documentation>
      <instance number="2">
        <component-ref nicename="tos.system.TimerMilliC" qname="TimerMilliC"/>
      </instance>
      <configuration/>
      <wiring>
        <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
          <from><interface-ref name="Timer" ref="0x409a1ab0" scoped=""/></from>
          <to><interface-ref name="TimerMilli" ref="0x408c41b0" scoped=""/>
          <arguments>
            <value cst="I:2">
              <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned=""/>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component><component loc="44(ESP8266C.ESP_SERVER):/usr/src/tinyos/tos/system/TimerMilliC.nc" nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_SERVER">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>
 The virtualized millisecond timer abstraction.</short>
        <long>
 The virtualized millisecond timer abstraction. Instantiating this 
 component gives an independent millisecond granularity timer.

 @author Philip Levis
 @date   January 16 2006
 @see    TEP 102: Timers
</long>
      </documentation>
      <instance number="4">
        <component-ref nicename="tos.system.TimerMilliC" qname="TimerMilliC"/>
      </instance>
      <configuration/>
      <wiring>
        <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
          <from><interface-ref name="Timer" ref="0x409b96f0" scoped=""/></from>
          <to><interface-ref name="TimerMilli" ref="0x408c41b0" scoped=""/>
          <arguments>
            <value cst="I:4">
              <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned=""/>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component><component loc="44(ESP8266C.ESP_RESET):/usr/src/tinyos/tos/system/TimerMilliC.nc" nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_RESET">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>
 The virtualized millisecond timer abstraction.</short>
        <long>
 The virtualized millisecond timer abstraction. Instantiating this 
 component gives an independent millisecond granularity timer.

 @author Philip Levis
 @date   January 16 2006
 @see    TEP 102: Timers
</long>
      </documentation>
      <instance number="1">
        <component-ref nicename="tos.system.TimerMilliC" qname="TimerMilliC"/>
      </instance>
      <configuration/>
      <wiring>
        <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
          <from><interface-ref name="Timer" ref="0x409a4bf0" scoped=""/></from>
          <to><interface-ref name="TimerMilli" ref="0x408c41b0" scoped=""/>
          <arguments>
            <value cst="I:1">
              <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned=""/>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component><component loc="44(ESP8266C.ESP_INIT):/usr/src/tinyos/tos/system/TimerMilliC.nc" nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_INIT">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>
 The virtualized millisecond timer abstraction.</short>
        <long>
 The virtualized millisecond timer abstraction. Instantiating this 
 component gives an independent millisecond granularity timer.

 @author Philip Levis
 @date   January 16 2006
 @see    TEP 102: Timers
</long>
      </documentation>
      <instance number="0">
        <component-ref nicename="tos.system.TimerMilliC" qname="TimerMilliC"/>
      </instance>
      <configuration/>
      <wiring>
        <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
          <from><interface-ref name="Timer" ref="0x40767cd8" scoped=""/></from>
          <to><interface-ref name="TimerMilli" ref="0x408c41b0" scoped=""/>
          <arguments>
            <value cst="I:0">
              <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned=""/>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component><component loc="44(ESP8266C.ESP_SENDING):/usr/src/tinyos/tos/system/TimerMilliC.nc" nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_SENDING">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>
 The virtualized millisecond timer abstraction.</short>
        <long>
 The virtualized millisecond timer abstraction. Instantiating this 
 component gives an independent millisecond granularity timer.

 @author Philip Levis
 @date   January 16 2006
 @see    TEP 102: Timers
</long>
      </documentation>
      <instance number="5">
        <component-ref nicename="tos.system.TimerMilliC" qname="TimerMilliC"/>
      </instance>
      <configuration/>
      <wiring>
        <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
          <from><interface-ref name="Timer" ref="0x409b65a8" scoped=""/></from>
          <to><interface-ref name="TimerMilli" ref="0x408c41b0" scoped=""/>
          <arguments>
            <value cst="I:5">
              <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned=""/>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component><component loc="9:ESP8266P.nc" nicename="ESP8266P" qname="ESP8266P" safe="">
      <documentation loc="1:ESP8266P.nc">
        <short>
 Implementation for ESP8266P Driver.</short>
        <long>
 Implementation for ESP8266P Driver.
 Create by TJ, TaeHaun
 Date 2015. 02. 06
*</long>
      </documentation>
      <module/>
    </component><component loc="44(ESP8266C.ESP_CON_AP):/usr/src/tinyos/tos/system/TimerMilliC.nc" nicename="tos.system.TimerMilliC" qname="ESP8266C.ESP_CON_AP">
      <documentation loc="33:/usr/src/tinyos/tos/system/TimerMilliC.nc">
        <short>
 The virtualized millisecond timer abstraction.</short>
        <long>
 The virtualized millisecond timer abstraction. Instantiating this 
 component gives an independent millisecond granularity timer.

 @author Philip Levis
 @date   January 16 2006
 @see    TEP 102: Timers
</long>
      </documentation>
      <instance number="3">
        <component-ref nicename="tos.system.TimerMilliC" qname="TimerMilliC"/>
      </instance>
      <configuration/>
      <wiring>
        <wire loc="52:/usr/src/tinyos/tos/system/TimerMilliC.nc">
          <from><interface-ref name="Timer" ref="0x409bd8f0" scoped=""/></from>
          <to><interface-ref name="TimerMilli" ref="0x408c41b0" scoped=""/>
          <arguments>
            <value cst="I:3">
              <type-int alignment="I:2" cname="unsigned int" size="I:2" unsigned=""/>
            </value>
          </arguments>
          </to>
        </wire>
      </wiring>
    </component></referenced></component>